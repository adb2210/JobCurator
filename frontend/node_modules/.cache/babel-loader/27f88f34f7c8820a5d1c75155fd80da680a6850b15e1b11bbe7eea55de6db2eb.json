{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { FaBookmark, FaRegBookmark } from \"react-icons/fa\";\n\n// const JobCard = ({ job }) => {\n//   const [isBookmarked, setIsBookmarked] = useState(false);\n\n//   useEffect(() => {\n//     // Check if this job is already bookmarked\n//     const currentBookmarks = JSON.parse(localStorage.getItem(\"bookmarkedJobs\")) || [];\n//     const alreadyBookmarked = currentBookmarks.some((bookmark) => bookmark.id === job.id);\n//     setIsBookmarked(alreadyBookmarked);\n//   }, [job.id]);\n\n//   const toggleBookmark = () => {\n//     const currentBookmarks = JSON.parse(localStorage.getItem(\"bookmarkedJobs\")) || [];\n//     let updatedBookmarks;\n\n//     if (isBookmarked) {\n//       // Remove the job from bookmarks\n//       updatedBookmarks = currentBookmarks.filter((bookmark) => bookmark.id !== job.id);\n//     } else {\n//       // Add the job to bookmarks\n//       updatedBookmarks = [...currentBookmarks, job];\n//     }\n\n//     // Update localStorage and state\n//     localStorage.setItem(\"bookmarkedJobs\", JSON.stringify(updatedBookmarks));\n//     setIsBookmarked(!isBookmarked);\n//   };\n\n//   return (\n//     <div className=\"bg-[#222831] text-white rounded-lg shadow-lg p-6 flex flex-col justify-between h-full relative\">\n//       {/* Bookmark Icon */}\n//       <div\n//         className=\"absolute top-4 right-4 text-2xl cursor-pointer text-[#00ADB5] hover:text-[#00A8A0] transition duration-300\"\n//         onClick={toggleBookmark}\n//       >\n//         {isBookmarked ? <FaBookmark /> : <FaRegBookmark />}\n//       </div>\n\n//       <div className=\"flex flex-col space-y-4\">\n//         {/* Job Title */}\n//         <h2 className=\"text-2xl font-semibold\">{job.role}</h2>\n\n//         {/* Company Name */}\n//         <p className=\"text-lg font-medium text-[#00ADB5]\">{job.company}</p>\n\n//         {/* Job Location */}\n//         <p className=\"text-gray-400\">{job.location?job.location:\"City:NA\"}</p>\n\n//         {/* Description */}\n//         <p className=\"text-gray-300\">\n//           {job.datePosted ? job.datePosted : \"Date:NA\"}\n//         </p>\n//       </div>\n\n//       <div className=\"mt-6\">\n//         {/* Source */}\n//         <div className=\"flex justify-between items-center\">\n//           <span className=\"text-sm text-gray-400\">{job.source}</span>\n//           <a\n//             href={job.jobUrl}\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\"\n//             className=\"bg-[#00ADB5] text-white px-4 py-2 rounded-lg hover:bg-[#00A8A0] transition duration-300\"\n//           >\n//             Apply Now\n//           </a>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default JobCard;","map":{"version":3,"names":[],"sources":["D:/project/web/job-portal/src/components/JobCard.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { FaBookmark, FaRegBookmark } from \"react-icons/fa\";\r\n\r\n// const JobCard = ({ job }) => {\r\n//   const [isBookmarked, setIsBookmarked] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     // Check if this job is already bookmarked\r\n//     const currentBookmarks = JSON.parse(localStorage.getItem(\"bookmarkedJobs\")) || [];\r\n//     const alreadyBookmarked = currentBookmarks.some((bookmark) => bookmark.id === job.id);\r\n//     setIsBookmarked(alreadyBookmarked);\r\n//   }, [job.id]);\r\n\r\n//   const toggleBookmark = () => {\r\n//     const currentBookmarks = JSON.parse(localStorage.getItem(\"bookmarkedJobs\")) || [];\r\n//     let updatedBookmarks;\r\n\r\n//     if (isBookmarked) {\r\n//       // Remove the job from bookmarks\r\n//       updatedBookmarks = currentBookmarks.filter((bookmark) => bookmark.id !== job.id);\r\n//     } else {\r\n//       // Add the job to bookmarks\r\n//       updatedBookmarks = [...currentBookmarks, job];\r\n//     }\r\n\r\n//     // Update localStorage and state\r\n//     localStorage.setItem(\"bookmarkedJobs\", JSON.stringify(updatedBookmarks));\r\n//     setIsBookmarked(!isBookmarked);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"bg-[#222831] text-white rounded-lg shadow-lg p-6 flex flex-col justify-between h-full relative\">\r\n//       {/* Bookmark Icon */}\r\n//       <div\r\n//         className=\"absolute top-4 right-4 text-2xl cursor-pointer text-[#00ADB5] hover:text-[#00A8A0] transition duration-300\"\r\n//         onClick={toggleBookmark}\r\n//       >\r\n//         {isBookmarked ? <FaBookmark /> : <FaRegBookmark />}\r\n//       </div>\r\n\r\n//       <div className=\"flex flex-col space-y-4\">\r\n//         {/* Job Title */}\r\n//         <h2 className=\"text-2xl font-semibold\">{job.role}</h2>\r\n\r\n//         {/* Company Name */}\r\n//         <p className=\"text-lg font-medium text-[#00ADB5]\">{job.company}</p>\r\n\r\n//         {/* Job Location */}\r\n//         <p className=\"text-gray-400\">{job.location?job.location:\"City:NA\"}</p>\r\n\r\n//         {/* Description */}\r\n//         <p className=\"text-gray-300\">\r\n//           {job.datePosted ? job.datePosted : \"Date:NA\"}\r\n//         </p>\r\n//       </div>\r\n\r\n//       <div className=\"mt-6\">\r\n//         {/* Source */}\r\n//         <div className=\"flex justify-between items-center\">\r\n//           <span className=\"text-sm text-gray-400\">{job.source}</span>\r\n//           <a\r\n//             href={job.jobUrl}\r\n//             target=\"_blank\"\r\n//             rel=\"noopener noreferrer\"\r\n//             className=\"bg-[#00ADB5] text-white px-4 py-2 rounded-lg hover:bg-[#00A8A0] transition duration-300\"\r\n//           >\r\n//             Apply Now\r\n//           </a>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default JobCard;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}