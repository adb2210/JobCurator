{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\web\\\\job-portal\\\\src\\\\components\\\\JobCard.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { FaBookmark, FaRegBookmark } from \"react-icons/fa\";\n\n// const JobCard = ({ job }) => {\n//   const [isBookmarked, setIsBookmarked] = useState(false);\n\n//   useEffect(() => {\n//     // Check if this job is already bookmarked\n//     const currentBookmarks = JSON.parse(localStorage.getItem(\"bookmarkedJobs\")) || [];\n//     const alreadyBookmarked = currentBookmarks.some((bookmark) => bookmark.id === job.id);\n//     setIsBookmarked(alreadyBookmarked);\n//   }, [job.id]);\n\n//   const toggleBookmark = () => {\n//     const currentBookmarks = JSON.parse(localStorage.getItem(\"bookmarkedJobs\")) || [];\n//     let updatedBookmarks;\n\n//     if (isBookmarked) {\n//       // Remove the job from bookmarks\n//       updatedBookmarks = currentBookmarks.filter((bookmark) => bookmark.id !== job.id);\n//     } else {\n//       // Add the job to bookmarks\n//       updatedBookmarks = [...currentBookmarks, job];\n//     }\n\n//     // Update localStorage and state\n//     localStorage.setItem(\"bookmarkedJobs\", JSON.stringify(updatedBookmarks));\n//     setIsBookmarked(!isBookmarked);\n//   };\n\n//   return (\n//     <div className=\"bg-[#222831] text-white rounded-lg shadow-lg p-6 flex flex-col justify-between h-full relative\">\n//       {/* Bookmark Icon */}\n//       <div\n//         className=\"absolute top-4 right-4 text-2xl cursor-pointer text-[#00ADB5] hover:text-[#00A8A0] transition duration-300\"\n//         onClick={toggleBookmark}\n//       >\n//         {isBookmarked ? <FaBookmark /> : <FaRegBookmark />}\n//       </div>\n\n//       <div className=\"flex flex-col space-y-4\">\n//         {/* Job Title */}\n//         <h2 className=\"text-2xl font-semibold\">{job.role}</h2>\n\n//         {/* Company Name */}\n//         <p className=\"text-lg font-medium text-[#00ADB5]\">{job.company}</p>\n\n//         {/* Job Location */}\n//         <p className=\"text-gray-400\">{job.location?job.location:\"City:NA\"}</p>\n\n//         {/* Description */}\n//         <p className=\"text-gray-300\">\n//           {job.datePosted ? job.datePosted : \"Date:NA\"}\n//         </p>\n//       </div>\n\n//       <div className=\"mt-6\">\n//         {/* Source */}\n//         <div className=\"flex justify-between items-center\">\n//           <span className=\"text-sm text-gray-400\">{job.source}</span>\n//           <a\n//             href={job.jobUrl}\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\"\n//             className=\"bg-[#00ADB5] text-white px-4 py-2 rounded-lg hover:bg-[#00A8A0] transition duration-300\"\n//           >\n//             Apply Now\n//           </a>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default JobCard;\nimport React, { useState, useEffect } from \"react\";\nimport { FaBookmark, FaRegBookmark } from \"react-icons/fa\";\nimport axios from \"axios\"; // Make sure you have axios installed\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobCard = ({\n  job,\n  userId\n}) => {\n  _s();\n  const getUserEmail = () => {\n    const token = localStorage.getItem('authToken'); // Replace with your token storage key\n    if (!token) return null;\n    try {\n      const decodedToken = jwtDecode(token); // Use jwtDecode here\n      console.log(decodedToken);\n      return decodedToken.sub; // Replace with the correct field from your token\n    } catch (error) {\n      console.error(\"Invalid token:\", error);\n      return null;\n    }\n  };\n  const email = getUserEmail();\n  const [isBookmarked, setIsBookmarked] = useState(false);\n  useEffect(() => {\n    //Check if this job is already bookmarked by the user\n    axios.get(`http://localhost:8080/api/bookmarks/check/${email}/${job.id}`, {\n      email,\n      jobId: job.id\n    }).then(response => {\n      setIsBookmarked(response.data.isBookmarked); // Assuming response contains { isBookmarked: true/false }\n    }).catch(error => console.error(\"Error checking bookmark status:\", error));\n  }, [email, job.id]);\n  const toggleBookmark = () => {\n    if (isBookmarked) {\n      // Remove the job from bookmarks\n      axios.delete(`http://localhost:8080/api/bookmarks/${email}/${job.id}`, {\n        email,\n        jobId: job.id\n      }) // Use proper string interpolation here\n      .then(() => {\n        setIsBookmarked(false);\n      }).catch(error => console.error(\"Error removing bookmark:\", error));\n    } else {\n      // Add the job to bookmarks\n      axios.post(`http://localhost:8080/api/bookmarks/${email}/${job.id}`, {\n        email,\n        jobId: job.id\n      }) // Corrected string interpolation\n      .then(() => {\n        setIsBookmarked(true);\n      }).catch(error => console.error(\"Error adding bookmark:\", error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#222831] text-white rounded-lg shadow-lg p-6 flex flex-col justify-between h-full relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-4 text-2xl cursor-pointer text-[#00ADB5] hover:text-[#00A8A0] transition duration-300 z-10\",\n      onClick: toggleBookmark // Ensure this is triggering the toggleBookmark function\n      ,\n      style: {\n        zIndex: 10\n      } // Added explicit z-index to ensure the icon is clickable\n      ,\n      children: isBookmarked ? /*#__PURE__*/_jsxDEV(FaBookmark, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(FaRegBookmark, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold\",\n        children: job.role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg font-medium text-[#00ADB5]\",\n        children: job.company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-400\",\n        children: job.location ? job.location : \"City:NA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-300\",\n        children: job.datePosted ? job.datePosted : \"Date:NA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-400\",\n          children: job.source\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: job.jobUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"bg-[#00ADB5] text-white px-4 py-2 rounded-lg hover:bg-[#00A8A0] transition duration-300\",\n          children: \"Apply Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(JobCard, \"HVjfSBH6ahpS7Dxg0PeB8Q0IWXk=\");\n_c = JobCard;\nexport default JobCard;\nvar _c;\n$RefreshReg$(_c, \"JobCard\");","map":{"version":3,"names":["React","useState","useEffect","FaBookmark","FaRegBookmark","axios","jwtDecode","jsxDEV","_jsxDEV","JobCard","job","userId","_s","getUserEmail","token","localStorage","getItem","decodedToken","console","log","sub","error","email","isBookmarked","setIsBookmarked","get","id","jobId","then","response","data","catch","toggleBookmark","delete","post","className","children","onClick","style","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","role","company","location","datePosted","source","href","jobUrl","target","rel","_c","$RefreshReg$"],"sources":["D:/project/web/job-portal/src/components/JobCard.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { FaBookmark, FaRegBookmark } from \"react-icons/fa\";\r\n\r\n// const JobCard = ({ job }) => {\r\n//   const [isBookmarked, setIsBookmarked] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     // Check if this job is already bookmarked\r\n//     const currentBookmarks = JSON.parse(localStorage.getItem(\"bookmarkedJobs\")) || [];\r\n//     const alreadyBookmarked = currentBookmarks.some((bookmark) => bookmark.id === job.id);\r\n//     setIsBookmarked(alreadyBookmarked);\r\n//   }, [job.id]);\r\n\r\n//   const toggleBookmark = () => {\r\n//     const currentBookmarks = JSON.parse(localStorage.getItem(\"bookmarkedJobs\")) || [];\r\n//     let updatedBookmarks;\r\n\r\n//     if (isBookmarked) {\r\n//       // Remove the job from bookmarks\r\n//       updatedBookmarks = currentBookmarks.filter((bookmark) => bookmark.id !== job.id);\r\n//     } else {\r\n//       // Add the job to bookmarks\r\n//       updatedBookmarks = [...currentBookmarks, job];\r\n//     }\r\n\r\n//     // Update localStorage and state\r\n//     localStorage.setItem(\"bookmarkedJobs\", JSON.stringify(updatedBookmarks));\r\n//     setIsBookmarked(!isBookmarked);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"bg-[#222831] text-white rounded-lg shadow-lg p-6 flex flex-col justify-between h-full relative\">\r\n//       {/* Bookmark Icon */}\r\n//       <div\r\n//         className=\"absolute top-4 right-4 text-2xl cursor-pointer text-[#00ADB5] hover:text-[#00A8A0] transition duration-300\"\r\n//         onClick={toggleBookmark}\r\n//       >\r\n//         {isBookmarked ? <FaBookmark /> : <FaRegBookmark />}\r\n//       </div>\r\n\r\n//       <div className=\"flex flex-col space-y-4\">\r\n//         {/* Job Title */}\r\n//         <h2 className=\"text-2xl font-semibold\">{job.role}</h2>\r\n\r\n//         {/* Company Name */}\r\n//         <p className=\"text-lg font-medium text-[#00ADB5]\">{job.company}</p>\r\n\r\n//         {/* Job Location */}\r\n//         <p className=\"text-gray-400\">{job.location?job.location:\"City:NA\"}</p>\r\n\r\n//         {/* Description */}\r\n//         <p className=\"text-gray-300\">\r\n//           {job.datePosted ? job.datePosted : \"Date:NA\"}\r\n//         </p>\r\n//       </div>\r\n\r\n//       <div className=\"mt-6\">\r\n//         {/* Source */}\r\n//         <div className=\"flex justify-between items-center\">\r\n//           <span className=\"text-sm text-gray-400\">{job.source}</span>\r\n//           <a\r\n//             href={job.jobUrl}\r\n//             target=\"_blank\"\r\n//             rel=\"noopener noreferrer\"\r\n//             className=\"bg-[#00ADB5] text-white px-4 py-2 rounded-lg hover:bg-[#00A8A0] transition duration-300\"\r\n//           >\r\n//             Apply Now\r\n//           </a>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default JobCard;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { FaBookmark, FaRegBookmark } from \"react-icons/fa\";\r\nimport axios from \"axios\"; // Make sure you have axios installed\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nconst JobCard = ({ job, userId }) => {\r\n  const getUserEmail = () => {\r\n    const token = localStorage.getItem('authToken'); // Replace with your token storage key\r\n    if (!token) return null;\r\n  \r\n    try {\r\n      const decodedToken = jwtDecode(token); // Use jwtDecode here\r\n      console.log(decodedToken);\r\n      return decodedToken.sub; // Replace with the correct field from your token\r\n    } catch (error) {\r\n      console.error(\"Invalid token:\", error);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  const email = getUserEmail();\r\n  const [isBookmarked, setIsBookmarked] = useState(false);\r\n  useEffect(() => {\r\n    //Check if this job is already bookmarked by the user\r\n    axios\r\n      .get(`http://localhost:8080/api/bookmarks/check/${email}/${job.id}`,{ email, jobId: job.id })\r\n      .then((response) => {\r\n        setIsBookmarked(response.data.isBookmarked); // Assuming response contains { isBookmarked: true/false }\r\n      })\r\n      .catch((error) => console.error(\"Error checking bookmark status:\", error));\r\n  }, [email, job.id]);\r\n\r\n  const toggleBookmark = () => {\r\n    if (isBookmarked) {\r\n      // Remove the job from bookmarks\r\n      axios\r\n        .delete(`http://localhost:8080/api/bookmarks/${email}/${job.id}`,{email, jobId: job.id })  // Use proper string interpolation here\r\n        .then(() => {\r\n          setIsBookmarked(false);\r\n        })\r\n        .catch((error) => console.error(\"Error removing bookmark:\", error));\r\n    } else {\r\n      // Add the job to bookmarks\r\n      axios\r\n        .post(`http://localhost:8080/api/bookmarks/${email}/${job.id}`, { email, jobId:job.id }) // Corrected string interpolation\r\n        .then(() => {\r\n          setIsBookmarked(true);\r\n        })\r\n        .catch((error) => console.error(\"Error adding bookmark:\", error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-[#222831] text-white rounded-lg shadow-lg p-6 flex flex-col justify-between h-full relative\">\r\n      {/* Bookmark Icon */}\r\n      <div\r\n        className=\"absolute top-4 right-4 text-2xl cursor-pointer text-[#00ADB5] hover:text-[#00A8A0] transition duration-300 z-10\"\r\n        onClick={toggleBookmark}  // Ensure this is triggering the toggleBookmark function\r\n        style={{ zIndex: 10 }}     // Added explicit z-index to ensure the icon is clickable\r\n      >\r\n        {isBookmarked ? <FaBookmark /> : <FaRegBookmark />}\r\n      </div>\r\n\r\n      <div className=\"flex flex-col space-y-4\">\r\n        {/* Job Title */}\r\n        <h2 className=\"text-2xl font-semibold\">{job.role}</h2>\r\n\r\n        {/* Company Name */}\r\n        <p className=\"text-lg font-medium text-[#00ADB5]\">{job.company}</p>\r\n\r\n        {/* Job Location */}\r\n        <p className=\"text-gray-400\">{job.location ? job.location : \"City:NA\"}</p>\r\n\r\n        {/* Description */}\r\n        <p className=\"text-gray-300\">{job.datePosted ? job.datePosted : \"Date:NA\"}</p>\r\n      </div>\r\n\r\n      <div className=\"mt-6\">\r\n        {/* Source */}\r\n        <div className=\"flex justify-between items-center\">\r\n          <span className=\"text-sm text-gray-400\">{job.source}</span>\r\n          <a\r\n            href={job.jobUrl}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"bg-[#00ADB5] text-white px-4 py-2 rounded-lg hover:bg-[#00A8A0] transition duration-300\"\r\n          >\r\n            Apply Now\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobCard;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}