{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\web\\\\job-portal\\\\src\\\\pages\\\\Profile.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useState, useEffect } from \"react\";\n// // import axios from \"axios\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import JobCard from \"../components/JobCard\";\n// // import { jwtDecode } from \"jwt-decode\";\n\n// // const Profile = () => {\n// //   const [userData, setUserData] = useState(null);\n// //   const [isEditing, setIsEditing] = useState(false);\n// //   const [passwordData, setPasswordData] = useState({\n// //     currentPassword: \"\",\n// //     newPassword: \"\",\n// //     confirmPassword: \"\",\n// //   });\n// //   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\n// //   const [showPasswordFields, setShowPasswordFields] = useState(false);\n// //   const navigate = useNavigate();\n\n// //   const getUserEmail = () => {\n// //     const token = localStorage.getItem(\"authToken\");\n// //     if (!token) return null;\n\n// //     try {\n// //       const decodedToken = jwtDecode(token);\n// //       return decodedToken.sub;\n// //     } catch (error) {\n// //       console.error(\"Invalid token:\", error);\n// //       return null;\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     const fetchData = async () => {\n// //       const email = getUserEmail();\n// //       if (!email) {\n// //         navigate(\"/login\");\n// //         return;\n// //       }\n\n// //       try {\n// //         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\n// //         const { data: bookmarked } = await axios.get(`http://localhost:8080/api/bookmarks/jobs/${email}`);\n// //         setUserData(user);\n// //         setBookmarkedJobs(bookmarked);\n// //       } catch (error) {\n// //         console.error(\"Error fetching user data:\", error);\n// //         navigate(\"/login\");\n// //       }\n// //     };\n\n// //     fetchData();\n// //   }, [navigate]);\n\n// //   const handleSave = async (e) => {\n// //     e.preventDefault();\n\n// //     try {\n// //       const email = getUserEmail();\n// //       if (showPasswordFields) {\n// //         const { currentPassword, newPassword, confirmPassword } = passwordData;\n// //         if (!currentPassword || !newPassword || !confirmPassword) {\n// //           alert(\"Please fill in all password fields.\");\n// //           return;\n// //         }\n\n// //         if (newPassword !== confirmPassword) {\n// //           alert(\"New password and confirm password do not match.\");\n// //           return;\n// //         }\n\n// //         await axios.put(`http://localhost:8080/api/users/update/${email}`, {\n// //           ...userData,\n// //           currentPassword,\n// //           newPassword,\n// //         });\n// //         alert(\"Password updated successfully.\");\n// //       } else {\n// //         await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\n// //         alert(\"Profile updated successfully.\");\n// //       }\n\n// //       setIsEditing(false);\n// //       setShowPasswordFields(false);\n// //       setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\n// //     } catch (error) {\n// //       console.error(\"Error updating user data:\", error);\n// //       alert(\"Failed to update profile.\");\n// //     }\n// //   };\n\n// //   const handleInputChange = (e) => {\n// //     setUserData({ ...userData, [e.target.name]: e.target.value });\n// //   };\n\n// //   const handlePasswordChange = (e) => {\n// //     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\n// //   };\n\n// //   if (!userData) {\n// //     return (\n// //       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\n// //         <div>Loading...</div>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\n// //       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\n// //         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\n// //           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\n// //           <form onSubmit={handleSave} className=\"space-y-6\">\n// //             {Object.keys(userData).map((field) =>\n// //               ![\"bookmarkedJobs\", \"skills\", \"password\"].includes(field) ? (\n// //                 <div className=\"flex justify-between\" key={field}>\n// //                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\n// //                   {isEditing ? (\n// //                     <input\n// //                       type=\"text\"\n// //                       name={field}\n// //                       value={userData[field]}\n// //                       onChange={handleInputChange}\n// //                       className=\"border p-2 rounded-md w-40\"\n// //                     />\n// //                   ) : (\n// //                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\n// //                   )}\n// //                 </div>\n// //               ) : null\n// //             )}\n\n// //             <div className=\"flex justify-between\">\n// //               <strong className=\"text-lg text-gray-600\">Skills:</strong>\n// //               {isEditing ? (\n// //                 <input\n// //                   type=\"text\"\n// //                   name=\"skills\"\n// //                   value={userData.skills?.join(\", \") || \"\"}\n// //                   onChange={(e) =>\n// //                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\n// //                   }\n// //                   className=\"border p-2 rounded-md w-40\"\n// //                 />\n// //               ) : (\n// //                 <span className=\"text-lg text-gray-900\">{userData.skills?.join(\", \") || \"No skills added\"}</span>\n// //               )}\n// //             </div>\n\n// //             {showPasswordFields && (\n// //               <>\n// //                 <div className=\"flex justify-between\">\n// //                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\n// //                   <input\n// //                     type=\"password\"\n// //                     name=\"currentPassword\"\n// //                     value={passwordData.currentPassword}\n// //                     onChange={handlePasswordChange}\n// //                     className=\"border p-2 rounded-md w-40\"\n// //                   />\n// //                 </div>\n// //                 <div className=\"flex justify-between\">\n// //                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\n// //                   <input\n// //                     type=\"password\"\n// //                     name=\"newPassword\"\n// //                     value={passwordData.newPassword}\n// //                     onChange={handlePasswordChange}\n// //                     className=\"border p-2 rounded-md w-40\"\n// //                   />\n// //                 </div>\n// //                 <div className=\"flex justify-between\">\n// //                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\n// //                   <input\n// //                     type=\"password\"\n// //                     name=\"confirmPassword\"\n// //                     value={passwordData.confirmPassword}\n// //                     onChange={handlePasswordChange}\n// //                     className=\"border p-2 rounded-md w-40\"\n// //                   />\n// //                 </div>\n// //               </>\n// //             )}\n\n// //             <div className=\"flex space-x-4 mt-6\">\n// //               {isEditing ? (\n// //                 <>\n// //                   <button\n// //                     type=\"submit\"\n// //                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\n// //                   >\n// //                     Save\n// //                   </button>\n// //                   <button\n// //                     type=\"button\"\n// //                     onClick={() => setShowPasswordFields(!showPasswordFields)}\n// //                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\n// //                   >\n// //                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\n// //                   </button>\n// //                 </>\n// //               ) : (\n// //                 <button\n// //                   type=\"button\"\n// //                   onClick={() => setIsEditing(true)}\n// //                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\n// //                 >\n// //                   Edit Profile\n// //                 </button>\n// //               )}\n// //             </div>\n// //           </form>\n// //         </div>\n\n// //         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\n// //           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\n// //           {bookmarkedJobs.length > 0 ? (\n// //             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n// //               {bookmarkedJobs.map((job) => (\n// //                 <JobCard job={job} key={job.id} showDetails={true} />\n// //               ))}\n// //             </div>\n// //           ) : (\n// //             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\n// //           )}\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Profile;\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import JobCard from \"../components/JobCard\";\n// import { jwtDecode } from \"jwt-decode\";\n\n// const Profile = () => {\n//   const [userData, setUserData] = useState(null);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\n//   const navigate = useNavigate();\n\n//   const getUserEmail = () => {\n//     const token = localStorage.getItem(\"authToken\");\n//     if (!token) return null;\n\n//     try {\n//       const decodedToken = jwtDecode(token);\n//       return decodedToken.sub;\n//     } catch (error) {\n//       console.error(\"Invalid token:\", error);\n//       return null;\n//     }\n//   };\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const email = getUserEmail();\n//       if (!email) {\n//         navigate(\"/login\");\n//         return;\n//       }\n\n//       try {\n//         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\n//         const { data: bookmarked } = await axios.get(`http://localhost:8080/api/bookmarks/jobs/${email}`);\n//         setUserData(user);\n//         setBookmarkedJobs(bookmarked);\n//       } catch (error) {\n//         console.error(\"Error fetching user data:\", error);\n//         navigate(\"/login\");\n//       }\n//     };\n\n//     fetchData();\n//   }, [navigate]);\n\n//   const handleSave = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const email = getUserEmail();\n//       await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\n//       alert(\"Profile updated successfully.\");\n//       setIsEditing(false);\n//     } catch (error) {\n//       console.error(\"Error updating user data:\", error);\n//       alert(\"Failed to update profile.\");\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\n//   };\n\n//   if (!userData) {\n//     return (\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\n//         <div>Loading...</div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\n//           <form onSubmit={handleSave} className=\"space-y-6\">\n//             {[\"name\", \"phoneNumber\", \"gender\", \"city\", \"state\"].map((field) => (\n//               <div className=\"flex justify-between\" key={field}>\n//                 <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\n//                 {isEditing ? (\n//                   <input\n//                     type=\"text\"\n//                     name={field}\n//                     value={userData[field]}\n//                     onChange={handleInputChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 ) : (\n//                   <span className=\"text-lg text-gray-900\">{userData[field]}</span>\n//                 )}\n//               </div>\n//             ))}\n\n//             <div className=\"flex justify-between\">\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\n//               {isEditing ? (\n//                 <input\n//                   type=\"text\"\n//                   name=\"skills\"\n//                   value={userData.skills?.join(\", \") || \"\"}\n//                   onChange={(e) =>\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\n//                   }\n//                   className=\"border p-2 rounded-md w-40\"\n//                 />\n//               ) : (\n//                 <span className=\"text-lg text-gray-900\">{userData.skills?.join(\", \") || \"No skills added\"}</span>\n//               )}\n//             </div>\n\n//             <div className=\"flex space-x-4 mt-6\">\n//               {isEditing ? (\n//                 <>\n//                   <button\n//                     type=\"submit\"\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\n//                   >\n//                     Save\n//                   </button>\n//                   <button\n//                     type=\"button\"\n//                     onClick={() => setIsEditing(false)}\n//                     className=\"bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600\"\n//                   >\n//                     Cancel\n//                   </button>\n//                 </>\n//               ) : (\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => setIsEditing(true)}\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\n//                 >\n//                   Edit Profile\n//                 </button>\n//               )}\n//             </div>\n//           </form>\n//         </div>\n\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\n//           {bookmarkedJobs.length > 0 ? (\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n//               {bookmarkedJobs.map((job) => (\n//                 <JobCard job={job} key={job.id} showDetails={true} />\n//               ))}\n//             </div>\n//           ) : (\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profile;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport JobCard from \"../components/JobCard\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  var _userData$skills, _userData$skills2;\n  const [userData, setUserData] = useState(null);\n  const [originalData, setOriginalData] = useState(null); // Store original data for comparison\n  const [isEditing, setIsEditing] = useState(false);\n  const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\n  const navigate = useNavigate();\n  const getUserEmail = () => {\n    const token = localStorage.getItem(\"authToken\");\n    if (!token) return null;\n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.sub;\n    } catch (error) {\n      console.error(\"Invalid token:\", error);\n      return null;\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const email = getUserEmail();\n      if (!email) {\n        navigate(\"/login\");\n        return;\n      }\n      try {\n        const {\n          data: user\n        } = await axios.get(`http://localhost:8080/api/users/${email}`);\n        const {\n          data: bookmarked\n        } = await axios.get(`http://localhost:8080/api/bookmarks/jobs/${email}`);\n        setUserData(user);\n        setOriginalData(user); // Store the fetched data as original data\n        setBookmarkedJobs(bookmarked);\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n        navigate(\"/login\");\n      }\n    };\n    fetchData();\n  }, [navigate]);\n  const handleSave = async e => {\n    e.preventDefault();\n\n    // Check if any changes were made\n    if (JSON.stringify(userData) === JSON.stringify(originalData)) {\n      alert(\"No changes made to the profile.\");\n      setIsEditing(false);\n      return;\n    }\n    try {\n      const email = getUserEmail();\n      await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\n      alert(\"Profile updated successfully.\");\n      setIsEditing(false);\n      setOriginalData(userData); // Update original data after a successful save\n    } catch (error) {\n      console.error(\"Error updating user data:\", error);\n      alert(\"Failed to update profile.\");\n    }\n  };\n  const handleInputChange = e => {\n    setUserData({\n      ...userData,\n      [e.target.name]: e.target.value\n    });\n  };\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 pt-16 px-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-semibold text-center mb-6 text-gray-800\",\n          children: \"Your Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSave,\n          className: \"space-y-6\",\n          children: [[\"name\", \"phoneNumber\", \"gender\", \"city\", \"state\"].map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-lg text-gray-600 capitalize\",\n              children: [field, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: field,\n              value: userData[field],\n              onChange: handleInputChange,\n              className: \"border p-2 rounded-md w-40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg text-gray-900\",\n              children: userData[field]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 19\n            }, this)]\n          }, field, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-lg text-gray-600\",\n              children: \"Skills:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"skills\",\n              value: ((_userData$skills = userData.skills) === null || _userData$skills === void 0 ? void 0 : _userData$skills.join(\", \")) || \"\",\n              onChange: e => setUserData({\n                ...userData,\n                skills: e.target.value.split(\",\").map(s => s.trim())\n              }),\n              className: \"border p-2 rounded-md w-40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg text-gray-900\",\n              children: ((_userData$skills2 = userData.skills) === null || _userData$skills2 === void 0 ? void 0 : _userData$skills2.join(\", \")) || \"No skills added\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-4 mt-6\",\n            children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {\n                  setIsEditing(false);\n                  setUserData(originalData); // Revert changes if canceled\n                },\n                className: \"bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setIsEditing(true),\n              className: \"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\",\n              children: \"Edit Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-2 bg-white shadow-xl rounded-lg p-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-semibold text-center mb-6 text-gray-800\",\n          children: \"Saved Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), bookmarkedJobs.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n          children: bookmarkedJobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n            job: job,\n            showDetails: true\n          }, job.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-gray-500\",\n          children: \"You haven't bookmarked any jobs yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 477,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"l+guHcL+ZZMQ+UXSd7ALoy8kZ00=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","JobCard","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","_userData$skills","_userData$skills2","userData","setUserData","originalData","setOriginalData","isEditing","setIsEditing","bookmarkedJobs","setBookmarkedJobs","navigate","getUserEmail","token","localStorage","getItem","decodedToken","sub","error","console","fetchData","email","data","user","get","bookmarked","handleSave","e","preventDefault","JSON","stringify","alert","post","handleInputChange","target","name","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","field","type","onChange","skills","join","split","s","trim","onClick","length","job","showDetails","id","_c","$RefreshReg$"],"sources":["D:/project/web/job-portal/src/pages/Profile.jsx"],"sourcesContent":["// // import React, { useState, useEffect } from \"react\";\r\n// // import axios from \"axios\";\r\n// // import { useNavigate } from \"react-router-dom\";\r\n// // import JobCard from \"../components/JobCard\";\r\n// // import { jwtDecode } from \"jwt-decode\";\r\n\r\n// // const Profile = () => {\r\n// //   const [userData, setUserData] = useState(null);\r\n// //   const [isEditing, setIsEditing] = useState(false);\r\n// //   const [passwordData, setPasswordData] = useState({\r\n// //     currentPassword: \"\",\r\n// //     newPassword: \"\",\r\n// //     confirmPassword: \"\",\r\n// //   });\r\n// //   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\r\n// //   const [showPasswordFields, setShowPasswordFields] = useState(false);\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const getUserEmail = () => {\r\n// //     const token = localStorage.getItem(\"authToken\");\r\n// //     if (!token) return null;\r\n\r\n// //     try {\r\n// //       const decodedToken = jwtDecode(token);\r\n// //       return decodedToken.sub;\r\n// //     } catch (error) {\r\n// //       console.error(\"Invalid token:\", error);\r\n// //       return null;\r\n// //     }\r\n// //   };\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchData = async () => {\r\n// //       const email = getUserEmail();\r\n// //       if (!email) {\r\n// //         navigate(\"/login\");\r\n// //         return;\r\n// //       }\r\n\r\n// //       try {\r\n// //         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\r\n// //         const { data: bookmarked } = await axios.get(`http://localhost:8080/api/bookmarks/jobs/${email}`);\r\n// //         setUserData(user);\r\n// //         setBookmarkedJobs(bookmarked);\r\n// //       } catch (error) {\r\n// //         console.error(\"Error fetching user data:\", error);\r\n// //         navigate(\"/login\");\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchData();\r\n// //   }, [navigate]);\r\n\r\n// //   const handleSave = async (e) => {\r\n// //     e.preventDefault();\r\n\r\n// //     try {\r\n// //       const email = getUserEmail();\r\n// //       if (showPasswordFields) {\r\n// //         const { currentPassword, newPassword, confirmPassword } = passwordData;\r\n// //         if (!currentPassword || !newPassword || !confirmPassword) {\r\n// //           alert(\"Please fill in all password fields.\");\r\n// //           return;\r\n// //         }\r\n\r\n// //         if (newPassword !== confirmPassword) {\r\n// //           alert(\"New password and confirm password do not match.\");\r\n// //           return;\r\n// //         }\r\n\r\n// //         await axios.put(`http://localhost:8080/api/users/update/${email}`, {\r\n// //           ...userData,\r\n// //           currentPassword,\r\n// //           newPassword,\r\n// //         });\r\n// //         alert(\"Password updated successfully.\");\r\n// //       } else {\r\n// //         await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\r\n// //         alert(\"Profile updated successfully.\");\r\n// //       }\r\n\r\n// //       setIsEditing(false);\r\n// //       setShowPasswordFields(false);\r\n// //       setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\r\n// //     } catch (error) {\r\n// //       console.error(\"Error updating user data:\", error);\r\n// //       alert(\"Failed to update profile.\");\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleInputChange = (e) => {\r\n// //     setUserData({ ...userData, [e.target.name]: e.target.value });\r\n// //   };\r\n\r\n// //   const handlePasswordChange = (e) => {\r\n// //     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\r\n// //   };\r\n\r\n// //   if (!userData) {\r\n// //     return (\r\n// //       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\r\n// //         <div>Loading...</div>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n\r\n// //   return (\r\n// //     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\r\n// //       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n// //         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\r\n// //           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\r\n// //           <form onSubmit={handleSave} className=\"space-y-6\">\r\n// //             {Object.keys(userData).map((field) =>\r\n// //               ![\"bookmarkedJobs\", \"skills\", \"password\"].includes(field) ? (\r\n// //                 <div className=\"flex justify-between\" key={field}>\r\n// //                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\r\n// //                   {isEditing ? (\r\n// //                     <input\r\n// //                       type=\"text\"\r\n// //                       name={field}\r\n// //                       value={userData[field]}\r\n// //                       onChange={handleInputChange}\r\n// //                       className=\"border p-2 rounded-md w-40\"\r\n// //                     />\r\n// //                   ) : (\r\n// //                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\r\n// //                   )}\r\n// //                 </div>\r\n// //               ) : null\r\n// //             )}\r\n\r\n// //             <div className=\"flex justify-between\">\r\n// //               <strong className=\"text-lg text-gray-600\">Skills:</strong>\r\n// //               {isEditing ? (\r\n// //                 <input\r\n// //                   type=\"text\"\r\n// //                   name=\"skills\"\r\n// //                   value={userData.skills?.join(\", \") || \"\"}\r\n// //                   onChange={(e) =>\r\n// //                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\r\n// //                   }\r\n// //                   className=\"border p-2 rounded-md w-40\"\r\n// //                 />\r\n// //               ) : (\r\n// //                 <span className=\"text-lg text-gray-900\">{userData.skills?.join(\", \") || \"No skills added\"}</span>\r\n// //               )}\r\n// //             </div>\r\n\r\n// //             {showPasswordFields && (\r\n// //               <>\r\n// //                 <div className=\"flex justify-between\">\r\n// //                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\r\n// //                   <input\r\n// //                     type=\"password\"\r\n// //                     name=\"currentPassword\"\r\n// //                     value={passwordData.currentPassword}\r\n// //                     onChange={handlePasswordChange}\r\n// //                     className=\"border p-2 rounded-md w-40\"\r\n// //                   />\r\n// //                 </div>\r\n// //                 <div className=\"flex justify-between\">\r\n// //                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\r\n// //                   <input\r\n// //                     type=\"password\"\r\n// //                     name=\"newPassword\"\r\n// //                     value={passwordData.newPassword}\r\n// //                     onChange={handlePasswordChange}\r\n// //                     className=\"border p-2 rounded-md w-40\"\r\n// //                   />\r\n// //                 </div>\r\n// //                 <div className=\"flex justify-between\">\r\n// //                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\r\n// //                   <input\r\n// //                     type=\"password\"\r\n// //                     name=\"confirmPassword\"\r\n// //                     value={passwordData.confirmPassword}\r\n// //                     onChange={handlePasswordChange}\r\n// //                     className=\"border p-2 rounded-md w-40\"\r\n// //                   />\r\n// //                 </div>\r\n// //               </>\r\n// //             )}\r\n\r\n// //             <div className=\"flex space-x-4 mt-6\">\r\n// //               {isEditing ? (\r\n// //                 <>\r\n// //                   <button\r\n// //                     type=\"submit\"\r\n// //                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\r\n// //                   >\r\n// //                     Save\r\n// //                   </button>\r\n// //                   <button\r\n// //                     type=\"button\"\r\n// //                     onClick={() => setShowPasswordFields(!showPasswordFields)}\r\n// //                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\r\n// //                   >\r\n// //                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\r\n// //                   </button>\r\n// //                 </>\r\n// //               ) : (\r\n// //                 <button\r\n// //                   type=\"button\"\r\n// //                   onClick={() => setIsEditing(true)}\r\n// //                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\r\n// //                 >\r\n// //                   Edit Profile\r\n// //                 </button>\r\n// //               )}\r\n// //             </div>\r\n// //           </form>\r\n// //         </div>\r\n\r\n// //         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\r\n// //           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\r\n// //           {bookmarkedJobs.length > 0 ? (\r\n// //             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n// //               {bookmarkedJobs.map((job) => (\r\n// //                 <JobCard job={job} key={job.id} showDetails={true} />\r\n// //               ))}\r\n// //             </div>\r\n// //           ) : (\r\n// //             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\r\n// //           )}\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Profile;\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import JobCard from \"../components/JobCard\";\r\n// import { jwtDecode } from \"jwt-decode\";\r\n\r\n// const Profile = () => {\r\n//   const [userData, setUserData] = useState(null);\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\r\n//   const navigate = useNavigate();\r\n\r\n//   const getUserEmail = () => {\r\n//     const token = localStorage.getItem(\"authToken\");\r\n//     if (!token) return null;\r\n\r\n//     try {\r\n//       const decodedToken = jwtDecode(token);\r\n//       return decodedToken.sub;\r\n//     } catch (error) {\r\n//       console.error(\"Invalid token:\", error);\r\n//       return null;\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       const email = getUserEmail();\r\n//       if (!email) {\r\n//         navigate(\"/login\");\r\n//         return;\r\n//       }\r\n\r\n//       try {\r\n//         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\r\n//         const { data: bookmarked } = await axios.get(`http://localhost:8080/api/bookmarks/jobs/${email}`);\r\n//         setUserData(user);\r\n//         setBookmarkedJobs(bookmarked);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching user data:\", error);\r\n//         navigate(\"/login\");\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [navigate]);\r\n\r\n//   const handleSave = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       const email = getUserEmail();\r\n//       await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\r\n//       alert(\"Profile updated successfully.\");\r\n//       setIsEditing(false);\r\n//     } catch (error) {\r\n//       console.error(\"Error updating user data:\", error);\r\n//       alert(\"Failed to update profile.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   if (!userData) {\r\n//     return (\r\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\r\n//         <div>Loading...</div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\r\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\r\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\r\n//           <form onSubmit={handleSave} className=\"space-y-6\">\r\n//             {[\"name\", \"phoneNumber\", \"gender\", \"city\", \"state\"].map((field) => (\r\n//               <div className=\"flex justify-between\" key={field}>\r\n//                 <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\r\n//                 {isEditing ? (\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     name={field}\r\n//                     value={userData[field]}\r\n//                     onChange={handleInputChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 ) : (\r\n//                   <span className=\"text-lg text-gray-900\">{userData[field]}</span>\r\n//                 )}\r\n//               </div>\r\n//             ))}\r\n\r\n//             <div className=\"flex justify-between\">\r\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\r\n//               {isEditing ? (\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"skills\"\r\n//                   value={userData.skills?.join(\", \") || \"\"}\r\n//                   onChange={(e) =>\r\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\r\n//                   }\r\n//                   className=\"border p-2 rounded-md w-40\"\r\n//                 />\r\n//               ) : (\r\n//                 <span className=\"text-lg text-gray-900\">{userData.skills?.join(\", \") || \"No skills added\"}</span>\r\n//               )}\r\n//             </div>\r\n\r\n//             <div className=\"flex space-x-4 mt-6\">\r\n//               {isEditing ? (\r\n//                 <>\r\n//                   <button\r\n//                     type=\"submit\"\r\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\r\n//                   >\r\n//                     Save\r\n//                   </button>\r\n//                   <button\r\n//                     type=\"button\"\r\n//                     onClick={() => setIsEditing(false)}\r\n//                     className=\"bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600\"\r\n//                   >\r\n//                     Cancel\r\n//                   </button>\r\n//                 </>\r\n//               ) : (\r\n//                 <button\r\n//                   type=\"button\"\r\n//                   onClick={() => setIsEditing(true)}\r\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\r\n//                 >\r\n//                   Edit Profile\r\n//                 </button>\r\n//               )}\r\n//             </div>\r\n//           </form>\r\n//         </div>\r\n\r\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\r\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\r\n//           {bookmarkedJobs.length > 0 ? (\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//               {bookmarkedJobs.map((job) => (\r\n//                 <JobCard job={job} key={job.id} showDetails={true} />\r\n//               ))}\r\n//             </div>\r\n//           ) : (\r\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Profile;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport JobCard from \"../components/JobCard\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nconst Profile = () => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [originalData, setOriginalData] = useState(null); // Store original data for comparison\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const getUserEmail = () => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n    if (!token) return null;\r\n\r\n    try {\r\n      const decodedToken = jwtDecode(token);\r\n      return decodedToken.sub;\r\n    } catch (error) {\r\n      console.error(\"Invalid token:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const email = getUserEmail();\r\n      if (!email) {\r\n        navigate(\"/login\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\r\n        const { data: bookmarked } = await axios.get(`http://localhost:8080/api/bookmarks/jobs/${email}`);\r\n        setUserData(user);\r\n        setOriginalData(user); // Store the fetched data as original data\r\n        setBookmarkedJobs(bookmarked);\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n        navigate(\"/login\");\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [navigate]);\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check if any changes were made\r\n    if (JSON.stringify(userData) === JSON.stringify(originalData)) {\r\n      alert(\"No changes made to the profile.\");\r\n      setIsEditing(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const email = getUserEmail();\r\n      await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\r\n      alert(\"Profile updated successfully.\");\r\n      setIsEditing(false);\r\n      setOriginalData(userData); // Update original data after a successful save\r\n    } catch (error) {\r\n      console.error(\"Error updating user data:\", error);\r\n      alert(\"Failed to update profile.\");\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setUserData({ ...userData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  if (!userData) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\r\n        <div>Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\r\n      <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n        <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\r\n          <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\r\n          <form onSubmit={handleSave} className=\"space-y-6\">\r\n            {[\"name\", \"phoneNumber\", \"gender\", \"city\", \"state\"].map((field) => (\r\n              <div className=\"flex justify-between\" key={field}>\r\n                <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\r\n                {isEditing ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    name={field}\r\n                    value={userData[field]}\r\n                    onChange={handleInputChange}\r\n                    className=\"border p-2 rounded-md w-40\"\r\n                  />\r\n                ) : (\r\n                  <span className=\"text-lg text-gray-900\">{userData[field]}</span>\r\n                )}\r\n              </div>\r\n            ))}\r\n\r\n            <div className=\"flex justify-between\">\r\n              <strong className=\"text-lg text-gray-600\">Skills:</strong>\r\n              {isEditing ? (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"skills\"\r\n                  value={userData.skills?.join(\", \") || \"\"}\r\n                  onChange={(e) =>\r\n                    setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\r\n                  }\r\n                  className=\"border p-2 rounded-md w-40\"\r\n                />\r\n              ) : (\r\n                <span className=\"text-lg text-gray-900\">{userData.skills?.join(\", \") || \"No skills added\"}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"flex space-x-4 mt-6\">\r\n              {isEditing ? (\r\n                <>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      setIsEditing(false);\r\n                      setUserData(originalData); // Revert changes if canceled\r\n                    }}\r\n                    className=\"bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setIsEditing(true)}\r\n                  className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\r\n                >\r\n                  Edit Profile\r\n                </button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\r\n          <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\r\n          {bookmarkedJobs.length > 0 ? (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              {bookmarkedJobs.map((job) => (\r\n                <JobCard job={job} key={job.id} showDetails={true} />\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,gBAAA,EAAAC,iBAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMsB,QAAQ,GAAG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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}