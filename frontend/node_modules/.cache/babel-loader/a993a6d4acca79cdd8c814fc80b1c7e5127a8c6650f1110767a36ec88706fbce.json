{"ast":null,"code":"// // // import React, { useState, useEffect } from \"react\";\n// // // import axios from \"axios\";\n// // // import { useNavigate } from \"react-router-dom\";\n// // // import JobCard from \"../components/JobCard\";\n// // // import { jwtDecode } from \"jwt-decode\";\n\n// // // const Profile = () => {\n// // //   const [userData, setUserData] = useState(null);\n// // //   const [isEditing, setIsEditing] = useState(false);\n// // //   const [passwordData, setPasswordData] = useState({\n// // //     currentPassword: \"\",\n// // //     newPassword: \"\",\n// // //     confirmPassword: \"\",\n// // //   });\n// // //   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\n// // //   const [showPasswordFields, setShowPasswordFields] = useState(false);\n// // //   const navigate = useNavigate();\n\n// // //   const getUserEmail = () => {\n// // //     const token = localStorage.getItem(\"authToken\");\n// // //     if (!token) return null;\n\n// // //     try {\n// // //       const decodedToken = jwtDecode(token);\n// // //       return decodedToken.sub;\n// // //     } catch (error) {\n// // //       console.error(\"Invalid token:\", error);\n// // //       return null;\n// // //     }\n// // //   };\n\n// // //   useEffect(() => {\n// // //     const fetchData = async () => {\n// // //       const email = getUserEmail();\n// // //       if (!email) {\n// // //         navigate(\"/login\");\n// // //         return;\n// // //       }\n\n// // //       try {\n// // //         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\n// // //         const { data: bookmarked } = await axios.get(`http://localhost:8080/api/bookmarks/jobs/${email}`);\n// // //         setUserData(user);\n// // //         setBookmarkedJobs(bookmarked);\n// // //       } catch (error) {\n// // //         console.error(\"Error fetching user data:\", error);\n// // //         navigate(\"/login\");\n// // //       }\n// // //     };\n\n// // //     fetchData();\n// // //   }, [navigate]);\n\n// // //   const handleSave = async (e) => {\n// // //     e.preventDefault();\n\n// // //     try {\n// // //       const email = getUserEmail();\n// // //       if (showPasswordFields) {\n// // //         const { currentPassword, newPassword, confirmPassword } = passwordData;\n// // //         if (!currentPassword || !newPassword || !confirmPassword) {\n// // //           alert(\"Please fill in all password fields.\");\n// // //           return;\n// // //         }\n\n// // //         if (newPassword !== confirmPassword) {\n// // //           alert(\"New password and confirm password do not match.\");\n// // //           return;\n// // //         }\n\n// // //         await axios.put(`http://localhost:8080/api/users/update/${email}`, {\n// // //           ...userData,\n// // //           currentPassword,\n// // //           newPassword,\n// // //         });\n// // //         alert(\"Password updated successfully.\");\n// // //       } else {\n// // //         await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\n// // //         alert(\"Profile updated successfully.\");\n// // //       }\n\n// // //       setIsEditing(false);\n// // //       setShowPasswordFields(false);\n// // //       setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\n// // //     } catch (error) {\n// // //       console.error(\"Error updating user data:\", error);\n// // //       alert(\"Failed to update profile.\");\n// // //     }\n// // //   };\n\n// // //   const handleInputChange = (e) => {\n// // //     setUserData({ ...userData, [e.target.name]: e.target.value });\n// // //   };\n\n// // //   const handlePasswordChange = (e) => {\n// // //     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\n// // //   };\n\n// // //   if (!userData) {\n// // //     return (\n// // //       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\n// // //         <div>Loading...</div>\n// // //       </div>\n// // //     );\n// // //   }\n\n// // //   return (\n// // //     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\n// // //       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\n// // //         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\n// // //           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\n// // //           <form onSubmit={handleSave} className=\"space-y-6\">\n// // //             {Object.keys(userData).map((field) =>\n// // //               ![\"bookmarkedJobs\", \"skills\", \"password\"].includes(field) ? (\n// // //                 <div className=\"flex justify-between\" key={field}>\n// // //                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\n// // //                   {isEditing ? (\n// // //                     <input\n// // //                       type=\"text\"\n// // //                       name={field}\n// // //                       value={userData[field]}\n// // //                       onChange={handleInputChange}\n// // //                       className=\"border p-2 rounded-md w-40\"\n// // //                     />\n// // //                   ) : (\n// // //                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\n// // //                   )}\n// // //                 </div>\n// // //               ) : null\n// // //             )}\n\n// // //             <div className=\"flex justify-between\">\n// // //               <strong className=\"text-lg text-gray-600\">Skills:</strong>\n// // //               {isEditing ? (\n// // //                 <input\n// // //                   type=\"text\"\n// // //                   name=\"skills\"\n// // //                   value={userData.skills?.join(\", \") || \"\"}\n// // //                   onChange={(e) =>\n// // //                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\n// // //                   }\n// // //                   className=\"border p-2 rounded-md w-40\"\n// // //                 />\n// // //               ) : (\n// // //                 <span className=\"text-lg text-gray-900\">{userData.skills?.join(\", \") || \"No skills added\"}</span>\n// // //               )}\n// // //             </div>\n\n// // //             {showPasswordFields && (\n// // //               <>\n// // //                 <div className=\"flex justify-between\">\n// // //                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\n// // //                   <input\n// // //                     type=\"password\"\n// // //                     name=\"currentPassword\"\n// // //                     value={passwordData.currentPassword}\n// // //                     onChange={handlePasswordChange}\n// // //                     className=\"border p-2 rounded-md w-40\"\n// // //                   />\n// // //                 </div>\n// // //                 <div className=\"flex justify-between\">\n// // //                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\n// // //                   <input\n// // //                     type=\"password\"\n// // //                     name=\"newPassword\"\n// // //                     value={passwordData.newPassword}\n// // //                     onChange={handlePasswordChange}\n// // //                     className=\"border p-2 rounded-md w-40\"\n// // //                   />\n// // //                 </div>\n// // //                 <div className=\"flex justify-between\">\n// // //                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\n// // //                   <input\n// // //                     type=\"password\"\n// // //                     name=\"confirmPassword\"\n// // //                     value={passwordData.confirmPassword}\n// // //                     onChange={handlePasswordChange}\n// // //                     className=\"border p-2 rounded-md w-40\"\n// // //                   />\n// // //                 </div>\n// // //               </>\n// // //             )}\n\n// // //             <div className=\"flex space-x-4 mt-6\">\n// // //               {isEditing ? (\n// // //                 <>\n// // //                   <button\n// // //                     type=\"submit\"\n// // //                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\n// // //                   >\n// // //                     Save\n// // //                   </button>\n// // //                   <button\n// // //                     type=\"button\"\n// // //                     onClick={() => setShowPasswordFields(!showPasswordFields)}\n// // //                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\n// // //                   >\n// // //                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\n// // //                   </button>\n// // //                 </>\n// // //               ) : (\n// // //                 <button\n// // //                   type=\"button\"\n// // //                   onClick={() => setIsEditing(true)}\n// // //                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\n// // //                 >\n// // //                   Edit Profile\n// // //                 </button>\n// // //               )}\n// // //             </div>\n// // //           </form>\n// // //         </div>\n\n// // //         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\n// // //           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\n// // //           {bookmarkedJobs.length > 0 ? (\n// // //             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n// // //               {bookmarkedJobs.map((job) => (\n// // //                 <JobCard job={job} key={job.id} showDetails={true} />\n// // //               ))}\n// // //             </div>\n// // //           ) : (\n// // //             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\n// // //           )}\n// // //         </div>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default Profile;\n// // import React, { useState, useEffect } from \"react\";\n// // import axios from \"axios\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import JobCard from \"../components/JobCard\";\n// // import { jwtDecode } from \"jwt-decode\";\n\n// // const Profile = () => {\n// //   const [userData, setUserData] = useState(null);\n// //   const [isEditing, setIsEditing] = useState(false);\n// //   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\n// //   const navigate = useNavigate();\n\n// //   const getUserEmail = () => {\n// //     const token = localStorage.getItem(\"authToken\");\n// //     if (!token) return null;\n\n// //     try {\n// //       const decodedToken = jwtDecode(token);\n// //       return decodedToken.sub;\n// //     } catch (error) {\n// //       console.error(\"Invalid token:\", error);\n// //       return null;\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     const fetchData = async () => {\n// //       const email = getUserEmail();\n// //       if (!email) {\n// //         navigate(\"/login\");\n// //         return;\n// //       }\n\n// //       try {\n// //         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\n// //         const { data: bookmarked } = await axios.get(`http://localhost:8080/api/bookmarks/jobs/${email}`);\n// //         setUserData(user);\n// //         setBookmarkedJobs(bookmarked);\n// //       } catch (error) {\n// //         console.error(\"Error fetching user data:\", error);\n// //         navigate(\"/login\");\n// //       }\n// //     };\n\n// //     fetchData();\n// //   }, [navigate]);\n\n// //   const handleSave = async (e) => {\n// //     e.preventDefault();\n\n// //     try {\n// //       const email = getUserEmail();\n// //       await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\n// //       alert(\"Profile updated successfully.\");\n// //       setIsEditing(false);\n// //     } catch (error) {\n// //       console.error(\"Error updating user data:\", error);\n// //       alert(\"Failed to update profile.\");\n// //     }\n// //   };\n\n// //   const handleInputChange = (e) => {\n// //     setUserData({ ...userData, [e.target.name]: e.target.value });\n// //   };\n\n// //   if (!userData) {\n// //     return (\n// //       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\n// //         <div>Loading...</div>\n// //       </div>\n// //     );\n// //   }\n\n// //   return (\n// //     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\n// //       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\n// //         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\n// //           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\n// //           <form onSubmit={handleSave} className=\"space-y-6\">\n// //             {[\"name\", \"phoneNumber\", \"gender\", \"city\", \"state\"].map((field) => (\n// //               <div className=\"flex justify-between\" key={field}>\n// //                 <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\n// //                 {isEditing ? (\n// //                   <input\n// //                     type=\"text\"\n// //                     name={field}\n// //                     value={userData[field]}\n// //                     onChange={handleInputChange}\n// //                     className=\"border p-2 rounded-md w-40\"\n// //                   />\n// //                 ) : (\n// //                   <span className=\"text-lg text-gray-900\">{userData[field]}</span>\n// //                 )}\n// //               </div>\n// //             ))}\n\n// //             <div className=\"flex justify-between\">\n// //               <strong className=\"text-lg text-gray-600\">Skills:</strong>\n// //               {isEditing ? (\n// //                 <input\n// //                   type=\"text\"\n// //                   name=\"skills\"\n// //                   value={userData.skills?.join(\", \") || \"\"}\n// //                   onChange={(e) =>\n// //                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\n// //                   }\n// //                   className=\"border p-2 rounded-md w-40\"\n// //                 />\n// //               ) : (\n// //                 <span className=\"text-lg text-gray-900\">{userData.skills?.join(\", \") || \"No skills added\"}</span>\n// //               )}\n// //             </div>\n\n// //             <div className=\"flex space-x-4 mt-6\">\n// //               {isEditing ? (\n// //                 <>\n// //                   <button\n// //                     type=\"submit\"\n// //                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\n// //                   >\n// //                     Save\n// //                   </button>\n// //                   <button\n// //                     type=\"button\"\n// //                     onClick={() => setIsEditing(false)}\n// //                     className=\"bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600\"\n// //                   >\n// //                     Cancel\n// //                   </button>\n// //                 </>\n// //               ) : (\n// //                 <button\n// //                   type=\"button\"\n// //                   onClick={() => setIsEditing(true)}\n// //                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\n// //                 >\n// //                   Edit Profile\n// //                 </button>\n// //               )}\n// //             </div>\n// //           </form>\n// //         </div>\n\n// //         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\n// //           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\n// //           {bookmarkedJobs.length > 0 ? (\n// //             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n// //               {bookmarkedJobs.map((job) => (\n// //                 <JobCard job={job} key={job.id} showDetails={true} />\n// //               ))}\n// //             </div>\n// //           ) : (\n// //             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\n// //           )}\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Profile;\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import JobCard from \"../components/JobCard\";\n// import { jwtDecode } from \"jwt-decode\";\n\n// const Profile = () => {\n//   const [userData, setUserData] = useState(null);\n//   const [originalData, setOriginalData] = useState(null); // Store original data for comparison\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\n//   const navigate = useNavigate();\n\n//   const getUserEmail = () => {\n//     const token = localStorage.getItem(\"authToken\");\n//     if (!token) return null;\n\n//     try {\n//       const decodedToken = jwtDecode(token);\n//       return decodedToken.sub;\n//     } catch (error) {\n//       console.error(\"Invalid token:\", error);\n//       return null;\n//     }\n//   };\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const email = getUserEmail();\n//       if (!email) {\n//         navigate(\"/login\");\n//         return;\n//       }\n\n//       try {\n//         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\n//         const { data: bookmarked } = await axios.get(`http://localhost:8080/api/bookmarks/jobs/${email}`);\n//         setUserData(user);\n//         setOriginalData(user); // Store the fetched data as original data\n//         setBookmarkedJobs(bookmarked);\n//       } catch (error) {\n//         console.error(\"Error fetching user data:\", error);\n//         navigate(\"/login\");\n//       }\n//     };\n\n//     fetchData();\n//   }, [navigate]);\n\n//   const handleSave = async (e) => {\n//     e.preventDefault();\n\n//     // Check if any changes were made\n//     if (JSON.stringify(userData) === JSON.stringify(originalData)) {\n//       alert(\"No changes made to the profile.\");\n//       setIsEditing(false);\n//       return;\n//     }\n\n//     try {\n//       const email = getUserEmail();\n//       await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\n//       alert(\"Profile updated successfully.\");\n//       setIsEditing(false);\n//       setOriginalData(userData); // Update original data after a successful save\n//     } catch (error) {\n//       console.error(\"Error updating user data:\", error);\n//       alert(\"Failed to update profile.\");\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\n//   };\n\n//   if (!userData) {\n//     return (\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\n//         <div>Loading...</div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\n//           <form onSubmit={handleSave} className=\"space-y-6\">\n//             {[\"name\", \"phoneNumber\", \"gender\", \"city\", \"state\"].map((field) => (\n//               <div className=\"flex justify-between\" key={field}>\n//                 <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\n//                 {isEditing ? (\n//                   <input\n//                     type=\"text\"\n//                     name={field}\n//                     value={userData[field]}\n//                     onChange={handleInputChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 ) : (\n//                   <span className=\"text-lg text-gray-900\">{userData[field]}</span>\n//                 )}\n//               </div>\n//             ))}\n\n//             <div className=\"flex justify-between\">\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\n//               {isEditing ? (\n//                 <input\n//                   type=\"text\"\n//                   name=\"skills\"\n//                   value={userData.skills?.join(\", \") || \"\"}\n//                   onChange={(e) =>\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\n//                   }\n//                   className=\"border p-2 rounded-md w-40\"\n//                 />\n//               ) : (\n//                 <span className=\"text-lg text-gray-900\">{userData.skills?.join(\", \") || \"No skills added\"}</span>\n//               )}\n//             </div>\n\n//             <div className=\"flex space-x-4 mt-6\">\n//               {isEditing ? (\n//                 <>\n//                   <button\n//                     type=\"submit\"\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\n//                   >\n//                     Save\n//                   </button>\n//                   <button\n//                     type=\"button\"\n//                     onClick={() => {\n//                       setIsEditing(false);\n//                       setUserData(originalData); // Revert changes if canceled\n//                     }}\n//                     className=\"bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600\"\n//                   >\n//                     Cancel\n//                   </button>\n//                 </>\n//               ) : (\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => setIsEditing(true)}\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\n//                 >\n//                   Edit Profile\n//                 </button>\n//               )}\n//             </div>\n//           </form>\n//         </div>\n\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\n//           {bookmarkedJobs.length > 0 ? (\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n//               {bookmarkedJobs.map((job) => (\n//                 <JobCard job={job} key={job.id} showDetails={true} />\n//               ))}\n//             </div>\n//           ) : (\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profile;","map":{"version":3,"names":[],"sources":["D:/project/web/job-portal/src/pages/Profile.jsx"],"sourcesContent":["// // // import React, { useState, useEffect } from \"react\";\r\n// // // import axios from \"axios\";\r\n// // // import { useNavigate } from \"react-router-dom\";\r\n// // // import JobCard from \"../components/JobCard\";\r\n// // // import { jwtDecode } from \"jwt-decode\";\r\n\r\n// // // const Profile = () => {\r\n// // //   const [userData, setUserData] = useState(null);\r\n// // //   const [isEditing, setIsEditing] = useState(false);\r\n// // //   const [passwordData, setPasswordData] = useState({\r\n// // //     currentPassword: \"\",\r\n// // //     newPassword: \"\",\r\n// // //     confirmPassword: \"\",\r\n// // //   });\r\n// // //   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\r\n// // //   const [showPasswordFields, setShowPasswordFields] = useState(false);\r\n// // //   const navigate = useNavigate();\r\n\r\n// // //   const getUserEmail = () => {\r\n// // //     const token = localStorage.getItem(\"authToken\");\r\n// // //     if (!token) return null;\r\n\r\n// // //     try {\r\n// // //       const decodedToken = jwtDecode(token);\r\n// // //       return decodedToken.sub;\r\n// // //     } catch (error) {\r\n// // //       console.error(\"Invalid token:\", error);\r\n// // //       return null;\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   useEffect(() => {\r\n// // //     const fetchData = async () => {\r\n// // //       const email = getUserEmail();\r\n// // //       if (!email) {\r\n// // //         navigate(\"/login\");\r\n// // //         return;\r\n// // //       }\r\n\r\n// // //       try {\r\n// // //         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\r\n// // //         const { data: bookmarked } = await axios.get(`http://localhost:8080/api/bookmarks/jobs/${email}`);\r\n// // //         setUserData(user);\r\n// // //         setBookmarkedJobs(bookmarked);\r\n// // //       } catch (error) {\r\n// // //         console.error(\"Error fetching user data:\", error);\r\n// // //         navigate(\"/login\");\r\n// // //       }\r\n// // //     };\r\n\r\n// // //     fetchData();\r\n// // //   }, [navigate]);\r\n\r\n// // //   const handleSave = async (e) => {\r\n// // //     e.preventDefault();\r\n\r\n// // //     try {\r\n// // //       const email = getUserEmail();\r\n// // //       if (showPasswordFields) {\r\n// // //         const { currentPassword, newPassword, confirmPassword } = passwordData;\r\n// // //         if (!currentPassword || !newPassword || !confirmPassword) {\r\n// // //           alert(\"Please fill in all password fields.\");\r\n// // //           return;\r\n// // //         }\r\n\r\n// // //         if (newPassword !== confirmPassword) {\r\n// // //           alert(\"New password and confirm password do not match.\");\r\n// // //           return;\r\n// // //         }\r\n\r\n// // //         await axios.put(`http://localhost:8080/api/users/update/${email}`, {\r\n// // //           ...userData,\r\n// // //           currentPassword,\r\n// // //           newPassword,\r\n// // //         });\r\n// // //         alert(\"Password updated successfully.\");\r\n// // //       } else {\r\n// // //         await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\r\n// // //         alert(\"Profile updated successfully.\");\r\n// // //       }\r\n\r\n// // //       setIsEditing(false);\r\n// // //       setShowPasswordFields(false);\r\n// // //       setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\r\n// // //     } catch (error) {\r\n// // //       console.error(\"Error updating user data:\", error);\r\n// // //       alert(\"Failed to update profile.\");\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   const handleInputChange = (e) => {\r\n// // //     setUserData({ ...userData, [e.target.name]: e.target.value });\r\n// // //   };\r\n\r\n// // //   const handlePasswordChange = (e) => {\r\n// // //     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\r\n// // //   };\r\n\r\n// // //   if (!userData) {\r\n// // //     return (\r\n// // //       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\r\n// // //         <div>Loading...</div>\r\n// // //       </div>\r\n// // //     );\r\n// // //   }\r\n\r\n// // //   return (\r\n// // //     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\r\n// // //       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n// // //         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\r\n// // //           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\r\n// // //           <form onSubmit={handleSave} className=\"space-y-6\">\r\n// // //             {Object.keys(userData).map((field) =>\r\n// // //               ![\"bookmarkedJobs\", \"skills\", \"password\"].includes(field) ? (\r\n// // //                 <div className=\"flex justify-between\" key={field}>\r\n// // //                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\r\n// // //                   {isEditing ? (\r\n// // //                     <input\r\n// // //                       type=\"text\"\r\n// // //                       name={field}\r\n// // //                       value={userData[field]}\r\n// // //                       onChange={handleInputChange}\r\n// // //                       className=\"border p-2 rounded-md w-40\"\r\n// // //                     />\r\n// // //                   ) : (\r\n// // //                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\r\n// // //                   )}\r\n// // //                 </div>\r\n// // //               ) : null\r\n// // //             )}\r\n\r\n// // //             <div className=\"flex justify-between\">\r\n// // //               <strong className=\"text-lg text-gray-600\">Skills:</strong>\r\n// // //               {isEditing ? (\r\n// // //                 <input\r\n// // //                   type=\"text\"\r\n// // //                   name=\"skills\"\r\n// // //                   value={userData.skills?.join(\", \") || \"\"}\r\n// // //                   onChange={(e) =>\r\n// // //                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\r\n// // //                   }\r\n// // //                   className=\"border p-2 rounded-md w-40\"\r\n// // //                 />\r\n// // //               ) : (\r\n// // //                 <span className=\"text-lg text-gray-900\">{userData.skills?.join(\", \") || \"No skills added\"}</span>\r\n// // //               )}\r\n// // //             </div>\r\n\r\n// // //             {showPasswordFields && (\r\n// // //               <>\r\n// // //                 <div className=\"flex justify-between\">\r\n// // //                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\r\n// // //                   <input\r\n// // //                     type=\"password\"\r\n// // //                     name=\"currentPassword\"\r\n// // //                     value={passwordData.currentPassword}\r\n// // //                     onChange={handlePasswordChange}\r\n// // //                     className=\"border p-2 rounded-md w-40\"\r\n// // //                   />\r\n// // //                 </div>\r\n// // //                 <div className=\"flex justify-between\">\r\n// // //                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\r\n// // //                   <input\r\n// // //                     type=\"password\"\r\n// // //                     name=\"newPassword\"\r\n// // //                     value={passwordData.newPassword}\r\n// // //                     onChange={handlePasswordChange}\r\n// // //                     className=\"border p-2 rounded-md w-40\"\r\n// // //                   />\r\n// // //                 </div>\r\n// // //                 <div className=\"flex justify-between\">\r\n// // //                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\r\n// // //                   <input\r\n// // //                     type=\"password\"\r\n// // //                     name=\"confirmPassword\"\r\n// // //                     value={passwordData.confirmPassword}\r\n// // //                     onChange={handlePasswordChange}\r\n// // //                     className=\"border p-2 rounded-md w-40\"\r\n// // //                   />\r\n// // //                 </div>\r\n// // //               </>\r\n// // //             )}\r\n\r\n// // //             <div className=\"flex space-x-4 mt-6\">\r\n// // //               {isEditing ? (\r\n// // //                 <>\r\n// // //                   <button\r\n// // //                     type=\"submit\"\r\n// // //                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\r\n// // //                   >\r\n// // //                     Save\r\n// // //                   </button>\r\n// // //                   <button\r\n// // //                     type=\"button\"\r\n// // //                     onClick={() => setShowPasswordFields(!showPasswordFields)}\r\n// // //                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\r\n// // //                   >\r\n// // //                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\r\n// // //                   </button>\r\n// // //                 </>\r\n// // //               ) : (\r\n// // //                 <button\r\n// // //                   type=\"button\"\r\n// // //                   onClick={() => setIsEditing(true)}\r\n// // //                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\r\n// // //                 >\r\n// // //                   Edit Profile\r\n// // //                 </button>\r\n// // //               )}\r\n// // //             </div>\r\n// // //           </form>\r\n// // //         </div>\r\n\r\n// // //         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\r\n// // //           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\r\n// // //           {bookmarkedJobs.length > 0 ? (\r\n// // //             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n// // //               {bookmarkedJobs.map((job) => (\r\n// // //                 <JobCard job={job} key={job.id} showDetails={true} />\r\n// // //               ))}\r\n// // //             </div>\r\n// // //           ) : (\r\n// // //             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\r\n// // //           )}\r\n// // //         </div>\r\n// // //       </div>\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default Profile;\r\n// // import React, { useState, useEffect } from \"react\";\r\n// // import axios from \"axios\";\r\n// // import { useNavigate } from \"react-router-dom\";\r\n// // import JobCard from \"../components/JobCard\";\r\n// // import { jwtDecode } from \"jwt-decode\";\r\n\r\n// // const Profile = () => {\r\n// //   const [userData, setUserData] = useState(null);\r\n// //   const [isEditing, setIsEditing] = useState(false);\r\n// //   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const getUserEmail = () => {\r\n// //     const token = localStorage.getItem(\"authToken\");\r\n// //     if (!token) return null;\r\n\r\n// //     try {\r\n// //       const decodedToken = jwtDecode(token);\r\n// //       return decodedToken.sub;\r\n// //     } catch (error) {\r\n// //       console.error(\"Invalid token:\", error);\r\n// //       return null;\r\n// //     }\r\n// //   };\r\n\r\n// //   useEffect(() => {\r\n// //     const fetchData = async () => {\r\n// //       const email = getUserEmail();\r\n// //       if (!email) {\r\n// //         navigate(\"/login\");\r\n// //         return;\r\n// //       }\r\n\r\n// //       try {\r\n// //         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\r\n// //         const { data: bookmarked } = await axios.get(`http://localhost:8080/api/bookmarks/jobs/${email}`);\r\n// //         setUserData(user);\r\n// //         setBookmarkedJobs(bookmarked);\r\n// //       } catch (error) {\r\n// //         console.error(\"Error fetching user data:\", error);\r\n// //         navigate(\"/login\");\r\n// //       }\r\n// //     };\r\n\r\n// //     fetchData();\r\n// //   }, [navigate]);\r\n\r\n// //   const handleSave = async (e) => {\r\n// //     e.preventDefault();\r\n\r\n// //     try {\r\n// //       const email = getUserEmail();\r\n// //       await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\r\n// //       alert(\"Profile updated successfully.\");\r\n// //       setIsEditing(false);\r\n// //     } catch (error) {\r\n// //       console.error(\"Error updating user data:\", error);\r\n// //       alert(\"Failed to update profile.\");\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleInputChange = (e) => {\r\n// //     setUserData({ ...userData, [e.target.name]: e.target.value });\r\n// //   };\r\n\r\n// //   if (!userData) {\r\n// //     return (\r\n// //       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\r\n// //         <div>Loading...</div>\r\n// //       </div>\r\n// //     );\r\n// //   }\r\n\r\n// //   return (\r\n// //     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\r\n// //       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n// //         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\r\n// //           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\r\n// //           <form onSubmit={handleSave} className=\"space-y-6\">\r\n// //             {[\"name\", \"phoneNumber\", \"gender\", \"city\", \"state\"].map((field) => (\r\n// //               <div className=\"flex justify-between\" key={field}>\r\n// //                 <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\r\n// //                 {isEditing ? (\r\n// //                   <input\r\n// //                     type=\"text\"\r\n// //                     name={field}\r\n// //                     value={userData[field]}\r\n// //                     onChange={handleInputChange}\r\n// //                     className=\"border p-2 rounded-md w-40\"\r\n// //                   />\r\n// //                 ) : (\r\n// //                   <span className=\"text-lg text-gray-900\">{userData[field]}</span>\r\n// //                 )}\r\n// //               </div>\r\n// //             ))}\r\n\r\n// //             <div className=\"flex justify-between\">\r\n// //               <strong className=\"text-lg text-gray-600\">Skills:</strong>\r\n// //               {isEditing ? (\r\n// //                 <input\r\n// //                   type=\"text\"\r\n// //                   name=\"skills\"\r\n// //                   value={userData.skills?.join(\", \") || \"\"}\r\n// //                   onChange={(e) =>\r\n// //                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\r\n// //                   }\r\n// //                   className=\"border p-2 rounded-md w-40\"\r\n// //                 />\r\n// //               ) : (\r\n// //                 <span className=\"text-lg text-gray-900\">{userData.skills?.join(\", \") || \"No skills added\"}</span>\r\n// //               )}\r\n// //             </div>\r\n\r\n// //             <div className=\"flex space-x-4 mt-6\">\r\n// //               {isEditing ? (\r\n// //                 <>\r\n// //                   <button\r\n// //                     type=\"submit\"\r\n// //                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\r\n// //                   >\r\n// //                     Save\r\n// //                   </button>\r\n// //                   <button\r\n// //                     type=\"button\"\r\n// //                     onClick={() => setIsEditing(false)}\r\n// //                     className=\"bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600\"\r\n// //                   >\r\n// //                     Cancel\r\n// //                   </button>\r\n// //                 </>\r\n// //               ) : (\r\n// //                 <button\r\n// //                   type=\"button\"\r\n// //                   onClick={() => setIsEditing(true)}\r\n// //                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\r\n// //                 >\r\n// //                   Edit Profile\r\n// //                 </button>\r\n// //               )}\r\n// //             </div>\r\n// //           </form>\r\n// //         </div>\r\n\r\n// //         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\r\n// //           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\r\n// //           {bookmarkedJobs.length > 0 ? (\r\n// //             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n// //               {bookmarkedJobs.map((job) => (\r\n// //                 <JobCard job={job} key={job.id} showDetails={true} />\r\n// //               ))}\r\n// //             </div>\r\n// //           ) : (\r\n// //             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\r\n// //           )}\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Profile;\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import JobCard from \"../components/JobCard\";\r\n// import { jwtDecode } from \"jwt-decode\";\r\n\r\n// const Profile = () => {\r\n//   const [userData, setUserData] = useState(null);\r\n//   const [originalData, setOriginalData] = useState(null); // Store original data for comparison\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\r\n//   const navigate = useNavigate();\r\n\r\n//   const getUserEmail = () => {\r\n//     const token = localStorage.getItem(\"authToken\");\r\n//     if (!token) return null;\r\n\r\n//     try {\r\n//       const decodedToken = jwtDecode(token);\r\n//       return decodedToken.sub;\r\n//     } catch (error) {\r\n//       console.error(\"Invalid token:\", error);\r\n//       return null;\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       const email = getUserEmail();\r\n//       if (!email) {\r\n//         navigate(\"/login\");\r\n//         return;\r\n//       }\r\n\r\n//       try {\r\n//         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\r\n//         const { data: bookmarked } = await axios.get(`http://localhost:8080/api/bookmarks/jobs/${email}`);\r\n//         setUserData(user);\r\n//         setOriginalData(user); // Store the fetched data as original data\r\n//         setBookmarkedJobs(bookmarked);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching user data:\", error);\r\n//         navigate(\"/login\");\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [navigate]);\r\n\r\n//   const handleSave = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Check if any changes were made\r\n//     if (JSON.stringify(userData) === JSON.stringify(originalData)) {\r\n//       alert(\"No changes made to the profile.\");\r\n//       setIsEditing(false);\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       const email = getUserEmail();\r\n//       await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\r\n//       alert(\"Profile updated successfully.\");\r\n//       setIsEditing(false);\r\n//       setOriginalData(userData); // Update original data after a successful save\r\n//     } catch (error) {\r\n//       console.error(\"Error updating user data:\", error);\r\n//       alert(\"Failed to update profile.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   if (!userData) {\r\n//     return (\r\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\r\n//         <div>Loading...</div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\r\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\r\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\r\n//           <form onSubmit={handleSave} className=\"space-y-6\">\r\n//             {[\"name\", \"phoneNumber\", \"gender\", \"city\", \"state\"].map((field) => (\r\n//               <div className=\"flex justify-between\" key={field}>\r\n//                 <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\r\n//                 {isEditing ? (\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     name={field}\r\n//                     value={userData[field]}\r\n//                     onChange={handleInputChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 ) : (\r\n//                   <span className=\"text-lg text-gray-900\">{userData[field]}</span>\r\n//                 )}\r\n//               </div>\r\n//             ))}\r\n\r\n//             <div className=\"flex justify-between\">\r\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\r\n//               {isEditing ? (\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"skills\"\r\n//                   value={userData.skills?.join(\", \") || \"\"}\r\n//                   onChange={(e) =>\r\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\r\n//                   }\r\n//                   className=\"border p-2 rounded-md w-40\"\r\n//                 />\r\n//               ) : (\r\n//                 <span className=\"text-lg text-gray-900\">{userData.skills?.join(\", \") || \"No skills added\"}</span>\r\n//               )}\r\n//             </div>\r\n\r\n//             <div className=\"flex space-x-4 mt-6\">\r\n//               {isEditing ? (\r\n//                 <>\r\n//                   <button\r\n//                     type=\"submit\"\r\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\r\n//                   >\r\n//                     Save\r\n//                   </button>\r\n//                   <button\r\n//                     type=\"button\"\r\n//                     onClick={() => {\r\n//                       setIsEditing(false);\r\n//                       setUserData(originalData); // Revert changes if canceled\r\n//                     }}\r\n//                     className=\"bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600\"\r\n//                   >\r\n//                     Cancel\r\n//                   </button>\r\n//                 </>\r\n//               ) : (\r\n//                 <button\r\n//                   type=\"button\"\r\n//                   onClick={() => setIsEditing(true)}\r\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\r\n//                 >\r\n//                   Edit Profile\r\n//                 </button>\r\n//               )}\r\n//             </div>\r\n//           </form>\r\n//         </div>\r\n\r\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\r\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\r\n//           {bookmarkedJobs.length > 0 ? (\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//               {bookmarkedJobs.map((job) => (\r\n//                 <JobCard job={job} key={job.id} showDetails={true} />\r\n//               ))}\r\n//             </div>\r\n//           ) : (\r\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Profile;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}