{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\web\\\\job-portal\\\\src\\\\pages\\\\JobsPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import JobCard from \"../components/JobCard\";\n// import axios from \"axios\";\n\n// const JobsPage = () => {\n//   const navigate = useNavigate();\n//   const [activeTab, setActiveTab] = useState(\"forYou\");\n//   const [recommendedJobs, setRecommendedJobs] = useState([]);\n//   const [allJobs, setAllJobs] = useState([]);\n//   const [searchTitle, setSearchTitle] = useState(\"\");\n//   const [searchCompany, setSearchCompany] = useState(\"\"); // New state for company filter\n//   const [searchLocation, setSearchLocation] = useState(\"\");\n//   const [isLoggedIn, setIsLoggedIn] = useState(false); // Authentication state\n//   const [loading, setLoading] = useState(true); // Loading state for data fetch\n//   const [error, setError] = useState(\"\"); // Error state for handling any API issues\n\n//   useEffect(() => {\n//     // Check if user is logged in\n//     const user = localStorage.getItem(\"authToken\");\n//     if (user) {\n//       setIsLoggedIn(true); // Set logged in state if user is found\n//     } else {\n//       setIsLoggedIn(false); // Set logged out state if no user found\n//       navigate(\"/login\"); // Redirect to login page if not logged in\n//     }\n\n//     // Mock Recommended Jobs\n//     const mockRecommendedJobs = [\n//       {\n//         id: 2,\n//         role: \"Full-Stack Developer\",\n//         company: \"Google\",\n//         location: \"Mountain View, CA, USA\",\n//         description: \"Work on cutting-edge web technologies...\",\n//         source: \"LinkedIn\",\n//       },\n//       {\n//         id: 3,\n//         role: \"Data Scientist\",\n//         company: \"Meta\",\n//         location: \"Menlo Park, CA, USA\",\n//         description: \"Analyze and interpret complex data...\",\n//         source: \"Indeed\",\n//       },\n//       {\n//         id: 4,\n//         role: \"Machine Learning Engineer\",\n//         company: \"Amazon\",\n//         location: \"Seattle, WA, USA\",\n//         description: \"Develop and deploy ML models...\",\n//         source: \"Company Careers\",\n//       },\n//       {\n//         id: 5,\n//         role: \"Cloud Solutions Architect\",\n//         company: \"Microsoft\",\n//         location: \"Redmond, WA, USA\",\n//         description: \"Design scalable cloud architectures...\",\n//         source: \"Employee Referral\",\n//       },\n//     ];\n//     setRecommendedJobs(mockRecommendedJobs);\n\n//     // Fetch All Jobs\n//     const fetchAllJobs = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:8080/api/jobs/all\");\n//         console.log(response.data); // Check the API response data\n//         if (response.status === 200) {\n//           setAllJobs(response.data);\n//         } else {\n//           setError(`Error: ${response.statusText}`);\n//         }\n//       } catch (err) {\n//         console.error(\"Error fetching jobs:\", err);\n//         setError(\"Network error. Please try again later.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchAllJobs();\n//   }, [navigate]);\n\n//   // Filtered Jobs based on Search Criteria\n//   const filteredJobs = allJobs.filter(\n//     (job) =>\n//       job.role.toLowerCase().includes(searchTitle.toLowerCase()) &&\n//       job.company.toLowerCase().includes(searchCompany.toLowerCase()) &&\n//       job.location.toLowerCase().includes(searchLocation.toLowerCase())\n//   );\n\n//   // Render the Jobs Page only if logged in\n//   if (!isLoggedIn) return null;\n\n//   return (\n//     <div className=\"p-6 pt-24 max-w-5xl mx-auto\">\n//       {/* Search Bar */}\n//       <div className=\"flex flex-col sm:flex-row justify-center items-center gap-4 mb-6 bg-gray-100 p-4 rounded-lg shadow\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Find your perfect job\"\n//           value={searchTitle}\n//           onChange={(e) => setSearchTitle(e.target.value)}\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-2/3 focus:ring-2 focus:ring-[#00ADB5]\"\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Company\"\n//           value={searchCompany}\n//           onChange={(e) => setSearchCompany(e.target.value)} // Handle company search\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Location\"\n//           value={searchLocation}\n//           onChange={(e) => setSearchLocation(e.target.value)}\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\n//         />\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"flex justify-center gap-10 border-b mb-6\">\n//         <button\n//           className={`pb-2 text-lg font-semibold ${\n//             activeTab === \"forYou\"\n//               ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\"\n//               : \"text-gray-600\"\n//           }`}\n//           onClick={() => setActiveTab(\"forYou\")}\n//         >\n//           For you\n//         </button>\n//         <button\n//           className={`pb-2 text-lg font-semibold ${\n//             activeTab === \"search\"\n//               ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\"\n//               : \"text-gray-600\"\n//           }`}\n//           onClick={() => (\"fetchAllJobs()\")}\n//         >\n//           Search\n//         </button>\n//       </div>\n\n//       {/* Tab Content */}\n//       {activeTab === \"forYou\" && (\n//         <div>\n//           <h2 className=\"text-2xl font-semibold mb-4 text-[#00ADB5]\">\n//             Recommended Jobs\n//           </h2>\n//           <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n//             {recommendedJobs.map((job) => (\n//               <JobCard key={job.id} job={job} />\n//             ))}\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === \"search\" && (\n//         <div>\n//           <h2 className=\"text-2xl font-semibold mb-4 text-[#00ADB5]\">All Jobs</h2>\n//           <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n//             {filteredJobs.length > 0 ? (\n//               filteredJobs.map((job) => <JobCard key={job.id} job={job} />)\n//             ) : (\n//               <p className=\"text-gray-500\">No jobs found.</p>\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default JobsPage;\n\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n\n// const JobsPage = () => {\n//     const [jobs, setJobs] = useState([]); // State to store job data\n//     const [searchTerm, setSearchTerm] = useState(''); // State for the search input\n//     const [filteredJobs, setFilteredJobs] = useState([]); // State to store filtered jobs\n\n//     // Fetch all jobs from the backend\n//     useEffect(() => {\n//         const fetchJobs = async () => {\n//             try {\n//                 const response = await axios.get('http://localhost:8080/api/jobs/all');\n//                 setJobs(response.data);\n//                 setFilteredJobs(response.data); // Initialize filtered jobs with all jobs\n//             } catch (error) {\n//                 console.error('Error fetching jobs:', error);\n//             }\n//         };\n\n//         fetchJobs();\n//     }, []);\n\n//     // Handle search functionality\n//     const handleSearch = () => {\n//         const filtered = jobs.filter((job) =>\n//             job.role.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//             job.company.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//             job.location.toLowerCase().includes(searchTerm.toLowerCase())\n//         );\n//         setFilteredJobs(filtered);\n//     };\n\n//     // Handle bookmarking a job\n//     const handleBookmark = (jobId) => {\n//         alert(`Job with ID ${jobId} bookmarked!`);\n//         // Add API call here if you want to persist bookmarks\n//     };\n\n//     return (\n//         <div style={{ padding: '20px' }}>\n//             <h1>Job Listings</h1>\n\n//             {/* Search Bar */}\n//             <div style={{ marginBottom: '20px' ,marginTop:'50px'}}>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Search by role, company, or location\"\n//                     value={searchTerm}\n//                     onChange={(e) => setSearchTerm(e.target.value)}\n//                     style={{ padding: '10px', width: '300px', marginRight: '10px' }}\n//                 />\n//                 <button onClick={handleSearch} style={{ padding: '10px 20px' }}>\n//                     Search\n//                 </button>\n//             </div>\n\n//             {/* Job Cards */}\n//             <div>\n//                 {filteredJobs.map((job) => (\n//                     <div\n//                         key={job.id}\n//                         style={{\n//                             border: '1px solid #ccc',\n//                             padding: '20px',\n//                             marginBottom: '20px',\n//                             borderRadius: '8px',\n//                         }}\n//                     >\n//                         <h2>{job.role}</h2>\n//                         <p>\n//                             <strong>Company:</strong> {job.company}\n//                         </p>\n//                         <p>\n//                             <strong>Location:</strong> {job.location}\n//                         </p>\n//                         <p>\n//                             <strong>Source:</strong> {job.jobUrl.split('/')[2]} {/* Extract source from URL */}\n//                         </p>\n//                         <div>\n//                             <button\n//                                 onClick={() => handleBookmark(job.id)}\n//                                 style={{\n//                                     padding: '10px 15px',\n//                                     marginRight: '10px',\n//                                     backgroundColor: '#007bff',\n//                                     color: 'white',\n//                                     border: 'none',\n//                                     borderRadius: '5px',\n//                                     cursor: 'pointer',\n//                                 }}\n//                             >\n//                                 Bookmark\n//                             </button>\n//                             <button\n//                                 onClick={() => window.open(job.jobUrl, '_blank')}\n//                                 style={{\n//                                     padding: '10px 15px',\n//                                     backgroundColor: '#28a745',\n//                                     color: 'white',\n//                                     border: 'none',\n//                                     borderRadius: '5px',\n//                                     cursor: 'pointer',\n//                                 }}\n//                             >\n//                                 Apply\n//                             </button>\n//                         </div>\n//                     </div>\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default JobsPage;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport JobCard from \"../components/JobCard\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobsPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState(\"forYou\");\n  const [recommendedJobs, setRecommendedJobs] = useState([]);\n  const [allJobs, setAllJobs] = useState([]);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const [searchCompany, setSearchCompany] = useState(\"\");\n  const [searchLocation, setSearchLocation] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const user = localStorage.getItem(\"authToken\");\n    if (user) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n      navigate(\"/login\");\n    }\n    const fetchAllJobs = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/api/jobs/all\");\n        if (response.status === 200) {\n          setAllJobs(response.data);\n        } else {\n          setError(`Error: ${response.statusText}`);\n        }\n      } catch (err) {\n        setError(\"Network error. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllJobs();\n  }, [navigate]);\n  const filteredJobs = allJobs.filter(job => job.role.toLowerCase().includes(searchTitle.toLowerCase()) && job.company.toLowerCase().includes(searchCompany.toLowerCase()) && job.location.toLowerCase().includes(searchLocation.toLowerCase()));\n  if (!isLoggedIn) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 pt-24 max-w-5xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col sm:flex-row justify-center items-center gap-4 mb-6 bg-gray-100 p-4 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Find your perfect job\",\n        value: searchTitle,\n        onChange: e => setSearchTitle(e.target.value),\n        className: \"p-3 border border-gray-300 rounded-md w-full sm:w-2/3 focus:ring-2 focus:ring-[#00ADB5]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Company\",\n        value: searchCompany,\n        onChange: e => setSearchCompany(e.target.value),\n        className: \"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Location\",\n        value: searchLocation,\n        onChange: e => setSearchLocation(e.target.value),\n        className: \"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center gap-10 border-b mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `pb-2 text-lg font-semibold ${activeTab === \"forYou\" ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\" : \"text-gray-600\"}`,\n        onClick: () => setActiveTab(\"forYou\"),\n        children: \"For you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `pb-2 text-lg font-semibold ${activeTab === \"search\" ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\" : \"text-gray-600\"}`,\n        onClick: () => setActiveTab(\"search\"),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading jobs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 17\n    }, this), activeTab === \"forYou\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4 text-[#00ADB5]\",\n        children: \"Recommended Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: recommendedJobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n          job: job\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }, this), activeTab === \"search\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4 text-[#00ADB5]\",\n        children: \"All Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: filteredJobs.length > 0 ? filteredJobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n          job: job\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 41\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"No jobs found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this);\n};\n_s(JobsPage, \"6u7qMsDydxEIizjVc9uxwQHWVMk=\", false, function () {\n  return [useNavigate];\n});\n_c = JobsPage;\nexport default JobsPage;\nvar _c;\n$RefreshReg$(_c, \"JobsPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","JobCard","axios","jsxDEV","_jsxDEV","JobsPage","_s","navigate","activeTab","setActiveTab","recommendedJobs","setRecommendedJobs","allJobs","setAllJobs","searchTitle","setSearchTitle","searchCompany","setSearchCompany","searchLocation","setSearchLocation","isLoggedIn","setIsLoggedIn","loading","setLoading","error","setError","user","localStorage","getItem","fetchAllJobs","response","get","status","data","statusText","err","filteredJobs","filter","job","role","toLowerCase","includes","company","location","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","id","length","_c","$RefreshReg$"],"sources":["D:/project/web/job-portal/src/pages/JobsPage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import JobCard from \"../components/JobCard\";\r\n// import axios from \"axios\";\r\n\r\n// const JobsPage = () => {\r\n//   const navigate = useNavigate();\r\n//   const [activeTab, setActiveTab] = useState(\"forYou\");\r\n//   const [recommendedJobs, setRecommendedJobs] = useState([]);\r\n//   const [allJobs, setAllJobs] = useState([]);\r\n//   const [searchTitle, setSearchTitle] = useState(\"\");\r\n//   const [searchCompany, setSearchCompany] = useState(\"\"); // New state for company filter\r\n//   const [searchLocation, setSearchLocation] = useState(\"\");\r\n//   const [isLoggedIn, setIsLoggedIn] = useState(false); // Authentication state\r\n//   const [loading, setLoading] = useState(true); // Loading state for data fetch\r\n//   const [error, setError] = useState(\"\"); // Error state for handling any API issues\r\n\r\n//   useEffect(() => {\r\n//     // Check if user is logged in\r\n//     const user = localStorage.getItem(\"authToken\");\r\n//     if (user) {\r\n//       setIsLoggedIn(true); // Set logged in state if user is found\r\n//     } else {\r\n//       setIsLoggedIn(false); // Set logged out state if no user found\r\n//       navigate(\"/login\"); // Redirect to login page if not logged in\r\n//     }\r\n\r\n//     // Mock Recommended Jobs\r\n//     const mockRecommendedJobs = [\r\n//       {\r\n//         id: 2,\r\n//         role: \"Full-Stack Developer\",\r\n//         company: \"Google\",\r\n//         location: \"Mountain View, CA, USA\",\r\n//         description: \"Work on cutting-edge web technologies...\",\r\n//         source: \"LinkedIn\",\r\n//       },\r\n//       {\r\n//         id: 3,\r\n//         role: \"Data Scientist\",\r\n//         company: \"Meta\",\r\n//         location: \"Menlo Park, CA, USA\",\r\n//         description: \"Analyze and interpret complex data...\",\r\n//         source: \"Indeed\",\r\n//       },\r\n//       {\r\n//         id: 4,\r\n//         role: \"Machine Learning Engineer\",\r\n//         company: \"Amazon\",\r\n//         location: \"Seattle, WA, USA\",\r\n//         description: \"Develop and deploy ML models...\",\r\n//         source: \"Company Careers\",\r\n//       },\r\n//       {\r\n//         id: 5,\r\n//         role: \"Cloud Solutions Architect\",\r\n//         company: \"Microsoft\",\r\n//         location: \"Redmond, WA, USA\",\r\n//         description: \"Design scalable cloud architectures...\",\r\n//         source: \"Employee Referral\",\r\n//       },\r\n//     ];\r\n//     setRecommendedJobs(mockRecommendedJobs);\r\n\r\n//     // Fetch All Jobs\r\n//     const fetchAllJobs = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"http://localhost:8080/api/jobs/all\");\r\n//         console.log(response.data); // Check the API response data\r\n//         if (response.status === 200) {\r\n//           setAllJobs(response.data);\r\n//         } else {\r\n//           setError(`Error: ${response.statusText}`);\r\n//         }\r\n//       } catch (err) {\r\n//         console.error(\"Error fetching jobs:\", err);\r\n//         setError(\"Network error. Please try again later.\");\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n//     fetchAllJobs();\r\n//   }, [navigate]);\r\n\r\n//   // Filtered Jobs based on Search Criteria\r\n//   const filteredJobs = allJobs.filter(\r\n//     (job) =>\r\n//       job.role.toLowerCase().includes(searchTitle.toLowerCase()) &&\r\n//       job.company.toLowerCase().includes(searchCompany.toLowerCase()) &&\r\n//       job.location.toLowerCase().includes(searchLocation.toLowerCase())\r\n//   );\r\n\r\n//   // Render the Jobs Page only if logged in\r\n//   if (!isLoggedIn) return null;\r\n\r\n//   return (\r\n//     <div className=\"p-6 pt-24 max-w-5xl mx-auto\">\r\n//       {/* Search Bar */}\r\n//       <div className=\"flex flex-col sm:flex-row justify-center items-center gap-4 mb-6 bg-gray-100 p-4 rounded-lg shadow\">\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Find your perfect job\"\r\n//           value={searchTitle}\r\n//           onChange={(e) => setSearchTitle(e.target.value)}\r\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-2/3 focus:ring-2 focus:ring-[#00ADB5]\"\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Company\"\r\n//           value={searchCompany}\r\n//           onChange={(e) => setSearchCompany(e.target.value)} // Handle company search\r\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Location\"\r\n//           value={searchLocation}\r\n//           onChange={(e) => setSearchLocation(e.target.value)}\r\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\r\n//         />\r\n//       </div>\r\n\r\n//       {/* Tabs */}\r\n//       <div className=\"flex justify-center gap-10 border-b mb-6\">\r\n//         <button\r\n//           className={`pb-2 text-lg font-semibold ${\r\n//             activeTab === \"forYou\"\r\n//               ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\"\r\n//               : \"text-gray-600\"\r\n//           }`}\r\n//           onClick={() => setActiveTab(\"forYou\")}\r\n//         >\r\n//           For you\r\n//         </button>\r\n//         <button\r\n//           className={`pb-2 text-lg font-semibold ${\r\n//             activeTab === \"search\"\r\n//               ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\"\r\n//               : \"text-gray-600\"\r\n//           }`}\r\n//           onClick={() => (\"fetchAllJobs()\")}\r\n//         >\r\n//           Search\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Tab Content */}\r\n//       {activeTab === \"forYou\" && (\r\n//         <div>\r\n//           <h2 className=\"text-2xl font-semibold mb-4 text-[#00ADB5]\">\r\n//             Recommended Jobs\r\n//           </h2>\r\n//           <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//             {recommendedJobs.map((job) => (\r\n//               <JobCard key={job.id} job={job} />\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === \"search\" && (\r\n//         <div>\r\n//           <h2 className=\"text-2xl font-semibold mb-4 text-[#00ADB5]\">All Jobs</h2>\r\n//           <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//             {filteredJobs.length > 0 ? (\r\n//               filteredJobs.map((job) => <JobCard key={job.id} job={job} />)\r\n//             ) : (\r\n//               <p className=\"text-gray-500\">No jobs found.</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default JobsPage;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const JobsPage = () => {\r\n//     const [jobs, setJobs] = useState([]); // State to store job data\r\n//     const [searchTerm, setSearchTerm] = useState(''); // State for the search input\r\n//     const [filteredJobs, setFilteredJobs] = useState([]); // State to store filtered jobs\r\n\r\n//     // Fetch all jobs from the backend\r\n//     useEffect(() => {\r\n//         const fetchJobs = async () => {\r\n//             try {\r\n//                 const response = await axios.get('http://localhost:8080/api/jobs/all');\r\n//                 setJobs(response.data);\r\n//                 setFilteredJobs(response.data); // Initialize filtered jobs with all jobs\r\n//             } catch (error) {\r\n//                 console.error('Error fetching jobs:', error);\r\n//             }\r\n//         };\r\n\r\n//         fetchJobs();\r\n//     }, []);\r\n\r\n//     // Handle search functionality\r\n//     const handleSearch = () => {\r\n//         const filtered = jobs.filter((job) =>\r\n//             job.role.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//             job.company.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//             job.location.toLowerCase().includes(searchTerm.toLowerCase())\r\n//         );\r\n//         setFilteredJobs(filtered);\r\n//     };\r\n\r\n//     // Handle bookmarking a job\r\n//     const handleBookmark = (jobId) => {\r\n//         alert(`Job with ID ${jobId} bookmarked!`);\r\n//         // Add API call here if you want to persist bookmarks\r\n//     };\r\n\r\n//     return (\r\n//         <div style={{ padding: '20px' }}>\r\n//             <h1>Job Listings</h1>\r\n\r\n//             {/* Search Bar */}\r\n//             <div style={{ marginBottom: '20px' ,marginTop:'50px'}}>\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     placeholder=\"Search by role, company, or location\"\r\n//                     value={searchTerm}\r\n//                     onChange={(e) => setSearchTerm(e.target.value)}\r\n//                     style={{ padding: '10px', width: '300px', marginRight: '10px' }}\r\n//                 />\r\n//                 <button onClick={handleSearch} style={{ padding: '10px 20px' }}>\r\n//                     Search\r\n//                 </button>\r\n//             </div>\r\n\r\n//             {/* Job Cards */}\r\n//             <div>\r\n//                 {filteredJobs.map((job) => (\r\n//                     <div\r\n//                         key={job.id}\r\n//                         style={{\r\n//                             border: '1px solid #ccc',\r\n//                             padding: '20px',\r\n//                             marginBottom: '20px',\r\n//                             borderRadius: '8px',\r\n//                         }}\r\n//                     >\r\n//                         <h2>{job.role}</h2>\r\n//                         <p>\r\n//                             <strong>Company:</strong> {job.company}\r\n//                         </p>\r\n//                         <p>\r\n//                             <strong>Location:</strong> {job.location}\r\n//                         </p>\r\n//                         <p>\r\n//                             <strong>Source:</strong> {job.jobUrl.split('/')[2]} {/* Extract source from URL */}\r\n//                         </p>\r\n//                         <div>\r\n//                             <button\r\n//                                 onClick={() => handleBookmark(job.id)}\r\n//                                 style={{\r\n//                                     padding: '10px 15px',\r\n//                                     marginRight: '10px',\r\n//                                     backgroundColor: '#007bff',\r\n//                                     color: 'white',\r\n//                                     border: 'none',\r\n//                                     borderRadius: '5px',\r\n//                                     cursor: 'pointer',\r\n//                                 }}\r\n//                             >\r\n//                                 Bookmark\r\n//                             </button>\r\n//                             <button\r\n//                                 onClick={() => window.open(job.jobUrl, '_blank')}\r\n//                                 style={{\r\n//                                     padding: '10px 15px',\r\n//                                     backgroundColor: '#28a745',\r\n//                                     color: 'white',\r\n//                                     border: 'none',\r\n//                                     borderRadius: '5px',\r\n//                                     cursor: 'pointer',\r\n//                                 }}\r\n//                             >\r\n//                                 Apply\r\n//                             </button>\r\n//                         </div>\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default JobsPage;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport JobCard from \"../components/JobCard\";\r\nimport axios from \"axios\";\r\n\r\nconst JobsPage = () => {\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState(\"forYou\");\r\n  const [recommendedJobs, setRecommendedJobs] = useState([]);\r\n  const [allJobs, setAllJobs] = useState([]);\r\n  const [searchTitle, setSearchTitle] = useState(\"\");\r\n  const [searchCompany, setSearchCompany] = useState(\"\");\r\n  const [searchLocation, setSearchLocation] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const user = localStorage.getItem(\"authToken\");\r\n    if (user) {\r\n      setIsLoggedIn(true);\r\n    } else {\r\n      setIsLoggedIn(false);\r\n      navigate(\"/login\");\r\n    }\r\n\r\n    const fetchAllJobs = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8080/api/jobs/all\");\r\n        if (response.status === 200) {\r\n          setAllJobs(response.data);\r\n        } else {\r\n          setError(`Error: ${response.statusText}`);\r\n        }\r\n      } catch (err) {\r\n        setError(\"Network error. Please try again later.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchAllJobs();\r\n  }, [navigate]);\r\n\r\n  const filteredJobs = allJobs.filter(\r\n    (job) =>\r\n      job.role.toLowerCase().includes(searchTitle.toLowerCase()) &&\r\n      job.company.toLowerCase().includes(searchCompany.toLowerCase()) &&\r\n      job.location.toLowerCase().includes(searchLocation.toLowerCase())\r\n  );\r\n\r\n  if (!isLoggedIn) return null;\r\n\r\n  return (\r\n    <div className=\"p-6 pt-24 max-w-5xl mx-auto\">\r\n      {/* Search Bar */}\r\n      <div className=\"flex flex-col sm:flex-row justify-center items-center gap-4 mb-6 bg-gray-100 p-4 rounded-lg shadow\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Find your perfect job\"\r\n          value={searchTitle}\r\n          onChange={(e) => setSearchTitle(e.target.value)}\r\n          className=\"p-3 border border-gray-300 rounded-md w-full sm:w-2/3 focus:ring-2 focus:ring-[#00ADB5]\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Company\"\r\n          value={searchCompany}\r\n          onChange={(e) => setSearchCompany(e.target.value)}\r\n          className=\"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Location\"\r\n          value={searchLocation}\r\n          onChange={(e) => setSearchLocation(e.target.value)}\r\n          className=\"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\r\n        />\r\n      </div>\r\n\r\n      {/* Tabs */}\r\n      <div className=\"flex justify-center gap-10 border-b mb-6\">\r\n        <button\r\n          className={`pb-2 text-lg font-semibold ${\r\n            activeTab === \"forYou\"\r\n              ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\"\r\n              : \"text-gray-600\"\r\n          }`}\r\n          onClick={() => setActiveTab(\"forYou\")}\r\n        >\r\n          For you\r\n        </button>\r\n        <button\r\n          className={`pb-2 text-lg font-semibold ${\r\n            activeTab === \"search\"\r\n              ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\"\r\n              : \"text-gray-600\"\r\n          }`}\r\n          onClick={() => setActiveTab(\"search\")}\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n\r\n      {/* Tab Content */}\r\n      {loading && <p>Loading jobs...</p>}\r\n      {error && <p className=\"text-red-500\">{error}</p>}\r\n\r\n      {activeTab === \"forYou\" && (\r\n        <div>\r\n          <h2 className=\"text-2xl font-semibold mb-4 text-[#00ADB5]\">\r\n            Recommended Jobs\r\n          </h2>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {recommendedJobs.map((job) => (\r\n              <JobCard key={job.id} job={job} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === \"search\" && (\r\n        <div>\r\n          <h2 className=\"text-2xl font-semibold mb-4 text-[#00ADB5]\">All Jobs</h2>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {filteredJobs.length > 0 ? (\r\n              filteredJobs.map((job) => <JobCard key={job.id} job={job} />)\r\n            ) : (\r\n              <p className=\"text-gray-500\">No jobs found.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobsPage;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}