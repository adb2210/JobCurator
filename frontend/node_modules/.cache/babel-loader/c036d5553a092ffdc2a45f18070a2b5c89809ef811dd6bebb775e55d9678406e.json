{"ast":null,"code":"// import React, { useEffect } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n\n// const Navbar = ({ isAuthenticated, setIsAuthenticated }) => {\n//   const navigate = useNavigate();\n//   const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\")); // Retrieve logged-in user object\n\n//   useEffect(() => {\n//     // Check if there's a logged-in user and update the state\n//     const loggedInUser = localStorage.getItem(\"loggedInUser\");\n//     setIsAuthenticated(!!loggedInUser); // Set to true if logged-in user exists\n//   }, [setIsAuthenticated]);\n\n//   const handleLogout = () => {\n//     localStorage.removeItem('authToken'); // Remove user data from localStorage\n//     setIsAuthenticated(false); // Update state to reflect logged-out status\n//     navigate(\"/login\"); // Redirect to login page\n//   };\n\n//   const handleJobsClick = () => {\n//     if (isAuthenticated) {\n//       navigate(\"/jobs\"); // Navigate to the jobs page if authenticated\n//     } else {\n//       alert(\"Please Login First\"); // Alert and redirect to login page if not authenticated\n//       navigate(\"/login\");\n//     }\n//   };\n\n//   const handleProfile= () => {\n//     if (isAuthenticated) {\n//       navigate(\"/profile\"); // Navigate to Admin Panel if user is admin\n//     } else {\n//       alert(\"You need to log in as an admin to access the Admin Panel.\");\n//       navigate(\"/login\"); // Redirect to login page if not an admin or not authenticated\n//     }\n//   };\n\n//   return (\n//     <nav className=\"bg-gray-800 text-white p-4 fixed w-full top-0 left-0 z-50 shadow-lg\">\n//       <div className=\"flex justify-between items-center\">\n//         <div className=\"text-2xl font-bold\">\n//           <Link to=\"/\" className=\"hover:bg-gray-700 p-2 rounded\">\n//             JobCurator\n//           </Link>\n//         </div>\n//         <div className=\"space-x-6 flex items-center ml-4\">\n//           <button onClick={handleJobsClick} className=\"hover:bg-gray-700 p-2 rounded\">\n//             Jobs\n//           </button>\n//           {!isAuthenticated && (\n//             <>\n//               <Link to=\"/signup\" className=\"hover:bg-gray-700 p-2 rounded\">\n//                 Sign Up\n//               </Link>\n//               <Link to=\"/login\" className=\"hover:bg-gray-700 p-2 rounded\">\n//                 Login\n//               </Link>\n//             </>\n//           )}\n//           {isAuthenticated && (\n//             <>\n//               <button onclick={handleProfile} className=\"hover:bg-gray-700 p-2 rounded\">\n//                 Profile\n//               </button>\n//               <button onClick={handleLogout} className=\"bg-red-500 text-white p-2 rounded hover:bg-red-700\">\n//                 Logout\n//               </button>\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </nav>\n//   );\n// };\n\n// export default Navbar;","map":{"version":3,"names":[],"sources":["D:/project/web/job-portal/src/components/Navbar.jsx"],"sourcesContent":["// import React, { useEffect } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n\r\n// const Navbar = ({ isAuthenticated, setIsAuthenticated }) => {\r\n//   const navigate = useNavigate();\r\n//   const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\")); // Retrieve logged-in user object\r\n\r\n//   useEffect(() => {\r\n//     // Check if there's a logged-in user and update the state\r\n//     const loggedInUser = localStorage.getItem(\"loggedInUser\");\r\n//     setIsAuthenticated(!!loggedInUser); // Set to true if logged-in user exists\r\n//   }, [setIsAuthenticated]);\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem('authToken'); // Remove user data from localStorage\r\n//     setIsAuthenticated(false); // Update state to reflect logged-out status\r\n//     navigate(\"/login\"); // Redirect to login page\r\n//   };\r\n\r\n//   const handleJobsClick = () => {\r\n//     if (isAuthenticated) {\r\n//       navigate(\"/jobs\"); // Navigate to the jobs page if authenticated\r\n//     } else {\r\n//       alert(\"Please Login First\"); // Alert and redirect to login page if not authenticated\r\n//       navigate(\"/login\");\r\n//     }\r\n//   };\r\n\r\n//   const handleProfile= () => {\r\n//     if (isAuthenticated) {\r\n//       navigate(\"/profile\"); // Navigate to Admin Panel if user is admin\r\n//     } else {\r\n//       alert(\"You need to log in as an admin to access the Admin Panel.\");\r\n//       navigate(\"/login\"); // Redirect to login page if not an admin or not authenticated\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <nav className=\"bg-gray-800 text-white p-4 fixed w-full top-0 left-0 z-50 shadow-lg\">\r\n//       <div className=\"flex justify-between items-center\">\r\n//         <div className=\"text-2xl font-bold\">\r\n//           <Link to=\"/\" className=\"hover:bg-gray-700 p-2 rounded\">\r\n//             JobCurator\r\n//           </Link>\r\n//         </div>\r\n//         <div className=\"space-x-6 flex items-center ml-4\">\r\n//           <button onClick={handleJobsClick} className=\"hover:bg-gray-700 p-2 rounded\">\r\n//             Jobs\r\n//           </button>\r\n//           {!isAuthenticated && (\r\n//             <>\r\n//               <Link to=\"/signup\" className=\"hover:bg-gray-700 p-2 rounded\">\r\n//                 Sign Up\r\n//               </Link>\r\n//               <Link to=\"/login\" className=\"hover:bg-gray-700 p-2 rounded\">\r\n//                 Login\r\n//               </Link>\r\n//             </>\r\n//           )}\r\n//           {isAuthenticated && (\r\n//             <>\r\n//               <button onclick={handleProfile} className=\"hover:bg-gray-700 p-2 rounded\">\r\n//                 Profile\r\n//               </button>\r\n//               <button onClick={handleLogout} className=\"bg-red-500 text-white p-2 rounded hover:bg-red-700\">\r\n//                 Logout\r\n//               </button>\r\n//             </>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </nav>\r\n//   );\r\n// };\r\n\r\n// export default Navbar;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}