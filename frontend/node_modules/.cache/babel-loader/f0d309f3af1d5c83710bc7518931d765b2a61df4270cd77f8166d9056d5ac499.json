{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\web\\\\job-portal\\\\src\\\\pages\\\\JobsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport JobCard from \"./components/JobCard\"; // Correct the import path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobsPage = () => {\n  _s();\n  // State to hold jobs\n  const [jobs, setJobs] = useState([]);\n\n  // Example static job data (initially, it can be static before API call)\n  const exampleJobs = [{\n    id: 1,\n    title: \"Software Engineer\",\n    company: \"TechCorp\",\n    location: \"New York, NY\",\n    jobType: \"Full-time\",\n    shortDescription: \"Looking for a passionate Software Engineer.\",\n    source: \"Indeed\",\n    sourceUrl: \"https://www.indeed.com\"\n  }, {\n    id: 2,\n    title: \"Product Manager\",\n    company: \"InnovateX\",\n    location: \"San Francisco, CA\",\n    jobType: \"Full-time\",\n    shortDescription: \"We need a Product Manager to lead our projects.\",\n    source: \"LinkedIn\",\n    sourceUrl: \"https://www.linkedin.com\"\n  }, {\n    id: 3,\n    title: \"UX/UI Designer\",\n    company: \"CreativeMind\",\n    location: \"Los Angeles, CA\",\n    jobType: \"Contract\",\n    shortDescription: \"Seeking a skilled UX/UI Designer.\",\n    source: \"Glassdoor\",\n    sourceUrl: \"https://www.glassdoor.com\"\n  }, {\n    id: 4,\n    title: \"Data Scientist\",\n    company: \"DataVision\",\n    location: \"Chicago, IL\",\n    jobType: \"Full-time\",\n    shortDescription: \"Join our team of data scientists to work on innovative projects.\",\n    source: \"Indeed\",\n    sourceUrl: \"https://www.indeed.com\"\n  }];\n\n  // useEffect to simulate fetching data from an API and update the state\n  useEffect(() => {\n    // Simulate an API call with setTimeout or use your real API here\n    setTimeout(() => {\n      // You can replace this with an actual API call\n      // fetch(\"https://api.example.com/jobs\")\n      //   .then((response) => response.json())\n      //   .then((data) => setJobs(data));\n\n      // For now, using static job data as if it was fetched from an API\n      setJobs(exampleJobs);\n    }, 1000);\n  }, []); // Empty array ensures this runs once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-gray-800 mb-6\",\n      children: \"Job Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n      children: jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading job listings...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this) : jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        job: job\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(JobsPage, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = JobsPage;\nexport default JobsPage;\nvar _c;\n$RefreshReg$(_c, \"JobsPage\");","map":{"version":3,"names":["React","useState","useEffect","JobCard","jsxDEV","_jsxDEV","JobsPage","_s","jobs","setJobs","exampleJobs","id","title","company","location","jobType","shortDescription","source","sourceUrl","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","job","_c","$RefreshReg$"],"sources":["D:/project/web/job-portal/src/pages/JobsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport JobCard from \"./components/JobCard\";  // Correct the import path\r\n\r\nconst JobsPage = () => {\r\n  // State to hold jobs\r\n  const [jobs, setJobs] = useState([]);\r\n\r\n  // Example static job data (initially, it can be static before API call)\r\n  const exampleJobs = [\r\n    {\r\n      id: 1,\r\n      title: \"Software Engineer\",\r\n      company: \"TechCorp\",\r\n      location: \"New York, NY\",\r\n      jobType: \"Full-time\",\r\n      shortDescription: \"Looking for a passionate Software Engineer.\",\r\n      source: \"Indeed\",\r\n      sourceUrl: \"https://www.indeed.com\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Product Manager\",\r\n      company: \"InnovateX\",\r\n      location: \"San Francisco, CA\",\r\n      jobType: \"Full-time\",\r\n      shortDescription: \"We need a Product Manager to lead our projects.\",\r\n      source: \"LinkedIn\",\r\n      sourceUrl: \"https://www.linkedin.com\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"UX/UI Designer\",\r\n      company: \"CreativeMind\",\r\n      location: \"Los Angeles, CA\",\r\n      jobType: \"Contract\",\r\n      shortDescription: \"Seeking a skilled UX/UI Designer.\",\r\n      source: \"Glassdoor\",\r\n      sourceUrl: \"https://www.glassdoor.com\",\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Data Scientist\",\r\n      company: \"DataVision\",\r\n      location: \"Chicago, IL\",\r\n      jobType: \"Full-time\",\r\n      shortDescription: \"Join our team of data scientists to work on innovative projects.\",\r\n      source: \"Indeed\",\r\n      sourceUrl: \"https://www.indeed.com\",\r\n    },\r\n  ];\r\n\r\n  // useEffect to simulate fetching data from an API and update the state\r\n  useEffect(() => {\r\n    // Simulate an API call with setTimeout or use your real API here\r\n    setTimeout(() => {\r\n      // You can replace this with an actual API call\r\n      // fetch(\"https://api.example.com/jobs\")\r\n      //   .then((response) => response.json())\r\n      //   .then((data) => setJobs(data));\r\n\r\n      // For now, using static job data as if it was fetched from an API\r\n      setJobs(exampleJobs);\r\n    }, 1000);\r\n  }, []); // Empty array ensures this runs once when the component mounts\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      <h1 className=\"text-3xl font-bold text-gray-800 mb-6\">Job Listings</h1>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {jobs.length === 0 ? (\r\n          <p>Loading job listings...</p>\r\n        ) : (\r\n          jobs.map((job) => (\r\n            <JobCard key={job.id} job={job} />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,sBAAsB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMS,WAAW,GAAG,CAClB;IACEC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,mBAAmB;IAC1BC,OAAO,EAAE,UAAU;IACnBC,QAAQ,EAAE,cAAc;IACxBC,OAAO,EAAE,WAAW;IACpBC,gBAAgB,EAAE,6CAA6C;IAC/DC,MAAM,EAAE,QAAQ;IAChBC,SAAS,EAAE;EACb,CAAC,EACD;IACEP,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,iBAAiB;IACxBC,OAAO,EAAE,WAAW;IACpBC,QAAQ,EAAE,mBAAmB;IAC7BC,OAAO,EAAE,WAAW;IACpBC,gBAAgB,EAAE,iDAAiD;IACnEC,MAAM,EAAE,UAAU;IAClBC,SAAS,EAAE;EACb,CAAC,EACD;IACEP,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,gBAAgB;IACvBC,OAAO,EAAE,cAAc;IACvBC,QAAQ,EAAE,iBAAiB;IAC3BC,OAAO,EAAE,UAAU;IACnBC,gBAAgB,EAAE,mCAAmC;IACrDC,MAAM,EAAE,WAAW;IACnBC,SAAS,EAAE;EACb,CAAC,EACD;IACEP,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,gBAAgB;IACvBC,OAAO,EAAE,YAAY;IACrBC,QAAQ,EAAE,aAAa;IACvBC,OAAO,EAAE,WAAW;IACpBC,gBAAgB,EAAE,kEAAkE;IACpFC,MAAM,EAAE,QAAQ;IAChBC,SAAS,EAAE;EACb,CAAC,CACF;;EAED;EACAhB,SAAS,CAAC,MAAM;IACd;IACAiB,UAAU,CAAC,MAAM;MACf;MACA;MACA;MACA;;MAEA;MACAV,OAAO,CAACC,WAAW,CAAC;IACtB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKe,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpChB,OAAA;MAAIe,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvEpB,OAAA;MAAKe,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EAClEb,IAAI,CAACkB,MAAM,KAAK,CAAC,gBAChBrB,OAAA;QAAAgB,QAAA,EAAG;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAE9BjB,IAAI,CAACmB,GAAG,CAAEC,GAAG,iBACXvB,OAAA,CAACF,OAAO;QAAcyB,GAAG,EAAEA;MAAI,GAAjBA,GAAG,CAACjB,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAClC;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CA5EID,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AA8Ed,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}