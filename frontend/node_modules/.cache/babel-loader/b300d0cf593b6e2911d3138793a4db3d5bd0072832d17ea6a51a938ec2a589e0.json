{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\web\\\\job-portal\\\\src\\\\pages\\\\JobsPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import JobCard from \"../components/JobCard\";\n// import axios from \"axios\";\n\n// const JobsPage = () => {\n//   const navigate = useNavigate();\n//   const [activeTab, setActiveTab] = useState(\"forYou\");\n//   const [recommendedJobs, setRecommendedJobs] = useState([]);\n//   const [allJobs, setAllJobs] = useState([]);\n//   const [searchTitle, setSearchTitle] = useState(\"\");\n//   const [searchCompany, setSearchCompany] = useState(\"\"); \n//   const [searchLocation, setSearchLocation] = useState(\"\");\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(\"\"); \n//   const [filteredJobs, setFilteredJobs] = useState([]);\n\n//   useEffect(() => {\n//     // Check if user is logged in\n//     const user = localStorage.getItem(\"authToken\");\n//     if (user) {\n//       setIsLoggedIn(true);\n//     } else {\n//       setIsLoggedIn(false);\n//       navigate(\"/login\");\n//     }\n\n//     // Mock Recommended Jobs\n//     const mockRecommendedJobs = [\n//       { id: 2, role: \"Full-Stack Developer\", company: \"Google\", location: \"Mountain View, CA, USA\", source: \"LinkedIn\" },\n//       { id: 3, role: \"Data Scientist\", company: \"Meta\", location: \"Menlo Park, CA, USA\", source: \"Indeed\" },\n//       { id: 4, role: \"Machine Learning Engineer\", company: \"Amazon\", location: \"Seattle, WA, USA\", source: \"Company Careers\" },\n//       { id: 5, role: \"Cloud Solutions Architect\", company: \"Microsoft\", location: \"Redmond, WA, USA\", source: \"Employee Referral\" }\n//     ];\n//     setRecommendedJobs(mockRecommendedJobs);\n\n//   }, [navigate]);\n\n//   useEffect(() => {\n//     // Fetch all jobs only once on component mount\n//     const fetchAllJobs = async () => {\n//       setLoading(true);\n//       try {\n//         const response = await axios.get(\"http://localhost:8080/api/jobs/all\");\n//         if (response.status === 200) {\n//           setAllJobs(response.data);\n//           setFilteredJobs(response.data); // Initially, set filtered jobs to all jobs\n//         } else {\n//           setError(`Error: ${response.statusText}`);\n//         }\n//       } catch (err) {\n//         console.error(\"Error fetching jobs:\", err);\n//         setError(\"Network error. Please try again later.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     if (allJobs.length === 0) {\n//       fetchAllJobs();\n//     }\n//   }, [allJobs]);\n\n//   // Automatically filter jobs based on search inputs\n//   useEffect(() => {\n//     const filtered = allJobs.filter(\n//       (job) =>\n//         (job.role && job.role.toLowerCase().includes(searchTitle.toLowerCase())) &&\n//         (job.company && job.company.toLowerCase().includes(searchCompany.toLowerCase())) &&\n//         (job.location && job.location.toLowerCase().includes(searchLocation.toLowerCase()))\n//     );\n//     setFilteredJobs(filtered); // Update filtered jobs\n//     setActiveTab(\"search\"); // Switch to search tab when filtering\n//   }, [searchTitle, searchCompany, searchLocation, allJobs]);\n\n//   if (!isLoggedIn) return null;\n\n//   return (\n//     <div className=\"p-6 pt-24 max-w-5xl mx-auto\">\n//       {/* Search Bar */}\n//       <div className=\"flex flex-col sm:flex-row justify-center items-center gap-4 mb-6 bg-gray-100 p-4 rounded-lg shadow\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Find your perfect job\"\n//           value={searchTitle}\n//           onChange={(e) => setSearchTitle(e.target.value)}\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-2/3 focus:ring-2 focus:ring-[#00ADB5]\"\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Company\"\n//           value={searchCompany}\n//           onChange={(e) => setSearchCompany(e.target.value)} \n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Location\"\n//           value={searchLocation}\n//           onChange={(e) => setSearchLocation(e.target.value)}\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\n//         />\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"flex justify-center gap-10 border-b mb-6\">\n//         <button\n//           className={`pb-2 text-lg font-semibold ${\n//             activeTab === \"forYou\"\n//               ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\"\n//               : \"text-gray-600\"\n//           }`}\n//           onClick={() => setActiveTab(\"forYou\")}\n//         >\n//           For you\n//         </button>\n//         <button\n//           className={`pb-2 text-lg font-semibold ${\n//             activeTab === \"search\"\n//               ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\"\n//               : \"text-gray-600\"\n//           }`}\n//           onClick={() => setActiveTab(\"search\")}\n//         >\n//           Search\n//         </button>\n//       </div>\n\n//       {/* Tab Content */}\n//       {activeTab === \"forYou\" && (\n//         <div>\n//           <h2 className=\"text-2xl font-semibold mb-4 text-[#00ADB5]\">\n//             Recommended Jobs\n//           </h2>\n//           <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n//             {recommendedJobs.map((job) => (\n//               <JobCard key={job.id} job={job} />\n//             ))}\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === \"search\" && (\n//         <div>\n//           <h2 className=\"text-2xl font-semibold mb-4 text-[#00ADB5]\">All Jobs</h2>\n//           <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n//             {loading ? (\n//               <p>Loading jobs...</p>\n//             ) : filteredJobs.length > 0 ? (\n//               filteredJobs.map((job) => <JobCard key={job.id} job={job} />)\n//             ) : (\n//               <p className=\"text-gray-500\">No jobs found.</p>\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default JobsPage;\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport JobCard from \"../components/JobCard\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobsPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState(\"forYou\");\n  const [recommendedJobs, setRecommendedJobs] = useState([]);\n  const [allJobs, setAllJobs] = useState([]);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const [searchCompany, setSearchCompany] = useState(\"\");\n  const [searchLocation, setSearchLocation] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userEmail, setUserEmail] = useState(\"\"); // State to store user email\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [filteredJobs, setFilteredJobs] = useState([]);\n\n  // Check if the user is logged in and retrieve the email\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      setIsLoggedIn(true);\n      try {\n        const decodedToken = jwtDecode(token);\n        setUserEmail(decodedToken.email);\n      } catch (err) {\n        console.error(\"Error decoding token:\", err);\n        navigate(\"/login\");\n      }\n    } else {\n      setIsLoggedIn(false);\n      navigate(\"/login\");\n    }\n  }, [navigate]);\n\n  // Fetch all jobs from the API once on component mount\n  useEffect(() => {\n    const fetchAllJobs = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(\"http://localhost:8080/api/jobs/all\");\n        if (response.status === 200) {\n          setAllJobs(response.data);\n          setFilteredJobs(response.data); // Initially, set filtered jobs to all jobs\n        } else {\n          setError(`Error: ${response.statusText}`);\n        }\n      } catch (err) {\n        console.error(\"Error fetching jobs:\", err);\n        setError(\"Network error. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (allJobs.length === 0) {\n      fetchAllJobs();\n    }\n  }, [allJobs]);\n\n  // Automatically filter jobs based on search inputs\n  useEffect(() => {\n    const filtered = allJobs.filter(job => job.role && job.role.toLowerCase().includes(searchTitle.toLowerCase()) && job.company && job.company.toLowerCase().includes(searchCompany.toLowerCase()) && job.location && job.location.toLowerCase().includes(searchLocation.toLowerCase()));\n    setFilteredJobs(filtered); // Update filtered jobs\n    setActiveTab(\"search\"); // Switch to search tab when filtering\n  }, [searchTitle, searchCompany, searchLocation, allJobs]);\n\n  // Fetch recommended jobs based on the logged-in user's email\n  const fetchRecommendedJobs = useCallback(async () => {\n    if (!userEmail) return;\n    setLoading(true);\n    try {\n      const allJobsResponse = await axios.get(\"http://localhost:8080/api/jobs/all\");\n      const recommendedResponse = await axios.get(`http://localhost:8080/api/jobs/recommended/${userEmail}`);\n      if (allJobsResponse.status === 200 && recommendedResponse.status === 200) {\n        const allJobsData = allJobsResponse.data;\n        const recommendedData = recommendedResponse.data;\n\n        // Match recommended job titles with allJobs roles\n        const matchedJobs = allJobsData.filter(job => recommendedData.some(recJob => recJob.jobTitle.trim().toLowerCase() === job.role.trim().toLowerCase()));\n        setRecommendedJobs(matchedJobs);\n      }\n    } catch (err) {\n      console.error(\"Error fetching recommended jobs:\", err);\n      setError(\"Network error. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  }, [userEmail]);\n\n  // Fetch recommended jobs when activeTab is \"forYou\"\n  useEffect(() => {\n    if (activeTab === \"forYou\") {\n      fetchRecommendedJobs();\n    }\n  }, [activeTab, fetchRecommendedJobs]);\n  if (!isLoggedIn) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 pt-24 max-w-5xl mx-auto\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col sm:flex-row justify-center items-center gap-4 mb-6 bg-gray-100 p-4 rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Find your perfect job\",\n        value: searchTitle,\n        onChange: e => setSearchTitle(e.target.value),\n        className: \"p-3 border border-gray-300 rounded-md w-full sm:w-2/3 focus:ring-2 focus:ring-[#00ADB5]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Company\",\n        value: searchCompany,\n        onChange: e => setSearchCompany(e.target.value),\n        className: \"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Location\",\n        value: searchLocation,\n        onChange: e => setSearchLocation(e.target.value),\n        className: \"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center gap-10 border-b mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `pb-2 text-lg font-semibold ${activeTab === \"forYou\" ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\" : \"text-gray-600\"}`,\n        onClick: () => setActiveTab(\"forYou\"),\n        children: \"For you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `pb-2 text-lg font-semibold ${activeTab === \"search\" ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\" : \"text-gray-600\"}`,\n        onClick: () => setActiveTab(\"search\"),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), activeTab === \"forYou\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4 text-[#00ADB5]\",\n        children: \"Recommended Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: recommendedJobs.length > 0 ? recommendedJobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n          job: job\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 44\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"No recommended jobs found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this), activeTab === \"search\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4 text-[#00ADB5]\",\n        children: \"All Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading jobs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }, this) : filteredJobs.length > 0 ? filteredJobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n          job: job\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 41\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"No jobs found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\n_s(JobsPage, \"wphum3MuIl1lWmGVRrKDm3c5Nys=\", false, function () {\n  return [useNavigate];\n});\n_c = JobsPage;\nexport default JobsPage;\nvar _c;\n$RefreshReg$(_c, \"JobsPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","JobCard","axios","jwtDecode","jsxDEV","_jsxDEV","JobsPage","_s","navigate","activeTab","setActiveTab","recommendedJobs","setRecommendedJobs","allJobs","setAllJobs","searchTitle","setSearchTitle","searchCompany","setSearchCompany","searchLocation","setSearchLocation","isLoggedIn","setIsLoggedIn","userEmail","setUserEmail","loading","setLoading","error","setError","filteredJobs","setFilteredJobs","token","localStorage","getItem","decodedToken","email","err","console","fetchAllJobs","response","get","status","data","statusText","length","filtered","filter","job","role","toLowerCase","includes","company","location","fetchRecommendedJobs","allJobsResponse","recommendedResponse","allJobsData","recommendedData","matchedJobs","some","recJob","jobTitle","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","id","_c","$RefreshReg$"],"sources":["D:/project/web/job-portal/src/pages/JobsPage.jsx"],"sourcesContent":["\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import JobCard from \"../components/JobCard\";\r\n// import axios from \"axios\";\r\n\r\n// const JobsPage = () => {\r\n//   const navigate = useNavigate();\r\n//   const [activeTab, setActiveTab] = useState(\"forYou\");\r\n//   const [recommendedJobs, setRecommendedJobs] = useState([]);\r\n//   const [allJobs, setAllJobs] = useState([]);\r\n//   const [searchTitle, setSearchTitle] = useState(\"\");\r\n//   const [searchCompany, setSearchCompany] = useState(\"\"); \r\n//   const [searchLocation, setSearchLocation] = useState(\"\");\r\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(\"\"); \r\n//   const [filteredJobs, setFilteredJobs] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Check if user is logged in\r\n//     const user = localStorage.getItem(\"authToken\");\r\n//     if (user) {\r\n//       setIsLoggedIn(true);\r\n//     } else {\r\n//       setIsLoggedIn(false);\r\n//       navigate(\"/login\");\r\n//     }\r\n\r\n//     // Mock Recommended Jobs\r\n//     const mockRecommendedJobs = [\r\n//       { id: 2, role: \"Full-Stack Developer\", company: \"Google\", location: \"Mountain View, CA, USA\", source: \"LinkedIn\" },\r\n//       { id: 3, role: \"Data Scientist\", company: \"Meta\", location: \"Menlo Park, CA, USA\", source: \"Indeed\" },\r\n//       { id: 4, role: \"Machine Learning Engineer\", company: \"Amazon\", location: \"Seattle, WA, USA\", source: \"Company Careers\" },\r\n//       { id: 5, role: \"Cloud Solutions Architect\", company: \"Microsoft\", location: \"Redmond, WA, USA\", source: \"Employee Referral\" }\r\n//     ];\r\n//     setRecommendedJobs(mockRecommendedJobs);\r\n\r\n//   }, [navigate]);\r\n\r\n//   useEffect(() => {\r\n//     // Fetch all jobs only once on component mount\r\n//     const fetchAllJobs = async () => {\r\n//       setLoading(true);\r\n//       try {\r\n//         const response = await axios.get(\"http://localhost:8080/api/jobs/all\");\r\n//         if (response.status === 200) {\r\n//           setAllJobs(response.data);\r\n//           setFilteredJobs(response.data); // Initially, set filtered jobs to all jobs\r\n//         } else {\r\n//           setError(`Error: ${response.statusText}`);\r\n//         }\r\n//       } catch (err) {\r\n//         console.error(\"Error fetching jobs:\", err);\r\n//         setError(\"Network error. Please try again later.\");\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     if (allJobs.length === 0) {\r\n//       fetchAllJobs();\r\n//     }\r\n//   }, [allJobs]);\r\n\r\n//   // Automatically filter jobs based on search inputs\r\n//   useEffect(() => {\r\n//     const filtered = allJobs.filter(\r\n//       (job) =>\r\n//         (job.role && job.role.toLowerCase().includes(searchTitle.toLowerCase())) &&\r\n//         (job.company && job.company.toLowerCase().includes(searchCompany.toLowerCase())) &&\r\n//         (job.location && job.location.toLowerCase().includes(searchLocation.toLowerCase()))\r\n//     );\r\n//     setFilteredJobs(filtered); // Update filtered jobs\r\n//     setActiveTab(\"search\"); // Switch to search tab when filtering\r\n//   }, [searchTitle, searchCompany, searchLocation, allJobs]);\r\n\r\n//   if (!isLoggedIn) return null;\r\n\r\n//   return (\r\n//     <div className=\"p-6 pt-24 max-w-5xl mx-auto\">\r\n//       {/* Search Bar */}\r\n//       <div className=\"flex flex-col sm:flex-row justify-center items-center gap-4 mb-6 bg-gray-100 p-4 rounded-lg shadow\">\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Find your perfect job\"\r\n//           value={searchTitle}\r\n//           onChange={(e) => setSearchTitle(e.target.value)}\r\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-2/3 focus:ring-2 focus:ring-[#00ADB5]\"\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Company\"\r\n//           value={searchCompany}\r\n//           onChange={(e) => setSearchCompany(e.target.value)} \r\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Location\"\r\n//           value={searchLocation}\r\n//           onChange={(e) => setSearchLocation(e.target.value)}\r\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\r\n//         />\r\n//       </div>\r\n\r\n//       {/* Tabs */}\r\n//       <div className=\"flex justify-center gap-10 border-b mb-6\">\r\n//         <button\r\n//           className={`pb-2 text-lg font-semibold ${\r\n//             activeTab === \"forYou\"\r\n//               ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\"\r\n//               : \"text-gray-600\"\r\n//           }`}\r\n//           onClick={() => setActiveTab(\"forYou\")}\r\n//         >\r\n//           For you\r\n//         </button>\r\n//         <button\r\n//           className={`pb-2 text-lg font-semibold ${\r\n//             activeTab === \"search\"\r\n//               ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\"\r\n//               : \"text-gray-600\"\r\n//           }`}\r\n//           onClick={() => setActiveTab(\"search\")}\r\n//         >\r\n//           Search\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Tab Content */}\r\n//       {activeTab === \"forYou\" && (\r\n//         <div>\r\n//           <h2 className=\"text-2xl font-semibold mb-4 text-[#00ADB5]\">\r\n//             Recommended Jobs\r\n//           </h2>\r\n//           <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//             {recommendedJobs.map((job) => (\r\n//               <JobCard key={job.id} job={job} />\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === \"search\" && (\r\n//         <div>\r\n//           <h2 className=\"text-2xl font-semibold mb-4 text-[#00ADB5]\">All Jobs</h2>\r\n//           <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//             {loading ? (\r\n//               <p>Loading jobs...</p>\r\n//             ) : filteredJobs.length > 0 ? (\r\n//               filteredJobs.map((job) => <JobCard key={job.id} job={job} />)\r\n//             ) : (\r\n//               <p className=\"text-gray-500\">No jobs found.</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default JobsPage;\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport JobCard from \"../components/JobCard\";\r\nimport axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nconst JobsPage = () => {\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState(\"forYou\");\r\n  const [recommendedJobs, setRecommendedJobs] = useState([]);\r\n  const [allJobs, setAllJobs] = useState([]);\r\n  const [searchTitle, setSearchTitle] = useState(\"\");\r\n  const [searchCompany, setSearchCompany] = useState(\"\"); \r\n  const [searchLocation, setSearchLocation] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userEmail, setUserEmail] = useState(\"\"); // State to store user email\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\"); \r\n  const [filteredJobs, setFilteredJobs] = useState([]);\r\n\r\n  // Check if the user is logged in and retrieve the email\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n    if (token) {\r\n      setIsLoggedIn(true);\r\n      try {\r\n        const decodedToken = jwtDecode(token);\r\n        setUserEmail(decodedToken.email);\r\n      } catch (err) {\r\n        console.error(\"Error decoding token:\", err);\r\n        navigate(\"/login\");\r\n      }\r\n    } else {\r\n      setIsLoggedIn(false);\r\n      navigate(\"/login\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Fetch all jobs from the API once on component mount\r\n  useEffect(() => {\r\n    const fetchAllJobs = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8080/api/jobs/all\");\r\n        if (response.status === 200) {\r\n          setAllJobs(response.data);\r\n          setFilteredJobs(response.data); // Initially, set filtered jobs to all jobs\r\n        } else {\r\n          setError(`Error: ${response.statusText}`);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching jobs:\", err);\r\n        setError(\"Network error. Please try again later.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (allJobs.length === 0) {\r\n      fetchAllJobs();\r\n    }\r\n  }, [allJobs]);\r\n\r\n  // Automatically filter jobs based on search inputs\r\n  useEffect(() => {\r\n    const filtered = allJobs.filter(\r\n      (job) =>\r\n        (job.role && job.role.toLowerCase().includes(searchTitle.toLowerCase())) &&\r\n        (job.company && job.company.toLowerCase().includes(searchCompany.toLowerCase())) &&\r\n        (job.location && job.location.toLowerCase().includes(searchLocation.toLowerCase()))\r\n    );\r\n    setFilteredJobs(filtered); // Update filtered jobs\r\n    setActiveTab(\"search\"); // Switch to search tab when filtering\r\n  }, [searchTitle, searchCompany, searchLocation, allJobs]);\r\n\r\n  // Fetch recommended jobs based on the logged-in user's email\r\n  const fetchRecommendedJobs = useCallback(async () => {\r\n    if (!userEmail) return;\r\n    setLoading(true);\r\n    try {\r\n      const allJobsResponse = await axios.get(\"http://localhost:8080/api/jobs/all\");\r\n      const recommendedResponse = await axios.get(\r\n        `http://localhost:8080/api/jobs/recommended/${userEmail}`\r\n      );\r\n\r\n      if (allJobsResponse.status === 200 && recommendedResponse.status === 200) {\r\n        const allJobsData = allJobsResponse.data;\r\n        const recommendedData = recommendedResponse.data;\r\n\r\n        // Match recommended job titles with allJobs roles\r\n        const matchedJobs = allJobsData.filter((job) =>\r\n          recommendedData.some(\r\n            (recJob) =>\r\n              recJob.jobTitle.trim().toLowerCase() === job.role.trim().toLowerCase()\r\n          )\r\n        );\r\n\r\n        setRecommendedJobs(matchedJobs);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching recommended jobs:\", err);\r\n      setError(\"Network error. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [userEmail]);\r\n\r\n  // Fetch recommended jobs when activeTab is \"forYou\"\r\n  useEffect(() => {\r\n    if (activeTab === \"forYou\") {\r\n      fetchRecommendedJobs();\r\n    }\r\n  }, [activeTab, fetchRecommendedJobs]);\r\n\r\n  if (!isLoggedIn) return null;\r\n\r\n  return (\r\n    <div className=\"p-6 pt-24 max-w-5xl mx-auto\">\r\n      {error && <p className=\"text-red-500\">{error}</p>}\r\n\r\n      {/* Search Bar */}\r\n      <div className=\"flex flex-col sm:flex-row justify-center items-center gap-4 mb-6 bg-gray-100 p-4 rounded-lg shadow\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Find your perfect job\"\r\n          value={searchTitle}\r\n          onChange={(e) => setSearchTitle(e.target.value)}\r\n          className=\"p-3 border border-gray-300 rounded-md w-full sm:w-2/3 focus:ring-2 focus:ring-[#00ADB5]\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Company\"\r\n          value={searchCompany}\r\n          onChange={(e) => setSearchCompany(e.target.value)}\r\n          className=\"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Location\"\r\n          value={searchLocation}\r\n          onChange={(e) => setSearchLocation(e.target.value)}\r\n          className=\"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\r\n        />\r\n      </div>\r\n\r\n      {/* Tabs */}\r\n      <div className=\"flex justify-center gap-10 border-b mb-6\">\r\n        <button\r\n          className={`pb-2 text-lg font-semibold ${activeTab === \"forYou\" ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\" : \"text-gray-600\"}`}\r\n          onClick={() => setActiveTab(\"forYou\")}\r\n        >\r\n          For you\r\n        </button>\r\n        <button\r\n          className={`pb-2 text-lg font-semibold ${activeTab === \"search\" ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\" : \"text-gray-600\"}`}\r\n          onClick={() => setActiveTab(\"search\")}\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n\r\n      {/* Tab Content */}\r\n      {activeTab === \"forYou\" && (\r\n        <div>\r\n          <h2 className=\"text-2xl font-semibold mb-4 text-[#00ADB5]\">Recommended Jobs</h2>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {recommendedJobs.length > 0 ? (\r\n              recommendedJobs.map((job) => <JobCard key={job.id} job={job} />)\r\n            ) : (\r\n              <p className=\"text-gray-500\">No recommended jobs found.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === \"search\" && (\r\n        <div>\r\n          <h2 className=\"text-2xl font-semibold mb-4 text-[#00ADB5]\">All Jobs</h2>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {loading ? (\r\n              <p>Loading jobs...</p>\r\n            ) : filteredJobs.length > 0 ? (\r\n              filteredJobs.map((job) => <JobCard key={job.id} job={job} />)\r\n            ) : (\r\n              <p className=\"text-gray-500\">No jobs found.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobsPage;\r\n"],"mappings":";;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,QAAQ,CAAC;EACpD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACgB,OAAO,EAAEC,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}