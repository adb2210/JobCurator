{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\web\\\\job-portal\\\\src\\\\pages\\\\JobsPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import JobCard from \"../components/JobCard\";\n// import axios from \"axios\";\n\n// const JobsPage = () => {\n//   const navigate = useNavigate();\n//   const [activeTab, setActiveTab] = useState(\"forYou\");\n//   const [recommendedJobs, setRecommendedJobs] = useState([]);\n//   const [allJobs, setAllJobs] = useState([]);\n//   const [searchTitle, setSearchTitle] = useState(\"\");\n//   const [searchCompany, setSearchCompany] = useState(\"\"); // New state for company filter\n//   const [searchLocation, setSearchLocation] = useState(\"\");\n//   const [isLoggedIn, setIsLoggedIn] = useState(false); // Authentication state\n//   const [loading, setLoading] = useState(true); // Loading state for data fetch\n//   const [error, setError] = useState(\"\"); // Error state for handling any API issues\n\n//   useEffect(() => {\n//     // Check if user is logged in\n//     const user = localStorage.getItem(\"authToken\");\n//     if (user) {\n//       setIsLoggedIn(true); // Set logged in state if user is found\n//     } else {\n//       setIsLoggedIn(false); // Set logged out state if no user found\n//       navigate(\"/login\"); // Redirect to login page if not logged in\n//     }\n\n//     // Mock Recommended Jobs\n//     const mockRecommendedJobs = [\n//       {\n//         id: 2,\n//         role: \"Full-Stack Developer\",\n//         company: \"Google\",\n//         location: \"Mountain View, CA, USA\",\n//         description: \"Work on cutting-edge web technologies...\",\n//         source: \"LinkedIn\",\n//       },\n//       {\n//         id: 3,\n//         role: \"Data Scientist\",\n//         company: \"Meta\",\n//         location: \"Menlo Park, CA, USA\",\n//         description: \"Analyze and interpret complex data...\",\n//         source: \"Indeed\",\n//       },\n//       {\n//         id: 4,\n//         role: \"Machine Learning Engineer\",\n//         company: \"Amazon\",\n//         location: \"Seattle, WA, USA\",\n//         description: \"Develop and deploy ML models...\",\n//         source: \"Company Careers\",\n//       },\n//       {\n//         id: 5,\n//         role: \"Cloud Solutions Architect\",\n//         company: \"Microsoft\",\n//         location: \"Redmond, WA, USA\",\n//         description: \"Design scalable cloud architectures...\",\n//         source: \"Employee Referral\",\n//       },\n//     ];\n//     setRecommendedJobs(mockRecommendedJobs);\n\n//     // Fetch All Jobs\n//     const fetchAllJobs = async () => {\n//       try {\n//         const response = await axios.get(\"http://localhost:8080/api/jobs/all\");\n//         console.log(response.data); // Check the API response data\n//         if (response.status === 200) {\n//           setAllJobs(response.data);\n//         } else {\n//           setError(`Error: ${response.statusText}`);\n//         }\n//       } catch (err) {\n//         console.error(\"Error fetching jobs:\", err);\n//         setError(\"Network error. Please try again later.\");\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchAllJobs();\n//   }, [navigate]);\n\n//   // Filtered Jobs based on Search Criteria\n//   const filteredJobs = allJobs.filter(\n//     (job) =>\n//       job.role.toLowerCase().includes(searchTitle.toLowerCase()) &&\n//       job.company.toLowerCase().includes(searchCompany.toLowerCase()) &&\n//       job.location.toLowerCase().includes(searchLocation.toLowerCase())\n//   );\n\n//   // Render the Jobs Page only if logged in\n//   if (!isLoggedIn) return null;\n\n//   return (\n//     <div className=\"p-6 pt-24 max-w-5xl mx-auto\">\n//       {/* Search Bar */}\n//       <div className=\"flex flex-col sm:flex-row justify-center items-center gap-4 mb-6 bg-gray-100 p-4 rounded-lg shadow\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Find your perfect job\"\n//           value={searchTitle}\n//           onChange={(e) => setSearchTitle(e.target.value)}\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-2/3 focus:ring-2 focus:ring-[#00ADB5]\"\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Company\"\n//           value={searchCompany}\n//           onChange={(e) => setSearchCompany(e.target.value)} // Handle company search\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Location\"\n//           value={searchLocation}\n//           onChange={(e) => setSearchLocation(e.target.value)}\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\n//         />\n//       </div>\n\n//       {/* Tabs */}\n//       <div className=\"flex justify-center gap-10 border-b mb-6\">\n//         <button\n//           className={`pb-2 text-lg font-semibold ${\n//             activeTab === \"forYou\"\n//               ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\"\n//               : \"text-gray-600\"\n//           }`}\n//           onClick={() => setActiveTab(\"forYou\")}\n//         >\n//           For you\n//         </button>\n//         <button\n//           className={`pb-2 text-lg font-semibold ${\n//             activeTab === \"search\"\n//               ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\"\n//               : \"text-gray-600\"\n//           }`}\n//           onClick={() => (\"fetchAllJobs()\")}\n//         >\n//           Search\n//         </button>\n//       </div>\n\n//       {/* Tab Content */}\n//       {activeTab === \"forYou\" && (\n//         <div>\n//           <h2 className=\"text-2xl font-semibold mb-4 text-[#00ADB5]\">\n//             Recommended Jobs\n//           </h2>\n//           <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n//             {recommendedJobs.map((job) => (\n//               <JobCard key={job.id} job={job} />\n//             ))}\n//           </div>\n//         </div>\n//       )}\n\n//       {activeTab === \"search\" && (\n//         <div>\n//           <h2 className=\"text-2xl font-semibold mb-4 text-[#00ADB5]\">All Jobs</h2>\n//           <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n//             {filteredJobs.length > 0 ? (\n//               filteredJobs.map((job) => <JobCard key={job.id} job={job} />)\n//             ) : (\n//               <p className=\"text-gray-500\">No jobs found.</p>\n//             )}\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default JobsPage;\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobsPage = () => {\n  _s();\n  const [jobs, setJobs] = useState([]); // State to store job data\n  const [searchTerm, setSearchTerm] = useState(''); // State for the search input\n  const [filteredJobs, setFilteredJobs] = useState([]); // State to store filtered jobs\n\n  // Fetch all jobs from the backend\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/api/jobs');\n        setJobs(response.data);\n        setFilteredJobs(response.data); // Initialize filtered jobs with all jobs\n      } catch (error) {\n        console.error('Error fetching jobs:', error);\n      }\n    };\n    fetchJobs();\n  }, []);\n\n  // Handle search functionality\n  const handleSearch = () => {\n    const filtered = jobs.filter(job => job.role.toLowerCase().includes(searchTerm.toLowerCase()) || job.company.toLowerCase().includes(searchTerm.toLowerCase()) || job.location.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredJobs(filtered);\n  };\n\n  // Handle bookmarking a job\n  const handleBookmark = jobId => {\n    alert(`Job with ID ${jobId} bookmarked!`);\n    // Add API call here if you want to persist bookmarks\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Job Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        margin\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by role, company, or location\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        style: {\n          padding: '10px',\n          width: '300px',\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        style: {\n          padding: '10px 20px'\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '20px',\n          marginBottom: '20px',\n          borderRadius: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: job.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Company:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this), \" \", job.company]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), \" \", job.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Source:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }, this), \" \", job.jobUrl.split('/')[2], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleBookmark(job.id),\n            style: {\n              padding: '10px 15px',\n              marginRight: '10px',\n              backgroundColor: '#007bff',\n              color: 'white',\n              border: 'none',\n              borderRadius: '5px',\n              cursor: 'pointer'\n            },\n            children: \"Bookmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => window.open(job.jobUrl, '_blank'),\n            style: {\n              padding: '10px 15px',\n              backgroundColor: '#28a745',\n              color: 'white',\n              border: 'none',\n              borderRadius: '5px',\n              cursor: 'pointer'\n            },\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this)]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 9\n  }, this);\n};\n_s(JobsPage, \"KJn2D5+0hlr+9IbSKEGlm2FT2rU=\");\n_c = JobsPage;\nexport default JobsPage;\nvar _c;\n$RefreshReg$(_c, \"JobsPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","JobsPage","_s","jobs","setJobs","searchTerm","setSearchTerm","filteredJobs","setFilteredJobs","fetchJobs","response","get","data","error","console","handleSearch","filtered","filter","job","role","toLowerCase","includes","company","location","handleBookmark","jobId","alert","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","margin","type","placeholder","value","onChange","e","target","width","marginRight","onClick","map","border","borderRadius","jobUrl","split","id","backgroundColor","color","cursor","window","open","_c","$RefreshReg$"],"sources":["D:/project/web/job-portal/src/pages/JobsPage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import JobCard from \"../components/JobCard\";\r\n// import axios from \"axios\";\r\n\r\n// const JobsPage = () => {\r\n//   const navigate = useNavigate();\r\n//   const [activeTab, setActiveTab] = useState(\"forYou\");\r\n//   const [recommendedJobs, setRecommendedJobs] = useState([]);\r\n//   const [allJobs, setAllJobs] = useState([]);\r\n//   const [searchTitle, setSearchTitle] = useState(\"\");\r\n//   const [searchCompany, setSearchCompany] = useState(\"\"); // New state for company filter\r\n//   const [searchLocation, setSearchLocation] = useState(\"\");\r\n//   const [isLoggedIn, setIsLoggedIn] = useState(false); // Authentication state\r\n//   const [loading, setLoading] = useState(true); // Loading state for data fetch\r\n//   const [error, setError] = useState(\"\"); // Error state for handling any API issues\r\n\r\n//   useEffect(() => {\r\n//     // Check if user is logged in\r\n//     const user = localStorage.getItem(\"authToken\");\r\n//     if (user) {\r\n//       setIsLoggedIn(true); // Set logged in state if user is found\r\n//     } else {\r\n//       setIsLoggedIn(false); // Set logged out state if no user found\r\n//       navigate(\"/login\"); // Redirect to login page if not logged in\r\n//     }\r\n\r\n//     // Mock Recommended Jobs\r\n//     const mockRecommendedJobs = [\r\n//       {\r\n//         id: 2,\r\n//         role: \"Full-Stack Developer\",\r\n//         company: \"Google\",\r\n//         location: \"Mountain View, CA, USA\",\r\n//         description: \"Work on cutting-edge web technologies...\",\r\n//         source: \"LinkedIn\",\r\n//       },\r\n//       {\r\n//         id: 3,\r\n//         role: \"Data Scientist\",\r\n//         company: \"Meta\",\r\n//         location: \"Menlo Park, CA, USA\",\r\n//         description: \"Analyze and interpret complex data...\",\r\n//         source: \"Indeed\",\r\n//       },\r\n//       {\r\n//         id: 4,\r\n//         role: \"Machine Learning Engineer\",\r\n//         company: \"Amazon\",\r\n//         location: \"Seattle, WA, USA\",\r\n//         description: \"Develop and deploy ML models...\",\r\n//         source: \"Company Careers\",\r\n//       },\r\n//       {\r\n//         id: 5,\r\n//         role: \"Cloud Solutions Architect\",\r\n//         company: \"Microsoft\",\r\n//         location: \"Redmond, WA, USA\",\r\n//         description: \"Design scalable cloud architectures...\",\r\n//         source: \"Employee Referral\",\r\n//       },\r\n//     ];\r\n//     setRecommendedJobs(mockRecommendedJobs);\r\n\r\n//     // Fetch All Jobs\r\n//     const fetchAllJobs = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"http://localhost:8080/api/jobs/all\");\r\n//         console.log(response.data); // Check the API response data\r\n//         if (response.status === 200) {\r\n//           setAllJobs(response.data);\r\n//         } else {\r\n//           setError(`Error: ${response.statusText}`);\r\n//         }\r\n//       } catch (err) {\r\n//         console.error(\"Error fetching jobs:\", err);\r\n//         setError(\"Network error. Please try again later.\");\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n//     fetchAllJobs();\r\n//   }, [navigate]);\r\n\r\n//   // Filtered Jobs based on Search Criteria\r\n//   const filteredJobs = allJobs.filter(\r\n//     (job) =>\r\n//       job.role.toLowerCase().includes(searchTitle.toLowerCase()) &&\r\n//       job.company.toLowerCase().includes(searchCompany.toLowerCase()) &&\r\n//       job.location.toLowerCase().includes(searchLocation.toLowerCase())\r\n//   );\r\n\r\n//   // Render the Jobs Page only if logged in\r\n//   if (!isLoggedIn) return null;\r\n\r\n//   return (\r\n//     <div className=\"p-6 pt-24 max-w-5xl mx-auto\">\r\n//       {/* Search Bar */}\r\n//       <div className=\"flex flex-col sm:flex-row justify-center items-center gap-4 mb-6 bg-gray-100 p-4 rounded-lg shadow\">\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Find your perfect job\"\r\n//           value={searchTitle}\r\n//           onChange={(e) => setSearchTitle(e.target.value)}\r\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-2/3 focus:ring-2 focus:ring-[#00ADB5]\"\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Company\"\r\n//           value={searchCompany}\r\n//           onChange={(e) => setSearchCompany(e.target.value)} // Handle company search\r\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Location\"\r\n//           value={searchLocation}\r\n//           onChange={(e) => setSearchLocation(e.target.value)}\r\n//           className=\"p-3 border border-gray-300 rounded-md w-full sm:w-1/3 focus:ring-2 focus:ring-[#00ADB5]\"\r\n//         />\r\n//       </div>\r\n\r\n//       {/* Tabs */}\r\n//       <div className=\"flex justify-center gap-10 border-b mb-6\">\r\n//         <button\r\n//           className={`pb-2 text-lg font-semibold ${\r\n//             activeTab === \"forYou\"\r\n//               ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\"\r\n//               : \"text-gray-600\"\r\n//           }`}\r\n//           onClick={() => setActiveTab(\"forYou\")}\r\n//         >\r\n//           For you\r\n//         </button>\r\n//         <button\r\n//           className={`pb-2 text-lg font-semibold ${\r\n//             activeTab === \"search\"\r\n//               ? \"border-b-4 border-[#00ADB5] text-[#00ADB5]\"\r\n//               : \"text-gray-600\"\r\n//           }`}\r\n//           onClick={() => (\"fetchAllJobs()\")}\r\n//         >\r\n//           Search\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Tab Content */}\r\n//       {activeTab === \"forYou\" && (\r\n//         <div>\r\n//           <h2 className=\"text-2xl font-semibold mb-4 text-[#00ADB5]\">\r\n//             Recommended Jobs\r\n//           </h2>\r\n//           <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//             {recommendedJobs.map((job) => (\r\n//               <JobCard key={job.id} job={job} />\r\n//             ))}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {activeTab === \"search\" && (\r\n//         <div>\r\n//           <h2 className=\"text-2xl font-semibold mb-4 text-[#00ADB5]\">All Jobs</h2>\r\n//           <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n//             {filteredJobs.length > 0 ? (\r\n//               filteredJobs.map((job) => <JobCard key={job.id} job={job} />)\r\n//             ) : (\r\n//               <p className=\"text-gray-500\">No jobs found.</p>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default JobsPage;\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst JobsPage = () => {\r\n    const [jobs, setJobs] = useState([]); // State to store job data\r\n    const [searchTerm, setSearchTerm] = useState(''); // State for the search input\r\n    const [filteredJobs, setFilteredJobs] = useState([]); // State to store filtered jobs\r\n\r\n    // Fetch all jobs from the backend\r\n    useEffect(() => {\r\n        const fetchJobs = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8080/api/jobs');\r\n                setJobs(response.data);\r\n                setFilteredJobs(response.data); // Initialize filtered jobs with all jobs\r\n            } catch (error) {\r\n                console.error('Error fetching jobs:', error);\r\n            }\r\n        };\r\n\r\n        fetchJobs();\r\n    }, []);\r\n\r\n    // Handle search functionality\r\n    const handleSearch = () => {\r\n        const filtered = jobs.filter((job) =>\r\n            job.role.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n            job.company.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n            job.location.toLowerCase().includes(searchTerm.toLowerCase())\r\n        );\r\n        setFilteredJobs(filtered);\r\n    };\r\n\r\n    // Handle bookmarking a job\r\n    const handleBookmark = (jobId) => {\r\n        alert(`Job with ID ${jobId} bookmarked!`);\r\n        // Add API call here if you want to persist bookmarks\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px' }}>\r\n            <h1>Job Listings</h1>\r\n\r\n            {/* Search Bar */}\r\n            <div style={{ marginBottom: '20px' ,margin}}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search by role, company, or location\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    style={{ padding: '10px', width: '300px', marginRight: '10px' }}\r\n                />\r\n                <button onClick={handleSearch} style={{ padding: '10px 20px' }}>\r\n                    Search\r\n                </button>\r\n            </div>\r\n\r\n            {/* Job Cards */}\r\n            <div>\r\n                {filteredJobs.map((job) => (\r\n                    <div\r\n                        key={job.id}\r\n                        style={{\r\n                            border: '1px solid #ccc',\r\n                            padding: '20px',\r\n                            marginBottom: '20px',\r\n                            borderRadius: '8px',\r\n                        }}\r\n                    >\r\n                        <h2>{job.role}</h2>\r\n                        <p>\r\n                            <strong>Company:</strong> {job.company}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Location:</strong> {job.location}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Source:</strong> {job.jobUrl.split('/')[2]} {/* Extract source from URL */}\r\n                        </p>\r\n                        <div>\r\n                            <button\r\n                                onClick={() => handleBookmark(job.id)}\r\n                                style={{\r\n                                    padding: '10px 15px',\r\n                                    marginRight: '10px',\r\n                                    backgroundColor: '#007bff',\r\n                                    color: 'white',\r\n                                    border: 'none',\r\n                                    borderRadius: '5px',\r\n                                    cursor: 'pointer',\r\n                                }}\r\n                            >\r\n                                Bookmark\r\n                            </button>\r\n                            <button\r\n                                onClick={() => window.open(job.jobUrl, '_blank')}\r\n                                style={{\r\n                                    padding: '10px 15px',\r\n                                    backgroundColor: '#28a745',\r\n                                    color: 'white',\r\n                                    border: 'none',\r\n                                    borderRadius: '5px',\r\n                                    cursor: 'pointer',\r\n                                }}\r\n                            >\r\n                                Apply\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JobsPage;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}