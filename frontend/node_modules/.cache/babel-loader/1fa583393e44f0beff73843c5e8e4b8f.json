{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\web\\\\job-portal\\\\src\\\\components\\\\Navbar.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nconst Navbar = ({\n  isAuthenticated,\n  setIsAuthenticated\n}) => {\n  const navigate = useNavigate();\n  const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\")); // Retrieve logged-in user object\n\n  useEffect(() => {\n    // Check if there's a logged-in user and update the state\n    const loggedInUser = localStorage.getItem(\"loggedInUser\");\n    setIsAuthenticated(!!loggedInUser); // Set to true if logged-in user exists\n  }, [setIsAuthenticated]);\n  const handleLogout = () => {\n    localStorage.removeItem(\"loggedInUser\"); // Remove user data from localStorage\n    setIsAuthenticated(false); // Update state to reflect logged-out status\n    navigate(\"/login\"); // Redirect to login page\n  };\n  const handleJobsClick = () => {\n    if (isAuthenticated) {\n      navigate(\"/jobs\"); // Navigate to the jobs page if authenticated\n    } else {\n      alert(\"Please Login First\"); // Alert and redirect to login page if not authenticated\n      navigate(\"/login\");\n    }\n  };\n  const handleAdminPanelClick = () => {\n    if (isAuthenticated && (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.role) === \"admin\") {\n      navigate(\"/admin\"); // Navigate to Admin Panel if user is admin\n    } else {\n      alert(\"You need to log in as an admin to access the Admin Panel.\");\n      navigate(\"/login\"); // Redirect to login page if not an admin or not authenticated\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"bg-gray-800 text-white p-4 fixed w-full top-0 left-0 z-50 shadow-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-between items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-2xl font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"hover:bg-gray-700 p-2 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"JobCurator\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"space-x-6 flex items-center ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleJobsClick,\n    className: \"hover:bg-gray-700 p-2 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Jobs\"), !isAuthenticated && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/signup\",\n    className: \"hover:bg-gray-700 p-2 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    className: \"hover:bg-gray-700 p-2 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"Login\")), isAuthenticated && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profile\",\n    className: \"hover:bg-gray-700 p-2 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Profile\"), (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.role) === \"admin\" && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAdminPanelClick,\n    className: \"hover:bg-gray-700 p-2 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Admin Panel\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    className: \"bg-red-500 text-white p-2 rounded hover:bg-red-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Logout\")))));\n};\nexport default Navbar;","map":{"version":3,"names":["React","useEffect","Link","useNavigate","Navbar","isAuthenticated","setIsAuthenticated","navigate","loggedInUser","JSON","parse","localStorage","getItem","handleLogout","removeItem","handleJobsClick","alert","handleAdminPanelClick","role","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","Fragment"],"sources":["D:/project/web/job-portal/src/components/Navbar.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nconst Navbar = ({ isAuthenticated, setIsAuthenticated }) => {\r\n  const navigate = useNavigate();\r\n  const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\")); // Retrieve logged-in user object\r\n\r\n  useEffect(() => {\r\n    // Check if there's a logged-in user and update the state\r\n    const loggedInUser = localStorage.getItem(\"loggedInUser\");\r\n    setIsAuthenticated(!!loggedInUser); // Set to true if logged-in user exists\r\n  }, [setIsAuthenticated]);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"loggedInUser\"); // Remove user data from localStorage\r\n    setIsAuthenticated(false); // Update state to reflect logged-out status\r\n    navigate(\"/login\"); // Redirect to login page\r\n  };\r\n\r\n  const handleJobsClick = () => {\r\n    if (isAuthenticated) {\r\n      navigate(\"/jobs\"); // Navigate to the jobs page if authenticated\r\n    } else {\r\n      alert(\"Please Login First\"); // Alert and redirect to login page if not authenticated\r\n      navigate(\"/login\");\r\n    }\r\n  };\r\n\r\n  const handleAdminPanelClick = () => {\r\n    if (isAuthenticated && loggedInUser?.role === \"admin\") {\r\n      navigate(\"/admin\"); // Navigate to Admin Panel if user is admin\r\n    } else {\r\n      alert(\"You need to log in as an admin to access the Admin Panel.\");\r\n      navigate(\"/login\"); // Redirect to login page if not an admin or not authenticated\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"bg-gray-800 text-white p-4 fixed w-full top-0 left-0 z-50 shadow-lg\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <div className=\"text-2xl font-bold\">\r\n          <Link to=\"/\" className=\"hover:bg-gray-700 p-2 rounded\">\r\n            JobCurator\r\n          </Link>\r\n        </div>\r\n        <div className=\"space-x-6 flex items-center ml-4\">\r\n          <button onClick={handleJobsClick} className=\"hover:bg-gray-700 p-2 rounded\">\r\n            Jobs\r\n          </button>\r\n          {!isAuthenticated && (\r\n            <>\r\n              <Link to=\"/signup\" className=\"hover:bg-gray-700 p-2 rounded\">\r\n                Sign Up\r\n              </Link>\r\n              <Link to=\"/login\" className=\"hover:bg-gray-700 p-2 rounded\">\r\n                Login\r\n              </Link>\r\n            </>\r\n          )}\r\n          {isAuthenticated && (\r\n            <>\r\n              <Link to=\"/profile\" className=\"hover:bg-gray-700 p-2 rounded\">\r\n                Profile\r\n              </Link>\r\n              {loggedInUser?.role === \"admin\" && (\r\n                <button onClick={handleAdminPanelClick} className=\"hover:bg-gray-700 p-2 rounded\">\r\n                  Admin Panel\r\n                </button>\r\n              )}\r\n              <button onClick={handleLogout} className=\"bg-red-500 text-white p-2 rounded hover:bg-red-700\">\r\n                Logout\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}