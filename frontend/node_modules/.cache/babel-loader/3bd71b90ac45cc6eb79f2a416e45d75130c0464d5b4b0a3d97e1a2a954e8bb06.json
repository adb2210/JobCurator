{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\web\\\\job-portal\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import Navbar from \"./components/Navbar\";\n// import Signup from \"./pages/Signup\";\n// import Login from \"./pages/Login\";\n// import Profile from \"./pages/Profile\";\n// import JobsPage from \"./pages/JobsPage\";\n// import LandingPage from \"./pages/LandingPage\";\n// import AdminPage from \"./pages/admin\";\n\n// function App() {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [userRole, setUserRole] = useState(null);\n\n//   useEffect(() => {\n//     const loggedInUser = JSON.parse(localStorage.getItem('authToken'));\n//     if (loggedInUser) {\n//       setIsAuthenticated(true);\n//       setUserRole(loggedInUser.role); // Directly use the role from loggedInUser\n//     } else {\n//       setIsAuthenticated(false);\n//       setUserRole(null);\n//     }\n//   }, []);\n//   return (\n//     <Router>\n//       <Navbar\n//         isAuthenticated={isAuthenticated}\n//         setIsAuthenticated={setIsAuthenticated}\n//         userRole={userRole}\n//       />\n//       <Routes>\n//         <Route path=\"/\" element={<LandingPage />} />\n//         <Route path=\"/jobs\" element={<JobsPage />} />\n//         <Route path=\"/signup\" element={<Signup />} />\n//         <Route path=\"/login\" element={<Login setIsAuthenticated={setIsAuthenticated} />} />\n//         <Route\n//           path=\"/profile\"\n//           element={\n//             isAuthenticated ? (\n//               <Profile />\n//             ) : (\n//               <Navigate to=\"/login\" replace />\n//              )\n//           }\n//         />\n//         <Route\n//           path=\"/admin\"\n//           element={\n//             isAuthenticated && userRole === \"admin\" ? (\n//               <AdminPage />\n//             ) : (\n//               <Navigate to=\"/signup\" replace />\n//             )\n//           }\n//         />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Profile from \"./pages/Profile\";\nimport JobsPage from \"./pages/JobsPage\";\nimport LandingPage from \"./pages/LandingPage\";\nimport AdminPage from \"./pages/admin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const loadUserData = () => {\n      try {\n        const authToken = localStorage.getItem(\"authToken\");\n        if (authToken) {\n          setIsAuthenticated(true);\n        } else {\n          setIsAuthenticated(false);\n        }\n      } catch (error) {\n        console.error(\"Error accessing authToken:\", error);\n        setIsAuthenticated(false);\n      } finally {\n        setIsLoading(false); // Loading complete\n      }\n    };\n    loadUserData();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this); // Placeholder during loading\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isAuthenticated: isAuthenticated,\n      setIsAuthenticated: setIsAuthenticated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/jobs\",\n        element: /*#__PURE__*/_jsxDEV(JobsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          setIsAuthenticated: setIsAuthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(AdminPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QGOAXroSjAVQAlauW9LqDUcn+wM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Navbar","Signup","Login","Profile","JobsPage","LandingPage","AdminPage","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","loadUserData","authToken","localStorage","getItem","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","replace","_c","$RefreshReg$"],"sources":["D:/project/web/job-portal/src/App.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import Navbar from \"./components/Navbar\";\n// import Signup from \"./pages/Signup\";\n// import Login from \"./pages/Login\";\n// import Profile from \"./pages/Profile\";\n// import JobsPage from \"./pages/JobsPage\";\n// import LandingPage from \"./pages/LandingPage\";\n// import AdminPage from \"./pages/admin\";\n\n// function App() {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [userRole, setUserRole] = useState(null);\n\n//   useEffect(() => {\n//     const loggedInUser = JSON.parse(localStorage.getItem('authToken'));\n//     if (loggedInUser) {\n//       setIsAuthenticated(true);\n//       setUserRole(loggedInUser.role); // Directly use the role from loggedInUser\n//     } else {\n//       setIsAuthenticated(false);\n//       setUserRole(null);\n//     }\n//   }, []);\n//   return (\n//     <Router>\n//       <Navbar\n//         isAuthenticated={isAuthenticated}\n//         setIsAuthenticated={setIsAuthenticated}\n//         userRole={userRole}\n//       />\n//       <Routes>\n//         <Route path=\"/\" element={<LandingPage />} />\n//         <Route path=\"/jobs\" element={<JobsPage />} />\n//         <Route path=\"/signup\" element={<Signup />} />\n//         <Route path=\"/login\" element={<Login setIsAuthenticated={setIsAuthenticated} />} />\n//         <Route\n//           path=\"/profile\"\n//           element={\n//             isAuthenticated ? (\n//               <Profile />\n//             ) : (\n//               <Navigate to=\"/login\" replace />\n//              )\n//           }\n//         />\n//         <Route\n//           path=\"/admin\"\n//           element={\n//             isAuthenticated && userRole === \"admin\" ? (\n//               <AdminPage />\n//             ) : (\n//               <Navigate to=\"/signup\" replace />\n//             )\n//           }\n//         />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Profile from \"./pages/Profile\";\nimport JobsPage from \"./pages/JobsPage\";\nimport LandingPage from \"./pages/LandingPage\";\nimport AdminPage from \"./pages/admin\";\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const loadUserData = () => {\n      try {\n        const authToken = localStorage.getItem(\"authToken\");\n        if (authToken) {\n          setIsAuthenticated(true);\n        } else {\n          setIsAuthenticated(false);\n        }\n      } catch (error) {\n        console.error(\"Error accessing authToken:\", error);\n        setIsAuthenticated(false);\n      } finally {\n        setIsLoading(false); // Loading complete\n      }\n    };\n\n    loadUserData();\n  }, []);\n\n  if (isLoading) {\n    return <div>Loading...</div>; // Placeholder during loading\n  }\n\n  return (\n    <Router>\n      <Navbar\n        isAuthenticated={isAuthenticated}\n        setIsAuthenticated={setIsAuthenticated}\n      />\n      <Routes>\n        <Route path=\"/\" element={<LandingPage />} />\n        <Route path=\"/jobs\" element={<JobsPage />} />\n        <Route path=\"/signup\" element={<Signup />} />\n        <Route path=\"/login\" element={<Login setIsAuthenticated={setIsAuthenticated} />} />\n        <Route\n          path=\"/profile\"\n          element={\n            isAuthenticated ? (\n              <Profile />\n            ) : (\n              <Navigate to=\"/login\" replace />\n            )\n          }\n        />\n        <Route\n          path=\"/admin\"\n          element={\n            isAuthenticated ? (\n              <AdminPage />\n            ) : (\n              <Navigate to=\"/login\" replace />\n            )\n          }\n        />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}