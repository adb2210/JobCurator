{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\web\\\\job-portal\\\\src\\\\components\\\\ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  const user = localStorage.getItem(\"loggedInUser\");\n  if (!user) {\n    // If no user is logged in, redirect to the login page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If the user is logged in, render the children (i.e., the protected route)\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","user","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/project/web/job-portal/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const user = localStorage.getItem(\"loggedInUser\");\r\n\r\n  if (!user) {\r\n    // If no user is logged in, redirect to the login page\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  // If the user is logged in, render the children (i.e., the protected route)\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAEjD,IAAI,CAACF,IAAI,EAAE;IACT;IACA,oBAAOH,OAAA,CAACF,QAAQ;MAACQ,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,OAAOR,QAAQ;AACjB,CAAC;AAACS,EAAA,GAVIV,cAAc;AAYpB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}