{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\web\\\\job-portal\\\\src\\\\components\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if user is logged in by checking the 'loggedInUser' key in localStorage\n    const loggedInUser = localStorage.getItem(\"loggedInUser\");\n    setIsAuthenticated(!!loggedInUser); // If loggedInUser exists, set authenticated to true\n  }, []); // This effect runs only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"bg-gray-800 text-white p-4 fixed w-full top-0 left-0 z-50 shadow-lg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl font-bold\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"hover:bg-gray-700 p-2 rounded\",\n          children: \"Job-Currator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-x-6 flex items-center ml-4\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/jobs\",\n          className: \"hover:bg-gray-700 p-2 rounded\",\n          children: \"Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), !isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            className: \"hover:bg-gray-700 p-2 rounded\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"hover:bg-gray-700 p-2 rounded\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/profile\",\n            className: \"hover:bg-gray-700 p-2 rounded\",\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"h+xcTbG3Lgr87EDneWrcj9j4fAU=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","_s","isAuthenticated","setIsAuthenticated","navigate","loggedInUser","localStorage","getItem","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/project/web/job-portal/src/components/Navbar.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in by checking the 'loggedInUser' key in localStorage\r\n    const loggedInUser = localStorage.getItem(\"loggedInUser\");\r\n    setIsAuthenticated(!!loggedInUser); // If loggedInUser exists, set authenticated to true\r\n  }, []); // This effect runs only once when the component mounts\r\n\r\n  return (\r\n    <nav className=\"bg-gray-800 text-white p-4 fixed w-full top-0 left-0 z-50 shadow-lg\">\r\n      <div className=\"flex justify-between items-center\">\r\n        {/* Logo Section */}\r\n        <div className=\"text-2xl font-bold\">\r\n          <Link to=\"/\" className=\"hover:bg-gray-700 p-2 rounded\">Job-Currator</Link>\r\n        </div>\r\n\r\n        {/* Links Section */}\r\n        <div className=\"space-x-6 flex items-center ml-4\">\r\n          {/* Always show Jobs link */}\r\n          <Link to=\"/jobs\" className=\"hover:bg-gray-700 p-2 rounded\">Jobs</Link>\r\n\r\n          {/* Show Sign Up and Login only if not authenticated */}\r\n          {!isAuthenticated && (\r\n            <>\r\n              <Link to=\"/signup\" className=\"hover:bg-gray-700 p-2 rounded\">Sign Up</Link>\r\n              <Link to=\"/login\" className=\"hover:bg-gray-700 p-2 rounded\">Login</Link>\r\n            </>\r\n          )}\r\n\r\n          {/* Show Profile link if authenticated */}\r\n          {isAuthenticated && (\r\n            <>\r\n              <Link to=\"/profile\" className=\"hover:bg-gray-700 p-2 rounded\">Profile</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMY,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACzDJ,kBAAkB,CAAC,CAAC,CAACE,YAAY,CAAC,CAAC,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACER,OAAA;IAAKW,SAAS,EAAC,qEAAqE;IAAAC,QAAA,eAClFZ,OAAA;MAAKW,SAAS,EAAC,mCAAmC;MAAAC,QAAA,gBAEhDZ,OAAA;QAAKW,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eACjCZ,OAAA,CAACH,IAAI;UAACgB,EAAE,EAAC,GAAG;UAACF,SAAS,EAAC,+BAA+B;UAAAC,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvE,CAAC,eAGNjB,OAAA;QAAKW,SAAS,EAAC,kCAAkC;QAAAC,QAAA,gBAE/CZ,OAAA,CAACH,IAAI;UAACgB,EAAE,EAAC,OAAO;UAACF,SAAS,EAAC,+BAA+B;UAAAC,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAGrE,CAACZ,eAAe,iBACfL,OAAA,CAAAE,SAAA;UAAAU,QAAA,gBACEZ,OAAA,CAACH,IAAI;YAACgB,EAAE,EAAC,SAAS;YAACF,SAAS,EAAC,+BAA+B;YAAAC,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3EjB,OAAA,CAACH,IAAI;YAACgB,EAAE,EAAC,QAAQ;YAACF,SAAS,EAAC,+BAA+B;YAAAC,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,eACxE,CACH,EAGAZ,eAAe,iBACdL,OAAA,CAAAE,SAAA;UAAAU,QAAA,eACEZ,OAAA,CAACH,IAAI;YAACgB,EAAE,EAAC,UAAU;YAACF,SAAS,EAAC,+BAA+B;YAAAC,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC,gBAC5E,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CAzCID,MAAM;EAAA,QAEOL,WAAW;AAAA;AAAAoB,EAAA,GAFxBf,MAAM;AA2CZ,eAAeA,MAAM;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}