{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import JobCard from \"../components/JobCard\";\n\n// const Profile = () => {\n//   const [userData, setUserData] = useState(null);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\n//   const [showPasswordFields, setShowPasswordFields] = useState(false);\n//   const [passwordData, setPasswordData] = useState({\n//     currentPassword: \"\",\n//     newPassword: \"\",\n//     confirmPassword: \"\",\n//   });\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n//     const bookmarks = JSON.parse(localStorage.getItem(\"bookmarkedJobs\")) || [];\n\n//     if (loggedInUser) {\n//       setUserData(loggedInUser);\n//       setBookmarkedJobs(bookmarks);\n//     } else {\n//       navigate(\"/login\");\n//     }\n//   }, [navigate]);\n\n//   const handleSave = () => {\n//     if (showPasswordFields) {\n//       const { currentPassword, newPassword, confirmPassword } = passwordData;\n\n//       if (!currentPassword || !newPassword || !confirmPassword) {\n//         alert(\"Please fill in all password fields.\");\n//         return;\n//       }\n\n//       if (currentPassword !== userData.password) {\n//         alert(\"Current password is incorrect.\");\n//         return;\n//       }\n\n//       if (newPassword !== confirmPassword) {\n//         alert(\"New password and confirm password do not match.\");\n//         return;\n//       }\n\n//       // Update user data with the new password\n//       setUserData({ ...userData, password: newPassword });\n//       alert(\"Password updated successfully.\");\n//     }\n\n//     // Save updated user data\n//     localStorage.setItem(\"loggedInUser\", JSON.stringify(userData));\n//     setIsEditing(false);\n//     setShowPasswordFields(false);\n//     setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\n//   };\n\n//   const handleInputChange = (e) => {\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\n//   };\n\n//   const handlePasswordChange = (e) => {\n//     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\n//   };\n\n//   if (!userData) {\n//     return (\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\n//         <div>Loading...</div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\n//         {/* Left Side: Profile Section */}\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\n//           <div className=\"space-y-6\">\n//             {Object.keys(userData).map((field) =>\n//               ![\"bookmarkedJobs\", \"skills\", \"password\", \"role\", \"confirmPassword\"].includes(field) ? (\n//                 <div className=\"flex justify-between\" key={field}>\n//                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\n//                   {isEditing ? (\n//                     <input\n//                       type=\"text\"\n//                       name={field}\n//                       value={userData[field]}\n//                       onChange={handleInputChange}\n//                       className=\"border p-2 rounded-md w-40\"\n//                     />\n//                   ) : (\n//                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\n//                   )}\n//                 </div>\n//               ) : null\n//             )}\n\n//             {/* Skills Section */}\n//             <div className=\"flex justify-between\">\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\n//               {isEditing ? (\n//                 <input\n//                   type=\"text\"\n//                   name=\"skills\"\n//                   value={userData.skills.join(\", \")}\n//                   onChange={(e) =>\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\n//                   }\n//                   className=\"border p-2 rounded-md w-40\"\n//                 />\n//               ) : (\n//                 <span className=\"text-lg text-gray-900\">{userData.skills.join(\", \")}</span>\n//               )}\n//             </div>\n\n//             {/* Password Section */}\n//             {showPasswordFields && (\n//               <>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"currentPassword\"\n//                     value={passwordData.currentPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"newPassword\"\n//                     value={passwordData.newPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"confirmPassword\"\n//                     value={passwordData.confirmPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//               </>\n//             )}\n\n//             {/* Action Buttons */}\n//             <div className=\"flex space-x-4 mt-6\">\n//               {isEditing ? (\n//                 <>\n//                   <button\n//                     onClick={handleSave}\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\n//                   >\n//                     Save\n//                   </button>\n//                   <button\n//                     onClick={() => setShowPasswordFields(!showPasswordFields)}\n//                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\n//                   >\n//                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\n//                   </button>\n//                 </>\n//               ) : (\n//                 <button\n//                   onClick={() => setIsEditing(true)}\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\n//                 >\n//                   Edit Profile\n//                 </button>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Right Side: Bookmarked Jobs Section */}\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\n//           {bookmarkedJobs.length > 0 ? (\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n//               {bookmarkedJobs.map((job) => (\n//                 <JobCard job={job} key={job.id} />\n//               ))}\n//             </div>\n//           ) : (\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profile;","map":{"version":3,"names":[],"sources":["D:/project/web/job-portal/src/pages/Profile.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import JobCard from \"../components/JobCard\";\r\n\r\n// const Profile = () => {\r\n//   const [userData, setUserData] = useState(null);\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\r\n//   const [showPasswordFields, setShowPasswordFields] = useState(false);\r\n//   const [passwordData, setPasswordData] = useState({\r\n//     currentPassword: \"\",\r\n//     newPassword: \"\",\r\n//     confirmPassword: \"\",\r\n//   });\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n//     const bookmarks = JSON.parse(localStorage.getItem(\"bookmarkedJobs\")) || [];\r\n\r\n//     if (loggedInUser) {\r\n//       setUserData(loggedInUser);\r\n//       setBookmarkedJobs(bookmarks);\r\n//     } else {\r\n//       navigate(\"/login\");\r\n//     }\r\n//   }, [navigate]);\r\n\r\n//   const handleSave = () => {\r\n//     if (showPasswordFields) {\r\n//       const { currentPassword, newPassword, confirmPassword } = passwordData;\r\n\r\n//       if (!currentPassword || !newPassword || !confirmPassword) {\r\n//         alert(\"Please fill in all password fields.\");\r\n//         return;\r\n//       }\r\n\r\n//       if (currentPassword !== userData.password) {\r\n//         alert(\"Current password is incorrect.\");\r\n//         return;\r\n//       }\r\n\r\n//       if (newPassword !== confirmPassword) {\r\n//         alert(\"New password and confirm password do not match.\");\r\n//         return;\r\n//       }\r\n\r\n//       // Update user data with the new password\r\n//       setUserData({ ...userData, password: newPassword });\r\n//       alert(\"Password updated successfully.\");\r\n//     }\r\n\r\n//     // Save updated user data\r\n//     localStorage.setItem(\"loggedInUser\", JSON.stringify(userData));\r\n//     setIsEditing(false);\r\n//     setShowPasswordFields(false);\r\n//     setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handlePasswordChange = (e) => {\r\n//     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   if (!userData) {\r\n//     return (\r\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\r\n//         <div>Loading...</div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\r\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n//         {/* Left Side: Profile Section */}\r\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\r\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\r\n//           <div className=\"space-y-6\">\r\n//             {Object.keys(userData).map((field) =>\r\n//               ![\"bookmarkedJobs\", \"skills\", \"password\", \"role\", \"confirmPassword\"].includes(field) ? (\r\n//                 <div className=\"flex justify-between\" key={field}>\r\n//                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\r\n//                   {isEditing ? (\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       name={field}\r\n//                       value={userData[field]}\r\n//                       onChange={handleInputChange}\r\n//                       className=\"border p-2 rounded-md w-40\"\r\n//                     />\r\n//                   ) : (\r\n//                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\r\n//                   )}\r\n//                 </div>\r\n//               ) : null\r\n//             )}\r\n\r\n//             {/* Skills Section */}\r\n//             <div className=\"flex justify-between\">\r\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\r\n//               {isEditing ? (\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"skills\"\r\n//                   value={userData.skills.join(\", \")}\r\n//                   onChange={(e) =>\r\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\r\n//                   }\r\n//                   className=\"border p-2 rounded-md w-40\"\r\n//                 />\r\n//               ) : (\r\n//                 <span className=\"text-lg text-gray-900\">{userData.skills.join(\", \")}</span>\r\n//               )}\r\n//             </div>\r\n\r\n//             {/* Password Section */}\r\n//             {showPasswordFields && (\r\n//               <>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"currentPassword\"\r\n//                     value={passwordData.currentPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"newPassword\"\r\n//                     value={passwordData.newPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"confirmPassword\"\r\n//                     value={passwordData.confirmPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//               </>\r\n//             )}\r\n\r\n//             {/* Action Buttons */}\r\n//             <div className=\"flex space-x-4 mt-6\">\r\n//               {isEditing ? (\r\n//                 <>\r\n//                   <button\r\n//                     onClick={handleSave}\r\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\r\n//                   >\r\n//                     Save\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => setShowPasswordFields(!showPasswordFields)}\r\n//                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\r\n//                   >\r\n//                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\r\n//                   </button>\r\n//                 </>\r\n//               ) : (\r\n//                 <button\r\n//                   onClick={() => setIsEditing(true)}\r\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\r\n//                 >\r\n//                   Edit Profile\r\n//                 </button>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Right Side: Bookmarked Jobs Section */}\r\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\r\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\r\n//           {bookmarkedJobs.length > 0 ? (\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//               {bookmarkedJobs.map((job) => (\r\n//                 <JobCard job={job} key={job.id} />\r\n//               ))}\r\n//             </div>\r\n//           ) : (\r\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Profile;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}