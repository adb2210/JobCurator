{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\web\\\\job-portal\\\\src\\\\pages\\\\Profile.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import JobCard from \"../components/JobCard\";\n\n// const Profile = () => {\n//   const [userData, setUserData] = useState(null);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\n//   const [showPasswordFields, setShowPasswordFields] = useState(false);\n//   const [passwordData, setPasswordData] = useState({\n//     currentPassword: \"\",\n//     newPassword: \"\",\n//     confirmPassword: \"\",\n//   });\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n//     const bookmarks = JSON.parse(localStorage.getItem(\"bookmarkedJobs\")) || [];\n\n//     if (loggedInUser) {\n//       setUserData(loggedInUser);\n//       setBookmarkedJobs(bookmarks);\n//     } else {\n//       navigate(\"/login\");\n//     }\n//   }, [navigate]);\n\n//   const handleSave = () => {\n//     if (showPasswordFields) {\n//       const { currentPassword, newPassword, confirmPassword } = passwordData;\n\n//       if (!currentPassword || !newPassword || !confirmPassword) {\n//         alert(\"Please fill in all password fields.\");\n//         return;\n//       }\n\n//       if (currentPassword !== userData.password) {\n//         alert(\"Current password is incorrect.\");\n//         return;\n//       }\n\n//       if (newPassword !== confirmPassword) {\n//         alert(\"New password and confirm password do not match.\");\n//         return;\n//       }\n\n//       // Update user data with the new password\n//       setUserData({ ...userData, password: newPassword });\n//       alert(\"Password updated successfully.\");\n//     }\n\n//     // Save updated user data\n//     localStorage.setItem(\"loggedInUser\", JSON.stringify(userData));\n//     setIsEditing(false);\n//     setShowPasswordFields(false);\n//     setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\n//   };\n\n//   const handleInputChange = (e) => {\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\n//   };\n\n//   const handlePasswordChange = (e) => {\n//     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\n//   };\n\n//   if (!userData) {\n//     return (\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\n//         <div>Loading...</div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\n//         {/* Left Side: Profile Section */}\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\n//           <div className=\"space-y-6\">\n//             {Object.keys(userData).map((field) =>\n//               ![\"bookmarkedJobs\", \"skills\", \"password\", \"role\", \"confirmPassword\"].includes(field) ? (\n//                 <div className=\"flex justify-between\" key={field}>\n//                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\n//                   {isEditing ? (\n//                     <input\n//                       type=\"text\"\n//                       name={field}\n//                       value={userData[field]}\n//                       onChange={handleInputChange}\n//                       className=\"border p-2 rounded-md w-40\"\n//                     />\n//                   ) : (\n//                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\n//                   )}\n//                 </div>\n//               ) : null\n//             )}\n\n//             {/* Skills Section */}\n//             <div className=\"flex justify-between\">\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\n//               {isEditing ? (\n//                 <input\n//                   type=\"text\"\n//                   name=\"skills\"\n//                   value={userData.skills.join(\", \")}\n//                   onChange={(e) =>\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\n//                   }\n//                   className=\"border p-2 rounded-md w-40\"\n//                 />\n//               ) : (\n//                 <span className=\"text-lg text-gray-900\">{userData.skills.join(\", \")}</span>\n//               )}\n//             </div>\n\n//             {/* Password Section */}\n//             {showPasswordFields && (\n//               <>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"currentPassword\"\n//                     value={passwordData.currentPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"newPassword\"\n//                     value={passwordData.newPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"confirmPassword\"\n//                     value={passwordData.confirmPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//               </>\n//             )}\n\n//             {/* Action Buttons */}\n//             <div className=\"flex space-x-4 mt-6\">\n//               {isEditing ? (\n//                 <>\n//                   <button\n//                     onClick={handleSave}\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\n//                   >\n//                     Save\n//                   </button>\n//                   <button\n//                     onClick={() => setShowPasswordFields(!showPasswordFields)}\n//                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\n//                   >\n//                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\n//                   </button>\n//                 </>\n//               ) : (\n//                 <button\n//                   onClick={() => setIsEditing(true)}\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\n//                 >\n//                   Edit Profile\n//                 </button>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Right Side: Bookmarked Jobs Section */}\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\n//           {bookmarkedJobs.length > 0 ? (\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n//               {bookmarkedJobs.map((job) => (\n//                 <JobCard job={job} key={job.id} />\n//               ))}\n//             </div>\n//           ) : (\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profile;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import JobCard from \"../components/JobCard\";\n// import { jwtDecode } from \"jwt-decode\";\n\n// const Profile = () => {\n//   const getUserEmail = () => {\n//     const token = localStorage.getItem('authToken');\n//     if (!token) return null;\n\n//     try {\n//       const decodedToken = jwtDecode(token);\n//       console.log(decodedToken);\n//       return decodedToken.sub;  // Replace with the correct field from your token\n//     } catch (error) {\n//       console.error(\"Invalid token:\", error);\n//       return null;\n//     }\n//   };\n\n//   const email = getUserEmail();\n//   const [userData, setUserData] = useState(null);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\n//   const [showPasswordFields, setShowPasswordFields] = useState(false);\n//   const [passwordData, setPasswordData] = useState({\n//     currentPassword: \"\",\n//     newPassword: \"\",\n//     confirmPassword: \"\",\n//   });\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\n//         const { data: jobs } = await axios.get(`http://localhost:8080/api/bookmarks/${email}`);\n//         setUserData(user);\n//         setBookmarkedJobs(jobs);\n//       } catch (error) {\n//         console.error(\"Error fetching user data:\", error);\n//         navigate(\"/login\");\n//       }\n//     };\n\n//     fetchData();\n//   }, [email, navigate]);\n\n//   const handleSave = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       if (showPasswordFields) {\n//         const { currentPassword, newPassword, confirmPassword } = passwordData;\n\n//         if (!currentPassword || !newPassword || !confirmPassword) {\n//           alert(\"Please fill in all password fields.\");\n//           return;\n//         }\n\n//         if (newPassword !== confirmPassword) {\n//           alert(\"New password and confirm password do not match.\");\n//           return;\n//         }\n\n//         // Include password change in update payload\n//         await axios.post(`http://localhost:8080/api/users/update/${email}`, {\n//           ...userData,\n//           currentPassword,\n//           newPassword,\n//         });\n//         alert(\"Password updated successfully.\");\n//       } else {\n//         // Update user data without changing password\n//         await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\n//       }\n\n//       setIsEditing(false);\n//       setShowPasswordFields(false);\n//       setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\n//     } catch (error) {\n//       console.error(\"Error updating user data:\", error);\n//       alert(\"Failed to update profile.\");\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\n//   };\n\n//   const handlePasswordChange = (e) => {\n//     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\n//   };\n\n//   if (!userData) {\n//     return (\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\n//         <div>Loading...</div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\n//         {/* Left Side: Profile Section */}\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\n\n//           <form onSubmit={handleSave} className=\"space-y-6\">\n//             {Object.keys(userData).map((field) =>\n//               ![\"bookmarkedJobs\", \"skills\", \"password\", \"confirmPassword\"].includes(field) ? (\n//                 <div className=\"flex justify-between\" key={field}>\n//                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\n//                   {isEditing ? (\n//                     <input\n//                       type=\"text\"\n//                       name={field}\n//                       value={userData[field]}\n//                       onChange={handleInputChange}\n//                       className=\"border p-2 rounded-md w-40\"\n//                     />\n//                   ) : (\n//                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\n//                   )}\n//                 </div>\n//               ) : null\n//             )}\n\n//             {/* Skills Section */}\n//             <div className=\"flex justify-between\">\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\n//               {isEditing ? (\n//                 <input\n//                   type=\"text\"\n//                   name=\"skills\"\n//                   value={userData.skills.join(\", \")}\n//                   onChange={(e) =>\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\n//                   }\n//                   className=\"border p-2 rounded-md w-40\"\n//                 />\n//               ) : (\n//                 <span className=\"text-lg text-gray-900\">{userData.skills.join(\", \")}</span>\n//               )}\n//             </div>\n\n//             {/* Password Section */}\n//             {showPasswordFields && (\n//               <>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"currentPassword\"\n//                     value={passwordData.currentPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"newPassword\"\n//                     value={passwordData.newPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"confirmPassword\"\n//                     value={passwordData.confirmPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//               </>\n//             )}\n\n//             {/* Action Buttons */}\n//             <div className=\"flex space-x-4 mt-6\">\n//               {isEditing ? (\n//                 <>\n//                   <button\n//                     type=\"submit\"\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\n//                   >\n//                     Save\n//                   </button>\n//                   <button\n//                     type=\"button\"\n//                     onClick={() => setShowPasswordFields(!showPasswordFields)}\n//                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\n//                   >\n//                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\n//                   </button>\n//                 </>\n//               ) : (\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => setIsEditing(true)}\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\n//                 >\n//                   Edit Profile\n//                 </button>\n//               )}\n//             </div>\n//           </form>\n//         </div>\n\n//         {/* Right Side: Bookmarked Jobs Section */}\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\n//           {bookmarkedJobs.length > 0 ? (\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n//               {bookmarkedJobs.map((job) => (\n//                 <JobCard job={job} key={job.id} />\n//               ))}\n//             </div>\n//           ) : (\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profile;\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch user profile data from backend\n    axios.get('http://localhost:5000/api/user/profile') // Replace with your backend API URL\n    .then(response => {\n      setUserData(response.data);\n      setLoading(false);\n    }).catch(err => {\n      setError('Failed to fetch user data');\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 shadow-lg rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: userData.profilePicture || 'https://via.placeholder.com/150',\n          alt: \"Profile\",\n          className: \"rounded-full w-32 h-32 object-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold\",\n          children: userData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: userData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: userData.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: \"Phone:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: userData.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: \"State:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: userData.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: userData.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: \"Skills:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: userData.skills.join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"********\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 470,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"HMpZpKOdOx8cs4CYczrefosGiwY=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Profile","_s","userData","setUserData","loading","setLoading","error","setError","get","then","response","data","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","profilePicture","alt","name","email","username","phone","state","city","skills","join","_c","$RefreshReg$"],"sources":["D:/project/web/job-portal/src/pages/Profile.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import JobCard from \"../components/JobCard\";\r\n\r\n// const Profile = () => {\r\n//   const [userData, setUserData] = useState(null);\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\r\n//   const [showPasswordFields, setShowPasswordFields] = useState(false);\r\n//   const [passwordData, setPasswordData] = useState({\r\n//     currentPassword: \"\",\r\n//     newPassword: \"\",\r\n//     confirmPassword: \"\",\r\n//   });\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n//     const bookmarks = JSON.parse(localStorage.getItem(\"bookmarkedJobs\")) || [];\r\n\r\n//     if (loggedInUser) {\r\n//       setUserData(loggedInUser);\r\n//       setBookmarkedJobs(bookmarks);\r\n//     } else {\r\n//       navigate(\"/login\");\r\n//     }\r\n//   }, [navigate]);\r\n\r\n//   const handleSave = () => {\r\n//     if (showPasswordFields) {\r\n//       const { currentPassword, newPassword, confirmPassword } = passwordData;\r\n\r\n//       if (!currentPassword || !newPassword || !confirmPassword) {\r\n//         alert(\"Please fill in all password fields.\");\r\n//         return;\r\n//       }\r\n\r\n//       if (currentPassword !== userData.password) {\r\n//         alert(\"Current password is incorrect.\");\r\n//         return;\r\n//       }\r\n\r\n//       if (newPassword !== confirmPassword) {\r\n//         alert(\"New password and confirm password do not match.\");\r\n//         return;\r\n//       }\r\n\r\n//       // Update user data with the new password\r\n//       setUserData({ ...userData, password: newPassword });\r\n//       alert(\"Password updated successfully.\");\r\n//     }\r\n\r\n//     // Save updated user data\r\n//     localStorage.setItem(\"loggedInUser\", JSON.stringify(userData));\r\n//     setIsEditing(false);\r\n//     setShowPasswordFields(false);\r\n//     setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handlePasswordChange = (e) => {\r\n//     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   if (!userData) {\r\n//     return (\r\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\r\n//         <div>Loading...</div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\r\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n//         {/* Left Side: Profile Section */}\r\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\r\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\r\n//           <div className=\"space-y-6\">\r\n//             {Object.keys(userData).map((field) =>\r\n//               ![\"bookmarkedJobs\", \"skills\", \"password\", \"role\", \"confirmPassword\"].includes(field) ? (\r\n//                 <div className=\"flex justify-between\" key={field}>\r\n//                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\r\n//                   {isEditing ? (\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       name={field}\r\n//                       value={userData[field]}\r\n//                       onChange={handleInputChange}\r\n//                       className=\"border p-2 rounded-md w-40\"\r\n//                     />\r\n//                   ) : (\r\n//                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\r\n//                   )}\r\n//                 </div>\r\n//               ) : null\r\n//             )}\r\n\r\n//             {/* Skills Section */}\r\n//             <div className=\"flex justify-between\">\r\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\r\n//               {isEditing ? (\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"skills\"\r\n//                   value={userData.skills.join(\", \")}\r\n//                   onChange={(e) =>\r\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\r\n//                   }\r\n//                   className=\"border p-2 rounded-md w-40\"\r\n//                 />\r\n//               ) : (\r\n//                 <span className=\"text-lg text-gray-900\">{userData.skills.join(\", \")}</span>\r\n//               )}\r\n//             </div>\r\n\r\n//             {/* Password Section */}\r\n//             {showPasswordFields && (\r\n//               <>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"currentPassword\"\r\n//                     value={passwordData.currentPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"newPassword\"\r\n//                     value={passwordData.newPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"confirmPassword\"\r\n//                     value={passwordData.confirmPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//               </>\r\n//             )}\r\n\r\n//             {/* Action Buttons */}\r\n//             <div className=\"flex space-x-4 mt-6\">\r\n//               {isEditing ? (\r\n//                 <>\r\n//                   <button\r\n//                     onClick={handleSave}\r\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\r\n//                   >\r\n//                     Save\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => setShowPasswordFields(!showPasswordFields)}\r\n//                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\r\n//                   >\r\n//                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\r\n//                   </button>\r\n//                 </>\r\n//               ) : (\r\n//                 <button\r\n//                   onClick={() => setIsEditing(true)}\r\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\r\n//                 >\r\n//                   Edit Profile\r\n//                 </button>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Right Side: Bookmarked Jobs Section */}\r\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\r\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\r\n//           {bookmarkedJobs.length > 0 ? (\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//               {bookmarkedJobs.map((job) => (\r\n//                 <JobCard job={job} key={job.id} />\r\n//               ))}\r\n//             </div>\r\n//           ) : (\r\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Profile;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import JobCard from \"../components/JobCard\";\r\n// import { jwtDecode } from \"jwt-decode\";\r\n\r\n// const Profile = () => {\r\n//   const getUserEmail = () => {\r\n//     const token = localStorage.getItem('authToken');\r\n//     if (!token) return null;\r\n    \r\n//     try {\r\n//       const decodedToken = jwtDecode(token);\r\n//       console.log(decodedToken);\r\n//       return decodedToken.sub;  // Replace with the correct field from your token\r\n//     } catch (error) {\r\n//       console.error(\"Invalid token:\", error);\r\n//       return null;\r\n//     }\r\n//   };\r\n\r\n//   const email = getUserEmail();\r\n//   const [userData, setUserData] = useState(null);\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\r\n//   const [showPasswordFields, setShowPasswordFields] = useState(false);\r\n//   const [passwordData, setPasswordData] = useState({\r\n//     currentPassword: \"\",\r\n//     newPassword: \"\",\r\n//     confirmPassword: \"\",\r\n//   });\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\r\n//         const { data: jobs } = await axios.get(`http://localhost:8080/api/bookmarks/${email}`);\r\n//         setUserData(user);\r\n//         setBookmarkedJobs(jobs);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching user data:\", error);\r\n//         navigate(\"/login\");\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [email, navigate]);\r\n\r\n//   const handleSave = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       if (showPasswordFields) {\r\n//         const { currentPassword, newPassword, confirmPassword } = passwordData;\r\n\r\n//         if (!currentPassword || !newPassword || !confirmPassword) {\r\n//           alert(\"Please fill in all password fields.\");\r\n//           return;\r\n//         }\r\n\r\n//         if (newPassword !== confirmPassword) {\r\n//           alert(\"New password and confirm password do not match.\");\r\n//           return;\r\n//         }\r\n\r\n//         // Include password change in update payload\r\n//         await axios.post(`http://localhost:8080/api/users/update/${email}`, {\r\n//           ...userData,\r\n//           currentPassword,\r\n//           newPassword,\r\n//         });\r\n//         alert(\"Password updated successfully.\");\r\n//       } else {\r\n//         // Update user data without changing password\r\n//         await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\r\n//       }\r\n\r\n//       setIsEditing(false);\r\n//       setShowPasswordFields(false);\r\n//       setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\r\n//     } catch (error) {\r\n//       console.error(\"Error updating user data:\", error);\r\n//       alert(\"Failed to update profile.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handlePasswordChange = (e) => {\r\n//     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   if (!userData) {\r\n//     return (\r\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\r\n//         <div>Loading...</div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\r\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n//         {/* Left Side: Profile Section */}\r\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\r\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\r\n\r\n//           <form onSubmit={handleSave} className=\"space-y-6\">\r\n//             {Object.keys(userData).map((field) =>\r\n//               ![\"bookmarkedJobs\", \"skills\", \"password\", \"confirmPassword\"].includes(field) ? (\r\n//                 <div className=\"flex justify-between\" key={field}>\r\n//                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\r\n//                   {isEditing ? (\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       name={field}\r\n//                       value={userData[field]}\r\n//                       onChange={handleInputChange}\r\n//                       className=\"border p-2 rounded-md w-40\"\r\n//                     />\r\n//                   ) : (\r\n//                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\r\n//                   )}\r\n//                 </div>\r\n//               ) : null\r\n//             )}\r\n\r\n//             {/* Skills Section */}\r\n//             <div className=\"flex justify-between\">\r\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\r\n//               {isEditing ? (\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"skills\"\r\n//                   value={userData.skills.join(\", \")}\r\n//                   onChange={(e) =>\r\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\r\n//                   }\r\n//                   className=\"border p-2 rounded-md w-40\"\r\n//                 />\r\n//               ) : (\r\n//                 <span className=\"text-lg text-gray-900\">{userData.skills.join(\", \")}</span>\r\n//               )}\r\n//             </div>\r\n\r\n//             {/* Password Section */}\r\n//             {showPasswordFields && (\r\n//               <>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"currentPassword\"\r\n//                     value={passwordData.currentPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"newPassword\"\r\n//                     value={passwordData.newPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"confirmPassword\"\r\n//                     value={passwordData.confirmPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//               </>\r\n//             )}\r\n\r\n//             {/* Action Buttons */}\r\n//             <div className=\"flex space-x-4 mt-6\">\r\n//               {isEditing ? (\r\n//                 <>\r\n//                   <button\r\n//                     type=\"submit\"\r\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\r\n//                   >\r\n//                     Save\r\n//                   </button>\r\n//                   <button\r\n//                     type=\"button\"\r\n//                     onClick={() => setShowPasswordFields(!showPasswordFields)}\r\n//                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\r\n//                   >\r\n//                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\r\n//                   </button>\r\n//                 </>\r\n//               ) : (\r\n//                 <button\r\n//                   type=\"button\"\r\n//                   onClick={() => setIsEditing(true)}\r\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\r\n//                 >\r\n//                   Edit Profile\r\n//                 </button>\r\n//               )}\r\n//             </div>\r\n//           </form>\r\n//         </div>\r\n\r\n//         {/* Right Side: Bookmarked Jobs Section */}\r\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\r\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\r\n//           {bookmarkedJobs.length > 0 ? (\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//               {bookmarkedJobs.map((job) => (\r\n//                 <JobCard job={job} key={job.id} />\r\n//               ))}\r\n//             </div>\r\n//           ) : (\r\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Profile;\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Profile = () => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch user profile data from backend\r\n    axios\r\n      .get('http://localhost:5000/api/user/profile') // Replace with your backend API URL\r\n      .then((response) => {\r\n        setUserData(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setError('Failed to fetch user data');\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Profile</h1>\r\n      <div className=\"bg-white p-4 shadow-lg rounded-lg\">\r\n        <div className=\"flex justify-center mb-4\">\r\n          <img\r\n            src={userData.profilePicture || 'https://via.placeholder.com/150'}\r\n            alt=\"Profile\"\r\n            className=\"rounded-full w-32 h-32 object-cover\"\r\n          />\r\n        </div>\r\n        <div className=\"text-center mb-4\">\r\n          <h2 className=\"text-xl font-semibold\">{userData.name}</h2>\r\n          <p className=\"text-gray-500\">{userData.email}</p>\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"font-semibold\">Username:</span>\r\n            <span>{userData.username}</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"font-semibold\">Phone:</span>\r\n            <span>{userData.phone}</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"font-semibold\">State:</span>\r\n            <span>{userData.state}</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"font-semibold\">City:</span>\r\n            <span>{userData.city}</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"font-semibold\">Skills:</span>\r\n            <span>{userData.skills.join(', ')}</span>\r\n          </div>\r\n          {/* Hide password field for security */}\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"font-semibold\">Password:</span>\r\n            <span>********</span> {/* Mask password for security */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd;IAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}