{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import Navbar from \"./components/Navbar\";\n// import Signup from \"./pages/Signup\";\n// import Login from \"./pages/Login\";\n// import Profile from \"./pages/Profile\";\n// import JobsPage from \"./pages/JobsPage\";\n// import LandingPage from \"./pages/LandingPage\";\n// import AdminPage from \"./pages/admin\";\n\n// function App() {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [userRole, setUserRole] = useState(null);\n\n//   useEffect(() => {\n//     const loggedInUser = JSON.parse(localStorage.getItem('authToken'));\n//     if (loggedInUser) {\n//       setIsAuthenticated(true);\n//       setUserRole(loggedInUser.role); // Directly use the role from loggedInUser\n//     } else {\n//       setIsAuthenticated(false);\n//       setUserRole(null);\n//     }\n//   }, []);\n//   return (\n//     <Router>\n//       <Navbar\n//         isAuthenticated={isAuthenticated}\n//         setIsAuthenticated={setIsAuthenticated}\n//         userRole={userRole}\n//       />\n//       <Routes>\n//         <Route path=\"/\" element={<LandingPage />} />\n//         <Route path=\"/jobs\" element={<JobsPage />} />\n//         <Route path=\"/signup\" element={<Signup />} />\n//         <Route path=\"/login\" element={<Login setIsAuthenticated={setIsAuthenticated} />} />\n//         <Route\n//           path=\"/profile\"\n//           element={\n//             isAuthenticated ? (\n//               <Profile />\n//             ) : (\n//               <Navigate to=\"/login\" replace />\n//              )\n//           }\n//         />\n//         <Route\n//           path=\"/admin\"\n//           element={\n//             isAuthenticated && userRole === \"admin\" ? (\n//               <AdminPage />\n//             ) : (\n//               <Navigate to=\"/signup\" replace />\n//             )\n//           }\n//         />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["D:/project/web/job-portal/src/App.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\n// import Navbar from \"./components/Navbar\";\n// import Signup from \"./pages/Signup\";\n// import Login from \"./pages/Login\";\n// import Profile from \"./pages/Profile\";\n// import JobsPage from \"./pages/JobsPage\";\n// import LandingPage from \"./pages/LandingPage\";\n// import AdminPage from \"./pages/admin\";\n\n// function App() {\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n//   const [userRole, setUserRole] = useState(null);\n\n//   useEffect(() => {\n//     const loggedInUser = JSON.parse(localStorage.getItem('authToken'));\n//     if (loggedInUser) {\n//       setIsAuthenticated(true);\n//       setUserRole(loggedInUser.role); // Directly use the role from loggedInUser\n//     } else {\n//       setIsAuthenticated(false);\n//       setUserRole(null);\n//     }\n//   }, []);\n//   return (\n//     <Router>\n//       <Navbar\n//         isAuthenticated={isAuthenticated}\n//         setIsAuthenticated={setIsAuthenticated}\n//         userRole={userRole}\n//       />\n//       <Routes>\n//         <Route path=\"/\" element={<LandingPage />} />\n//         <Route path=\"/jobs\" element={<JobsPage />} />\n//         <Route path=\"/signup\" element={<Signup />} />\n//         <Route path=\"/login\" element={<Login setIsAuthenticated={setIsAuthenticated} />} />\n//         <Route\n//           path=\"/profile\"\n//           element={\n//             isAuthenticated ? (\n//               <Profile />\n//             ) : (\n//               <Navigate to=\"/login\" replace />\n//              )\n//           }\n//         />\n//         <Route\n//           path=\"/admin\"\n//           element={\n//             isAuthenticated && userRole === \"admin\" ? (\n//               <AdminPage />\n//             ) : (\n//               <Navigate to=\"/signup\" replace />\n//             )\n//           }\n//         />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n// export default App;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}