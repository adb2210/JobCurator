{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\web\\\\job-portal\\\\src\\\\pages\\\\Profile.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import JobCard from \"../components/JobCard\";\n\n// const Profile = () => {\n//   const [userData, setUserData] = useState(null);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\n//   const [showPasswordFields, setShowPasswordFields] = useState(false);\n//   const [passwordData, setPasswordData] = useState({\n//     currentPassword: \"\",\n//     newPassword: \"\",\n//     confirmPassword: \"\",\n//   });\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n//     const bookmarks = JSON.parse(localStorage.getItem(\"bookmarkedJobs\")) || [];\n\n//     if (loggedInUser) {\n//       setUserData(loggedInUser);\n//       setBookmarkedJobs(bookmarks);\n//     } else {\n//       navigate(\"/login\");\n//     }\n//   }, [navigate]);\n\n//   const handleSave = () => {\n//     if (showPasswordFields) {\n//       const { currentPassword, newPassword, confirmPassword } = passwordData;\n\n//       if (!currentPassword || !newPassword || !confirmPassword) {\n//         alert(\"Please fill in all password fields.\");\n//         return;\n//       }\n\n//       if (currentPassword !== userData.password) {\n//         alert(\"Current password is incorrect.\");\n//         return;\n//       }\n\n//       if (newPassword !== confirmPassword) {\n//         alert(\"New password and confirm password do not match.\");\n//         return;\n//       }\n\n//       // Update user data with the new password\n//       setUserData({ ...userData, password: newPassword });\n//       alert(\"Password updated successfully.\");\n//     }\n\n//     // Save updated user data\n//     localStorage.setItem(\"loggedInUser\", JSON.stringify(userData));\n//     setIsEditing(false);\n//     setShowPasswordFields(false);\n//     setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\n//   };\n\n//   const handleInputChange = (e) => {\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\n//   };\n\n//   const handlePasswordChange = (e) => {\n//     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\n//   };\n\n//   if (!userData) {\n//     return (\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\n//         <div>Loading...</div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\n//         {/* Left Side: Profile Section */}\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\n//           <div className=\"space-y-6\">\n//             {Object.keys(userData).map((field) =>\n//               ![\"bookmarkedJobs\", \"skills\", \"password\", \"role\", \"confirmPassword\"].includes(field) ? (\n//                 <div className=\"flex justify-between\" key={field}>\n//                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\n//                   {isEditing ? (\n//                     <input\n//                       type=\"text\"\n//                       name={field}\n//                       value={userData[field]}\n//                       onChange={handleInputChange}\n//                       className=\"border p-2 rounded-md w-40\"\n//                     />\n//                   ) : (\n//                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\n//                   )}\n//                 </div>\n//               ) : null\n//             )}\n\n//             {/* Skills Section */}\n//             <div className=\"flex justify-between\">\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\n//               {isEditing ? (\n//                 <input\n//                   type=\"text\"\n//                   name=\"skills\"\n//                   value={userData.skills.join(\", \")}\n//                   onChange={(e) =>\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\n//                   }\n//                   className=\"border p-2 rounded-md w-40\"\n//                 />\n//               ) : (\n//                 <span className=\"text-lg text-gray-900\">{userData.skills.join(\", \")}</span>\n//               )}\n//             </div>\n\n//             {/* Password Section */}\n//             {showPasswordFields && (\n//               <>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"currentPassword\"\n//                     value={passwordData.currentPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"newPassword\"\n//                     value={passwordData.newPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"confirmPassword\"\n//                     value={passwordData.confirmPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//               </>\n//             )}\n\n//             {/* Action Buttons */}\n//             <div className=\"flex space-x-4 mt-6\">\n//               {isEditing ? (\n//                 <>\n//                   <button\n//                     onClick={handleSave}\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\n//                   >\n//                     Save\n//                   </button>\n//                   <button\n//                     onClick={() => setShowPasswordFields(!showPasswordFields)}\n//                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\n//                   >\n//                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\n//                   </button>\n//                 </>\n//               ) : (\n//                 <button\n//                   onClick={() => setIsEditing(true)}\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\n//                 >\n//                   Edit Profile\n//                 </button>\n//               )}\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Right Side: Bookmarked Jobs Section */}\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\n//           {bookmarkedJobs.length > 0 ? (\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n//               {bookmarkedJobs.map((job) => (\n//                 <JobCard job={job} key={job.id} />\n//               ))}\n//             </div>\n//           ) : (\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profile;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import JobCard from \"../components/JobCard\";\n// import { jwtDecode } from \"jwt-decode\";\n\n// const Profile = () => {\n//   const getUserEmail = () => {\n//     const token = localStorage.getItem('authToken');\n//     if (!token) return null;\n\n//     try {\n//       const decodedToken = jwtDecode(token);\n//       console.log(decodedToken);\n//       return decodedToken.sub;  // Replace with the correct field from your token\n//     } catch (error) {\n//       console.error(\"Invalid token:\", error);\n//       return null;\n//     }\n//   };\n\n//   const email = getUserEmail();\n//   const [userData, setUserData] = useState(null);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\n//   const [showPasswordFields, setShowPasswordFields] = useState(false);\n//   const [passwordData, setPasswordData] = useState({\n//     currentPassword: \"\",\n//     newPassword: \"\",\n//     confirmPassword: \"\",\n//   });\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\n//         const { data: jobs } = await axios.get(`http://localhost:8080/api/bookmarks/${email}`);\n//         setUserData(user);\n//         setBookmarkedJobs(jobs);\n//       } catch (error) {\n//         console.error(\"Error fetching user data:\", error);\n//         navigate(\"/login\");\n//       }\n//     };\n\n//     fetchData();\n//   }, [email, navigate]);\n\n//   const handleSave = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       if (showPasswordFields) {\n//         const { currentPassword, newPassword, confirmPassword } = passwordData;\n\n//         if (!currentPassword || !newPassword || !confirmPassword) {\n//           alert(\"Please fill in all password fields.\");\n//           return;\n//         }\n\n//         if (newPassword !== confirmPassword) {\n//           alert(\"New password and confirm password do not match.\");\n//           return;\n//         }\n\n//         // Include password change in update payload\n//         await axios.post(`http://localhost:8080/api/users/update/${email}`, {\n//           ...userData,\n//           currentPassword,\n//           newPassword,\n//         });\n//         alert(\"Password updated successfully.\");\n//       } else {\n//         // Update user data without changing password\n//         await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\n//       }\n\n//       setIsEditing(false);\n//       setShowPasswordFields(false);\n//       setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\n//     } catch (error) {\n//       console.error(\"Error updating user data:\", error);\n//       alert(\"Failed to update profile.\");\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\n//   };\n\n//   const handlePasswordChange = (e) => {\n//     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\n//   };\n\n//   if (!userData) {\n//     return (\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\n//         <div>Loading...</div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\n//         {/* Left Side: Profile Section */}\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\n\n//           <form onSubmit={handleSave} className=\"space-y-6\">\n//             {Object.keys(userData).map((field) =>\n//               ![\"bookmarkedJobs\", \"skills\", \"password\", \"confirmPassword\"].includes(field) ? (\n//                 <div className=\"flex justify-between\" key={field}>\n//                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\n//                   {isEditing ? (\n//                     <input\n//                       type=\"text\"\n//                       name={field}\n//                       value={userData[field]}\n//                       onChange={handleInputChange}\n//                       className=\"border p-2 rounded-md w-40\"\n//                     />\n//                   ) : (\n//                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\n//                   )}\n//                 </div>\n//               ) : null\n//             )}\n\n//             {/* Skills Section */}\n//             <div className=\"flex justify-between\">\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\n//               {isEditing ? (\n//                 <input\n//                   type=\"text\"\n//                   name=\"skills\"\n//                   value={userData.skills.join(\", \")}\n//                   onChange={(e) =>\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\n//                   }\n//                   className=\"border p-2 rounded-md w-40\"\n//                 />\n//               ) : (\n//                 <span className=\"text-lg text-gray-900\">{userData.skills.join(\", \")}</span>\n//               )}\n//             </div>\n\n//             {/* Password Section */}\n//             {showPasswordFields && (\n//               <>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"currentPassword\"\n//                     value={passwordData.currentPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"newPassword\"\n//                     value={passwordData.newPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"confirmPassword\"\n//                     value={passwordData.confirmPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//               </>\n//             )}\n\n//             {/* Action Buttons */}\n//             <div className=\"flex space-x-4 mt-6\">\n//               {isEditing ? (\n//                 <>\n//                   <button\n//                     type=\"submit\"\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\n//                   >\n//                     Save\n//                   </button>\n//                   <button\n//                     type=\"button\"\n//                     onClick={() => setShowPasswordFields(!showPasswordFields)}\n//                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\n//                   >\n//                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\n//                   </button>\n//                 </>\n//               ) : (\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => setIsEditing(true)}\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\n//                 >\n//                   Edit Profile\n//                 </button>\n//               )}\n//             </div>\n//           </form>\n//         </div>\n\n//         {/* Right Side: Bookmarked Jobs Section */}\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\n//           {bookmarkedJobs.length > 0 ? (\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n//               {bookmarkedJobs.map((job) => (\n//                 <JobCard job={job} key={job.id} />\n//               ))}\n//             </div>\n//           ) : (\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profile;\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import JobCard from \"../components/JobCard\";\n// import { jwtDecode } from \"jwt-decode\";\n\n// const Profile = () => {\n//   const [userData, setUserData] = useState(null);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [passwordData, setPasswordData] = useState({\n//     currentPassword: \"\",\n//     newPassword: \"\",\n//     confirmPassword: \"\",\n//   });\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\n//   const [showPasswordFields, setShowPasswordFields] = useState(false);\n//   const navigate = useNavigate();\n\n//   const getUserEmail = () => {\n//     const token = localStorage.getItem('authToken');\n//     if (!token) return null;\n\n//     try {\n//       const decodedToken = jwtDecode(token);\n//       return decodedToken.sub; // Get email from decoded token\n//     } catch (error) {\n//       console.error(\"Invalid token:\", error);\n//       return null;\n//     }\n//   };\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const email = getUserEmail();\n//       if (!email) {\n//         navigate(\"/login\");\n//         return;\n//       }\n\n//       try {\n//         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\n//         const { data: jobs } = await axios.get(`http://localhost:8080/api/bookmarks/${email}`);\n//         setUserData(user);\n//         setBookmarkedJobs(jobs);\n//       } catch (error) {\n//         console.error(\"Error fetching user data:\", error);\n//         navigate(\"/login\");\n//       }\n//     };\n\n//     fetchData();\n//   }, [navigate]);\n\n//   const handleSave = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const email = getUserEmail();\n//       if (showPasswordFields) {\n//         const { currentPassword, newPassword, confirmPassword } = passwordData;\n//         if (!currentPassword || !newPassword || !confirmPassword) {\n//           alert(\"Please fill in all password fields.\");\n//           return;\n//         }\n\n//         if (newPassword !== confirmPassword) {\n//           alert(\"New password and confirm password do not match.\");\n//           return;\n//         }\n\n//         await axios.post(`http://localhost:8080/api/users/update/${email}`, {\n//           ...userData,\n//           currentPassword,\n//           newPassword,\n//         });\n//         alert(\"Password updated successfully.\");\n//       } else {\n//         await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\n//       }\n\n//       setIsEditing(false);\n//       setShowPasswordFields(false);\n//       setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\n//     } catch (error) {\n//       console.error(\"Error updating user data:\", error);\n//       alert(\"Failed to update profile.\");\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\n//   };\n\n//   const handlePasswordChange = (e) => {\n//     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\n//   };\n\n//   if (!userData) {\n//     return (\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\n//         <div>Loading...</div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\n//         {/* Left Side: Profile Section */}\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\n\n//           <div className=\"flex justify-center mb-6\">\n//             <img\n//               src={userData.avatar || \"https://via.placeholder.com/150\"}\n//               alt=\"User Avatar\"\n//               className=\"rounded-full w-32 h-32 object-cover\"\n//             />\n//           </div>\n\n//           <form onSubmit={handleSave} className=\"space-y-6\">\n//             {Object.keys(userData).map((field) =>\n//               ![\"bookmarkedJobs\", \"skills\", \"password\", \"confirmPassword\"].includes(field) ? (\n//                 <div className=\"flex justify-between\" key={field}>\n//                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\n//                   {isEditing ? (\n//                     <input\n//                       type=\"text\"\n//                       name={field}\n//                       value={userData[field]}\n//                       onChange={handleInputChange}\n//                       className=\"border p-2 rounded-md w-40\"\n//                     />\n//                   ) : (\n//                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\n//                   )}\n//                 </div>\n//               ) : null\n//             )}\n\n//             {/* Skills Section */}\n//             <div className=\"flex justify-between\">\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\n//               {isEditing ? (\n//                 <input\n//                   type=\"text\"\n//                   name=\"skills\"\n//                   value={userData.skills.join(\", \")}\n//                   onChange={(e) =>\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\n//                   }\n//                   className=\"border p-2 rounded-md w-40\"\n//                 />\n//               ) : (\n//                 <span className=\"text-lg text-gray-900\">{userData.skills.join(\", \")}</span>\n//               )}\n//             </div>\n\n//             {/* Password Section */}\n//             {showPasswordFields && (\n//               <>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"currentPassword\"\n//                     value={passwordData.currentPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"newPassword\"\n//                     value={passwordData.newPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"confirmPassword\"\n//                     value={passwordData.confirmPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//               </>\n//             )}\n\n//             {/* Action Buttons */}\n//             <div className=\"flex space-x-4 mt-6\">\n//               {isEditing ? (\n//                 <>\n//                   <button\n//                     type=\"submit\"\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\n//                   >\n//                     Save\n//                   </button>\n//                   <button\n//                     type=\"button\"\n//                     onClick={() => setShowPasswordFields(!showPasswordFields)}\n//                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\n//                   >\n//                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\n//                   </button>\n//                 </>\n//               ) : (\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => setIsEditing(true)}\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\n//                 >\n//                   Edit Profile\n//                 </button>\n//               )}\n//             </div>\n//           </form>\n//         </div>\n\n//         {/* Right Side: Bookmarked Jobs Section */}\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\n//           {bookmarkedJobs.length > 0 ? (\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n//               {bookmarkedJobs.map((job) => (\n//                 <JobCard job={job} key={job.id} />\n//               ))}\n//             </div>\n//           ) : (\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profile;\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n// import JobCard from \"../components/JobCard\";\n// import { jwtDecode } from \"jwt-decode\";\n\n// const Profile = () => {\n//   const [userData, setUserData] = useState(null);\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [passwordData, setPasswordData] = useState({\n//     currentPassword: \"\",\n//     newPassword: \"\",\n//     confirmPassword: \"\",\n//   });\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\n//   const [showPasswordFields, setShowPasswordFields] = useState(false);\n//   const navigate = useNavigate();\n\n//   const getUserEmail = () => {\n//     const token = localStorage.getItem(\"authToken\");\n//     if (!token) return null;\n\n//     try {\n//       const decodedToken = jwtDecode(token);\n//       return decodedToken.sub; // Ensure 'sub' contains email in your JWT\n//     } catch (error) {\n//       console.error(\"Invalid token:\", error);\n//       return null;\n//     }\n//   };\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const email = getUserEmail();\n//       if (!email) {\n//         navigate(\"/login\");\n//         return;\n//       }\n\n//       try {\n//         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\n//         const { data: jobs } = await axios.get(`http://localhost:8080/api/bookmarks/${email}`);\n//         setUserData(user);\n//         setBookmarkedJobs(jobs);\n//       } catch (error) {\n//         console.error(\"Error fetching user data:\", error);\n//         navigate(\"/login\");\n//       }\n//     };\n\n//     fetchData();\n//   }, [navigate]);\n\n//   const handleSave = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const email = getUserEmail();\n//       if (showPasswordFields) {\n//         const { currentPassword, newPassword, confirmPassword } = passwordData;\n//         if (!currentPassword || !newPassword || !confirmPassword) {\n//           alert(\"Please fill in all password fields.\");\n//           return;\n//         }\n\n//         if (newPassword !== confirmPassword) {\n//           alert(\"New password and confirm password do not match.\");\n//           return;\n//         }\n\n//         await axios.post(`http://localhost:8080/api/users/update/${email}`, {\n//           ...userData,\n//           currentPassword,\n//           newPassword,\n//         });\n//         alert(\"Password updated successfully.\");\n//       } else {\n//         await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\n//       }\n\n//       setIsEditing(false);\n//       setShowPasswordFields(false);\n//       setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\n//     } catch (error) {\n//       console.error(\"Error updating user data:\", error);\n//       alert(\"Failed to update profile.\");\n//     }\n//   };\n\n//   const handleInputChange = (e) => {\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\n//   };\n\n//   const handlePasswordChange = (e) => {\n//     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\n//   };\n\n//   if (!userData) {\n//     return (\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\n//         <div>Loading...</div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\n//           <div className=\"flex justify-center mb-6\">\n//             <img\n//               src={userData.avatar || \"https://via.placeholder.com/150\"}\n//               alt=\"User Avatar\"\n//               className=\"rounded-full w-32 h-32 object-cover\"\n//             />\n//           </div>\n\n//           <form onSubmit={handleSave} className=\"space-y-6\">\n//             {Object.keys(userData).map((field) =>\n//               ![\"bookmarkedJobs\", \"skills\", \"password\"].includes(field) ? (\n//                 <div className=\"flex justify-between\" key={field}>\n//                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\n//                   {isEditing ? (\n//                     <input\n//                       type=\"text\"\n//                       name={field}\n//                       value={userData[field]}\n//                       onChange={handleInputChange}\n//                       className=\"border p-2 rounded-md w-40\"\n//                     />\n//                   ) : (\n//                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\n//                   )}\n//                 </div>\n//               ) : null\n//             )}\n\n//             <div className=\"flex justify-between\">\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\n//               {isEditing ? (\n//                 <input\n//                   type=\"text\"\n//                   name=\"skills\"\n//                   value={userData.skills?.join(\", \") || \"\"}\n//                   onChange={(e) =>\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\n//                   }\n//                   className=\"border p-2 rounded-md w-40\"\n//                 />\n//               ) : (\n//                 <span className=\"text-lg text-gray-900\">{userData.skills?.join(\", \") || \"No skills added\"}</span>\n//               )}\n//             </div>\n\n//             {showPasswordFields && (\n//               <>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"currentPassword\"\n//                     value={passwordData.currentPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"newPassword\"\n//                     value={passwordData.newPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//                 <div className=\"flex justify-between\">\n//                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\n//                   <input\n//                     type=\"password\"\n//                     name=\"confirmPassword\"\n//                     value={passwordData.confirmPassword}\n//                     onChange={handlePasswordChange}\n//                     className=\"border p-2 rounded-md w-40\"\n//                   />\n//                 </div>\n//               </>\n//             )}\n\n//             <div className=\"flex space-x-4 mt-6\">\n//               {isEditing ? (\n//                 <>\n//                   <button\n//                     type=\"submit\"\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\n//                   >\n//                     Save\n//                   </button>\n//                   <button\n//                     type=\"button\"\n//                     onClick={() => setShowPasswordFields(!showPasswordFields)}\n//                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\n//                   >\n//                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\n//                   </button>\n//                 </>\n//               ) : (\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => setIsEditing(true)}\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\n//                 >\n//                   Edit Profile\n//                 </button>\n//               )}\n//             </div>\n//           </form>\n//         </div>\n\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\n//           {bookmarkedJobs.length > 0 ? (\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n//               {bookmarkedJobs.map((job) => (\n//                 <JobCard job={job} key={job.id} />\n//               ))}\n//             </div>\n//           ) : (\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profile;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport JobCard from \"../components/JobCard\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  var _userData$skills, _userData$skills2;\n  const [userData, setUserData] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [passwordData, setPasswordData] = useState({\n    currentPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\"\n  });\n  const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\n  const [showPasswordFields, setShowPasswordFields] = useState(false);\n  const navigate = useNavigate();\n  const getUserEmail = () => {\n    const token = localStorage.getItem(\"authToken\");\n    if (!token) return null;\n    try {\n      const decodedToken = jwtDecode(token);\n      return decodedToken.sub; // Ensure 'sub' contains email in your JWT\n    } catch (error) {\n      console.error(\"Invalid token:\", error);\n      return null;\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const email = getUserEmail();\n      if (!email) {\n        navigate(\"/login\");\n        return;\n      }\n      try {\n        const {\n          data: user\n        } = await axios.get(`http://localhost:8080/api/users/${email}`);\n        const {\n          data: bookmarkedJobs\n        } = await axios.get(`http://localhost:8080/api/bookmarks/${email}`);\n        const {\n          data: allJobs\n        } = await axios.get(`http://localhost:8080/api/alljobs`);\n        setUserData(user);\n        setBookmarkedJobs(jobs);\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n        navigate(\"/login\");\n      }\n    };\n    fetchData();\n  }, [navigate]);\n  const handleSave = async e => {\n    e.preventDefault();\n    try {\n      const email = getUserEmail();\n      if (showPasswordFields) {\n        const {\n          currentPassword,\n          newPassword,\n          confirmPassword\n        } = passwordData;\n        if (!currentPassword || !newPassword || !confirmPassword) {\n          alert(\"Please fill in all password fields.\");\n          return;\n        }\n        if (newPassword !== confirmPassword) {\n          alert(\"New password and confirm password do not match.\");\n          return;\n        }\n        await axios.post(`http://localhost:8080/api/users/update/${email}`, {\n          ...userData,\n          currentPassword,\n          newPassword\n        });\n        alert(\"Password updated successfully.\");\n      } else {\n        await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\n      }\n      setIsEditing(false);\n      setShowPasswordFields(false);\n      setPasswordData({\n        currentPassword: \"\",\n        newPassword: \"\",\n        confirmPassword: \"\"\n      });\n    } catch (error) {\n      console.error(\"Error updating user data:\", error);\n      alert(\"Failed to update profile.\");\n    }\n  };\n  const handleInputChange = e => {\n    setUserData({\n      ...userData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handlePasswordChange = e => {\n    setPasswordData({\n      ...passwordData,\n      [e.target.name]: e.target.value\n    });\n  };\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1023,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 pt-16 px-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-semibold text-center mb-6 text-gray-800\",\n          children: \"Your Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1033,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSave,\n          className: \"space-y-6\",\n          children: [Object.keys(userData).map(field => ![\"bookmarkedJobs\", \"skills\", \"password\"].includes(field) ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-lg text-gray-600 capitalize\",\n              children: [field, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1038,\n              columnNumber: 19\n            }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: field,\n              value: userData[field],\n              onChange: handleInputChange,\n              className: \"border p-2 rounded-md w-40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg text-gray-900\",\n              children: userData[field]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1048,\n              columnNumber: 21\n            }, this)]\n          }, field, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1037,\n            columnNumber: 17\n          }, this) : null), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-lg text-gray-600\",\n              children: \"Skills:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1055,\n              columnNumber: 15\n            }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"skills\",\n              value: ((_userData$skills = userData.skills) === null || _userData$skills === void 0 ? void 0 : _userData$skills.join(\", \")) || \"\",\n              onChange: e => setUserData({\n                ...userData,\n                skills: e.target.value.split(\",\").map(s => s.trim())\n              }),\n              className: \"border p-2 rounded-md w-40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1057,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg text-gray-900\",\n              children: ((_userData$skills2 = userData.skills) === null || _userData$skills2 === void 0 ? void 0 : _userData$skills2.join(\", \")) || \"No skills added\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1067,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1054,\n            columnNumber: 13\n          }, this), showPasswordFields && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"text-lg text-gray-600\",\n                children: \"Current Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1074,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"currentPassword\",\n                value: passwordData.currentPassword,\n                onChange: handlePasswordChange,\n                className: \"border p-2 rounded-md w-40\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1075,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1073,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"text-lg text-gray-600\",\n                children: \"New Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1084,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"newPassword\",\n                value: passwordData.newPassword,\n                onChange: handlePasswordChange,\n                className: \"border p-2 rounded-md w-40\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1085,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"text-lg text-gray-600\",\n                children: \"Confirm Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1094,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"confirmPassword\",\n                value: passwordData.confirmPassword,\n                onChange: handlePasswordChange,\n                className: \"border p-2 rounded-md w-40\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1095,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1093,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-4 mt-6\",\n            children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setShowPasswordFields(!showPasswordFields),\n                className: \"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\",\n                children: showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1115,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setIsEditing(true),\n              className: \"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\",\n              children: \"Edit Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-2 bg-white shadow-xl rounded-lg p-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-semibold text-center mb-6 text-gray-800\",\n          children: \"Saved Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 11\n        }, this), bookmarkedJobs.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n          children: bookmarkedJobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n            job: job,\n            showDetails: true\n          }, job.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1141,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-gray-500\",\n          children: \"You haven't bookmarked any jobs yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1030,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"PaP2IfDo5GkSjn/OcELSYq0rRvs=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","JobCard","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","_userData$skills","_userData$skills2","userData","setUserData","isEditing","setIsEditing","passwordData","setPasswordData","currentPassword","newPassword","confirmPassword","bookmarkedJobs","setBookmarkedJobs","showPasswordFields","setShowPasswordFields","navigate","getUserEmail","token","localStorage","getItem","decodedToken","sub","error","console","fetchData","email","data","user","get","allJobs","jobs","handleSave","e","preventDefault","alert","post","handleInputChange","target","name","value","handlePasswordChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","keys","map","field","includes","type","onChange","skills","join","split","s","trim","onClick","length","job","showDetails","id","_c","$RefreshReg$"],"sources":["D:/project/web/job-portal/src/pages/Profile.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import JobCard from \"../components/JobCard\";\r\n\r\n// const Profile = () => {\r\n//   const [userData, setUserData] = useState(null);\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\r\n//   const [showPasswordFields, setShowPasswordFields] = useState(false);\r\n//   const [passwordData, setPasswordData] = useState({\r\n//     currentPassword: \"\",\r\n//     newPassword: \"\",\r\n//     confirmPassword: \"\",\r\n//   });\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\r\n//     const bookmarks = JSON.parse(localStorage.getItem(\"bookmarkedJobs\")) || [];\r\n\r\n//     if (loggedInUser) {\r\n//       setUserData(loggedInUser);\r\n//       setBookmarkedJobs(bookmarks);\r\n//     } else {\r\n//       navigate(\"/login\");\r\n//     }\r\n//   }, [navigate]);\r\n\r\n//   const handleSave = () => {\r\n//     if (showPasswordFields) {\r\n//       const { currentPassword, newPassword, confirmPassword } = passwordData;\r\n\r\n//       if (!currentPassword || !newPassword || !confirmPassword) {\r\n//         alert(\"Please fill in all password fields.\");\r\n//         return;\r\n//       }\r\n\r\n//       if (currentPassword !== userData.password) {\r\n//         alert(\"Current password is incorrect.\");\r\n//         return;\r\n//       }\r\n\r\n//       if (newPassword !== confirmPassword) {\r\n//         alert(\"New password and confirm password do not match.\");\r\n//         return;\r\n//       }\r\n\r\n//       // Update user data with the new password\r\n//       setUserData({ ...userData, password: newPassword });\r\n//       alert(\"Password updated successfully.\");\r\n//     }\r\n\r\n//     // Save updated user data\r\n//     localStorage.setItem(\"loggedInUser\", JSON.stringify(userData));\r\n//     setIsEditing(false);\r\n//     setShowPasswordFields(false);\r\n//     setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handlePasswordChange = (e) => {\r\n//     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   if (!userData) {\r\n//     return (\r\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\r\n//         <div>Loading...</div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\r\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n//         {/* Left Side: Profile Section */}\r\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\r\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\r\n//           <div className=\"space-y-6\">\r\n//             {Object.keys(userData).map((field) =>\r\n//               ![\"bookmarkedJobs\", \"skills\", \"password\", \"role\", \"confirmPassword\"].includes(field) ? (\r\n//                 <div className=\"flex justify-between\" key={field}>\r\n//                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\r\n//                   {isEditing ? (\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       name={field}\r\n//                       value={userData[field]}\r\n//                       onChange={handleInputChange}\r\n//                       className=\"border p-2 rounded-md w-40\"\r\n//                     />\r\n//                   ) : (\r\n//                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\r\n//                   )}\r\n//                 </div>\r\n//               ) : null\r\n//             )}\r\n\r\n//             {/* Skills Section */}\r\n//             <div className=\"flex justify-between\">\r\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\r\n//               {isEditing ? (\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"skills\"\r\n//                   value={userData.skills.join(\", \")}\r\n//                   onChange={(e) =>\r\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\r\n//                   }\r\n//                   className=\"border p-2 rounded-md w-40\"\r\n//                 />\r\n//               ) : (\r\n//                 <span className=\"text-lg text-gray-900\">{userData.skills.join(\", \")}</span>\r\n//               )}\r\n//             </div>\r\n\r\n//             {/* Password Section */}\r\n//             {showPasswordFields && (\r\n//               <>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"currentPassword\"\r\n//                     value={passwordData.currentPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"newPassword\"\r\n//                     value={passwordData.newPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"confirmPassword\"\r\n//                     value={passwordData.confirmPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//               </>\r\n//             )}\r\n\r\n//             {/* Action Buttons */}\r\n//             <div className=\"flex space-x-4 mt-6\">\r\n//               {isEditing ? (\r\n//                 <>\r\n//                   <button\r\n//                     onClick={handleSave}\r\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\r\n//                   >\r\n//                     Save\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={() => setShowPasswordFields(!showPasswordFields)}\r\n//                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\r\n//                   >\r\n//                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\r\n//                   </button>\r\n//                 </>\r\n//               ) : (\r\n//                 <button\r\n//                   onClick={() => setIsEditing(true)}\r\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\r\n//                 >\r\n//                   Edit Profile\r\n//                 </button>\r\n//               )}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Right Side: Bookmarked Jobs Section */}\r\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\r\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\r\n//           {bookmarkedJobs.length > 0 ? (\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//               {bookmarkedJobs.map((job) => (\r\n//                 <JobCard job={job} key={job.id} />\r\n//               ))}\r\n//             </div>\r\n//           ) : (\r\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Profile;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import JobCard from \"../components/JobCard\";\r\n// import { jwtDecode } from \"jwt-decode\";\r\n\r\n// const Profile = () => {\r\n//   const getUserEmail = () => {\r\n//     const token = localStorage.getItem('authToken');\r\n//     if (!token) return null;\r\n    \r\n//     try {\r\n//       const decodedToken = jwtDecode(token);\r\n//       console.log(decodedToken);\r\n//       return decodedToken.sub;  // Replace with the correct field from your token\r\n//     } catch (error) {\r\n//       console.error(\"Invalid token:\", error);\r\n//       return null;\r\n//     }\r\n//   };\r\n\r\n//   const email = getUserEmail();\r\n//   const [userData, setUserData] = useState(null);\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\r\n//   const [showPasswordFields, setShowPasswordFields] = useState(false);\r\n//   const [passwordData, setPasswordData] = useState({\r\n//     currentPassword: \"\",\r\n//     newPassword: \"\",\r\n//     confirmPassword: \"\",\r\n//   });\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\r\n//         const { data: jobs } = await axios.get(`http://localhost:8080/api/bookmarks/${email}`);\r\n//         setUserData(user);\r\n//         setBookmarkedJobs(jobs);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching user data:\", error);\r\n//         navigate(\"/login\");\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [email, navigate]);\r\n\r\n//   const handleSave = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       if (showPasswordFields) {\r\n//         const { currentPassword, newPassword, confirmPassword } = passwordData;\r\n\r\n//         if (!currentPassword || !newPassword || !confirmPassword) {\r\n//           alert(\"Please fill in all password fields.\");\r\n//           return;\r\n//         }\r\n\r\n//         if (newPassword !== confirmPassword) {\r\n//           alert(\"New password and confirm password do not match.\");\r\n//           return;\r\n//         }\r\n\r\n//         // Include password change in update payload\r\n//         await axios.post(`http://localhost:8080/api/users/update/${email}`, {\r\n//           ...userData,\r\n//           currentPassword,\r\n//           newPassword,\r\n//         });\r\n//         alert(\"Password updated successfully.\");\r\n//       } else {\r\n//         // Update user data without changing password\r\n//         await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\r\n//       }\r\n\r\n//       setIsEditing(false);\r\n//       setShowPasswordFields(false);\r\n//       setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\r\n//     } catch (error) {\r\n//       console.error(\"Error updating user data:\", error);\r\n//       alert(\"Failed to update profile.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handlePasswordChange = (e) => {\r\n//     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   if (!userData) {\r\n//     return (\r\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\r\n//         <div>Loading...</div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\r\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n//         {/* Left Side: Profile Section */}\r\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\r\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\r\n\r\n//           <form onSubmit={handleSave} className=\"space-y-6\">\r\n//             {Object.keys(userData).map((field) =>\r\n//               ![\"bookmarkedJobs\", \"skills\", \"password\", \"confirmPassword\"].includes(field) ? (\r\n//                 <div className=\"flex justify-between\" key={field}>\r\n//                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\r\n//                   {isEditing ? (\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       name={field}\r\n//                       value={userData[field]}\r\n//                       onChange={handleInputChange}\r\n//                       className=\"border p-2 rounded-md w-40\"\r\n//                     />\r\n//                   ) : (\r\n//                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\r\n//                   )}\r\n//                 </div>\r\n//               ) : null\r\n//             )}\r\n\r\n//             {/* Skills Section */}\r\n//             <div className=\"flex justify-between\">\r\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\r\n//               {isEditing ? (\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"skills\"\r\n//                   value={userData.skills.join(\", \")}\r\n//                   onChange={(e) =>\r\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\r\n//                   }\r\n//                   className=\"border p-2 rounded-md w-40\"\r\n//                 />\r\n//               ) : (\r\n//                 <span className=\"text-lg text-gray-900\">{userData.skills.join(\", \")}</span>\r\n//               )}\r\n//             </div>\r\n\r\n//             {/* Password Section */}\r\n//             {showPasswordFields && (\r\n//               <>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"currentPassword\"\r\n//                     value={passwordData.currentPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"newPassword\"\r\n//                     value={passwordData.newPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"confirmPassword\"\r\n//                     value={passwordData.confirmPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//               </>\r\n//             )}\r\n\r\n//             {/* Action Buttons */}\r\n//             <div className=\"flex space-x-4 mt-6\">\r\n//               {isEditing ? (\r\n//                 <>\r\n//                   <button\r\n//                     type=\"submit\"\r\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\r\n//                   >\r\n//                     Save\r\n//                   </button>\r\n//                   <button\r\n//                     type=\"button\"\r\n//                     onClick={() => setShowPasswordFields(!showPasswordFields)}\r\n//                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\r\n//                   >\r\n//                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\r\n//                   </button>\r\n//                 </>\r\n//               ) : (\r\n//                 <button\r\n//                   type=\"button\"\r\n//                   onClick={() => setIsEditing(true)}\r\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\r\n//                 >\r\n//                   Edit Profile\r\n//                 </button>\r\n//               )}\r\n//             </div>\r\n//           </form>\r\n//         </div>\r\n\r\n//         {/* Right Side: Bookmarked Jobs Section */}\r\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\r\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\r\n//           {bookmarkedJobs.length > 0 ? (\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//               {bookmarkedJobs.map((job) => (\r\n//                 <JobCard job={job} key={job.id} />\r\n//               ))}\r\n//             </div>\r\n//           ) : (\r\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Profile;\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import JobCard from \"../components/JobCard\";\r\n// import { jwtDecode } from \"jwt-decode\";\r\n\r\n// const Profile = () => {\r\n//   const [userData, setUserData] = useState(null);\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [passwordData, setPasswordData] = useState({\r\n//     currentPassword: \"\",\r\n//     newPassword: \"\",\r\n//     confirmPassword: \"\",\r\n//   });\r\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\r\n//   const [showPasswordFields, setShowPasswordFields] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const getUserEmail = () => {\r\n//     const token = localStorage.getItem('authToken');\r\n//     if (!token) return null;\r\n    \r\n//     try {\r\n//       const decodedToken = jwtDecode(token);\r\n//       return decodedToken.sub; // Get email from decoded token\r\n//     } catch (error) {\r\n//       console.error(\"Invalid token:\", error);\r\n//       return null;\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       const email = getUserEmail();\r\n//       if (!email) {\r\n//         navigate(\"/login\");\r\n//         return;\r\n//       }\r\n\r\n//       try {\r\n//         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\r\n//         const { data: jobs } = await axios.get(`http://localhost:8080/api/bookmarks/${email}`);\r\n//         setUserData(user);\r\n//         setBookmarkedJobs(jobs);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching user data:\", error);\r\n//         navigate(\"/login\");\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [navigate]);\r\n\r\n//   const handleSave = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       const email = getUserEmail();\r\n//       if (showPasswordFields) {\r\n//         const { currentPassword, newPassword, confirmPassword } = passwordData;\r\n//         if (!currentPassword || !newPassword || !confirmPassword) {\r\n//           alert(\"Please fill in all password fields.\");\r\n//           return;\r\n//         }\r\n\r\n//         if (newPassword !== confirmPassword) {\r\n//           alert(\"New password and confirm password do not match.\");\r\n//           return;\r\n//         }\r\n\r\n//         await axios.post(`http://localhost:8080/api/users/update/${email}`, {\r\n//           ...userData,\r\n//           currentPassword,\r\n//           newPassword,\r\n//         });\r\n//         alert(\"Password updated successfully.\");\r\n//       } else {\r\n//         await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\r\n//       }\r\n\r\n//       setIsEditing(false);\r\n//       setShowPasswordFields(false);\r\n//       setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\r\n//     } catch (error) {\r\n//       console.error(\"Error updating user data:\", error);\r\n//       alert(\"Failed to update profile.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handlePasswordChange = (e) => {\r\n//     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   if (!userData) {\r\n//     return (\r\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\r\n//         <div>Loading...</div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\r\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n//         {/* Left Side: Profile Section */}\r\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\r\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\r\n\r\n//           <div className=\"flex justify-center mb-6\">\r\n//             <img\r\n//               src={userData.avatar || \"https://via.placeholder.com/150\"}\r\n//               alt=\"User Avatar\"\r\n//               className=\"rounded-full w-32 h-32 object-cover\"\r\n//             />\r\n//           </div>\r\n\r\n//           <form onSubmit={handleSave} className=\"space-y-6\">\r\n//             {Object.keys(userData).map((field) =>\r\n//               ![\"bookmarkedJobs\", \"skills\", \"password\", \"confirmPassword\"].includes(field) ? (\r\n//                 <div className=\"flex justify-between\" key={field}>\r\n//                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\r\n//                   {isEditing ? (\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       name={field}\r\n//                       value={userData[field]}\r\n//                       onChange={handleInputChange}\r\n//                       className=\"border p-2 rounded-md w-40\"\r\n//                     />\r\n//                   ) : (\r\n//                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\r\n//                   )}\r\n//                 </div>\r\n//               ) : null\r\n//             )}\r\n\r\n//             {/* Skills Section */}\r\n//             <div className=\"flex justify-between\">\r\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\r\n//               {isEditing ? (\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"skills\"\r\n//                   value={userData.skills.join(\", \")}\r\n//                   onChange={(e) =>\r\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\r\n//                   }\r\n//                   className=\"border p-2 rounded-md w-40\"\r\n//                 />\r\n//               ) : (\r\n//                 <span className=\"text-lg text-gray-900\">{userData.skills.join(\", \")}</span>\r\n//               )}\r\n//             </div>\r\n\r\n//             {/* Password Section */}\r\n//             {showPasswordFields && (\r\n//               <>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"currentPassword\"\r\n//                     value={passwordData.currentPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"newPassword\"\r\n//                     value={passwordData.newPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"confirmPassword\"\r\n//                     value={passwordData.confirmPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//               </>\r\n//             )}\r\n\r\n//             {/* Action Buttons */}\r\n//             <div className=\"flex space-x-4 mt-6\">\r\n//               {isEditing ? (\r\n//                 <>\r\n//                   <button\r\n//                     type=\"submit\"\r\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\r\n//                   >\r\n//                     Save\r\n//                   </button>\r\n//                   <button\r\n//                     type=\"button\"\r\n//                     onClick={() => setShowPasswordFields(!showPasswordFields)}\r\n//                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\r\n//                   >\r\n//                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\r\n//                   </button>\r\n//                 </>\r\n//               ) : (\r\n//                 <button\r\n//                   type=\"button\"\r\n//                   onClick={() => setIsEditing(true)}\r\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\r\n//                 >\r\n//                   Edit Profile\r\n//                 </button>\r\n//               )}\r\n//             </div>\r\n//           </form>\r\n//         </div>\r\n\r\n//         {/* Right Side: Bookmarked Jobs Section */}\r\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\r\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\r\n//           {bookmarkedJobs.length > 0 ? (\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//               {bookmarkedJobs.map((job) => (\r\n//                 <JobCard job={job} key={job.id} />\r\n//               ))}\r\n//             </div>\r\n//           ) : (\r\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Profile;\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import JobCard from \"../components/JobCard\";\r\n// import { jwtDecode } from \"jwt-decode\";\r\n\r\n\r\n\r\n// const Profile = () => {\r\n//   const [userData, setUserData] = useState(null);\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [passwordData, setPasswordData] = useState({\r\n//     currentPassword: \"\",\r\n//     newPassword: \"\",\r\n//     confirmPassword: \"\",\r\n//   });\r\n//   const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\r\n//   const [showPasswordFields, setShowPasswordFields] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const getUserEmail = () => {\r\n//     const token = localStorage.getItem(\"authToken\");\r\n//     if (!token) return null;\r\n\r\n//     try {\r\n//       const decodedToken = jwtDecode(token);\r\n//       return decodedToken.sub; // Ensure 'sub' contains email in your JWT\r\n//     } catch (error) {\r\n//       console.error(\"Invalid token:\", error);\r\n//       return null;\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       const email = getUserEmail();\r\n//       if (!email) {\r\n//         navigate(\"/login\");\r\n//         return;\r\n//       }\r\n\r\n//       try {\r\n//         const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\r\n//         const { data: jobs } = await axios.get(`http://localhost:8080/api/bookmarks/${email}`);\r\n//         setUserData(user);\r\n//         setBookmarkedJobs(jobs);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching user data:\", error);\r\n//         navigate(\"/login\");\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [navigate]);\r\n\r\n//   const handleSave = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       const email = getUserEmail();\r\n//       if (showPasswordFields) {\r\n//         const { currentPassword, newPassword, confirmPassword } = passwordData;\r\n//         if (!currentPassword || !newPassword || !confirmPassword) {\r\n//           alert(\"Please fill in all password fields.\");\r\n//           return;\r\n//         }\r\n\r\n//         if (newPassword !== confirmPassword) {\r\n//           alert(\"New password and confirm password do not match.\");\r\n//           return;\r\n//         }\r\n\r\n//         await axios.post(`http://localhost:8080/api/users/update/${email}`, {\r\n//           ...userData,\r\n//           currentPassword,\r\n//           newPassword,\r\n//         });\r\n//         alert(\"Password updated successfully.\");\r\n//       } else {\r\n//         await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\r\n//       }\r\n\r\n//       setIsEditing(false);\r\n//       setShowPasswordFields(false);\r\n//       setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\r\n//     } catch (error) {\r\n//       console.error(\"Error updating user data:\", error);\r\n//       alert(\"Failed to update profile.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     setUserData({ ...userData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handlePasswordChange = (e) => {\r\n//     setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   if (!userData) {\r\n//     return (\r\n//       <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\r\n//         <div>Loading...</div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\r\n//       <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n//         <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\r\n//           <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\r\n//           <div className=\"flex justify-center mb-6\">\r\n//             <img\r\n//               src={userData.avatar || \"https://via.placeholder.com/150\"}\r\n//               alt=\"User Avatar\"\r\n//               className=\"rounded-full w-32 h-32 object-cover\"\r\n//             />\r\n//           </div>\r\n\r\n//           <form onSubmit={handleSave} className=\"space-y-6\">\r\n//             {Object.keys(userData).map((field) =>\r\n//               ![\"bookmarkedJobs\", \"skills\", \"password\"].includes(field) ? (\r\n//                 <div className=\"flex justify-between\" key={field}>\r\n//                   <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\r\n//                   {isEditing ? (\r\n//                     <input\r\n//                       type=\"text\"\r\n//                       name={field}\r\n//                       value={userData[field]}\r\n//                       onChange={handleInputChange}\r\n//                       className=\"border p-2 rounded-md w-40\"\r\n//                     />\r\n//                   ) : (\r\n//                     <span className=\"text-lg text-gray-900\">{userData[field]}</span>\r\n//                   )}\r\n//                 </div>\r\n//               ) : null\r\n//             )}\r\n\r\n//             <div className=\"flex justify-between\">\r\n//               <strong className=\"text-lg text-gray-600\">Skills:</strong>\r\n//               {isEditing ? (\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   name=\"skills\"\r\n//                   value={userData.skills?.join(\", \") || \"\"}\r\n//                   onChange={(e) =>\r\n//                     setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\r\n//                   }\r\n//                   className=\"border p-2 rounded-md w-40\"\r\n//                 />\r\n//               ) : (\r\n//                 <span className=\"text-lg text-gray-900\">{userData.skills?.join(\", \") || \"No skills added\"}</span>\r\n//               )}\r\n//             </div>\r\n\r\n//             {showPasswordFields && (\r\n//               <>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">Current Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"currentPassword\"\r\n//                     value={passwordData.currentPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">New Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"newPassword\"\r\n//                     value={passwordData.newPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"flex justify-between\">\r\n//                   <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\r\n//                   <input\r\n//                     type=\"password\"\r\n//                     name=\"confirmPassword\"\r\n//                     value={passwordData.confirmPassword}\r\n//                     onChange={handlePasswordChange}\r\n//                     className=\"border p-2 rounded-md w-40\"\r\n//                   />\r\n//                 </div>\r\n//               </>\r\n//             )}\r\n\r\n//             <div className=\"flex space-x-4 mt-6\">\r\n//               {isEditing ? (\r\n//                 <>\r\n//                   <button\r\n//                     type=\"submit\"\r\n//                     className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\r\n//                   >\r\n//                     Save\r\n//                   </button>\r\n//                   <button\r\n//                     type=\"button\"\r\n//                     onClick={() => setShowPasswordFields(!showPasswordFields)}\r\n//                     className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\r\n//                   >\r\n//                     {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\r\n//                   </button>\r\n//                 </>\r\n//               ) : (\r\n//                 <button\r\n//                   type=\"button\"\r\n//                   onClick={() => setIsEditing(true)}\r\n//                   className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\r\n//                 >\r\n//                   Edit Profile\r\n//                 </button>\r\n//               )}\r\n//             </div>\r\n//           </form>\r\n//         </div>\r\n\r\n//         <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\r\n//           <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\r\n//           {bookmarkedJobs.length > 0 ? (\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n//               {bookmarkedJobs.map((job) => (\r\n//                 <JobCard job={job} key={job.id} />\r\n//               ))}\r\n//             </div>\r\n//           ) : (\r\n//             <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Profile;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport JobCard from \"../components/JobCard\";\r\nimport {jwtDecode} from \"jwt-decode\";\r\n\r\nconst Profile = () => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [passwordData, setPasswordData] = useState({\r\n    currentPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [bookmarkedJobs, setBookmarkedJobs] = useState([]);\r\n  const [showPasswordFields, setShowPasswordFields] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const getUserEmail = () => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n    if (!token) return null;\r\n\r\n    try {\r\n      const decodedToken = jwtDecode(token);\r\n      return decodedToken.sub; // Ensure 'sub' contains email in your JWT\r\n    } catch (error) {\r\n      console.error(\"Invalid token:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const email = getUserEmail();\r\n      if (!email) {\r\n        navigate(\"/login\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const { data: user } = await axios.get(`http://localhost:8080/api/users/${email}`);\r\n        const { data: bookmarkedJobs } = await axios.get(`http://localhost:8080/api/bookmarks/${email}`);\r\n        const { data: allJobs } = await axios.get(`http://localhost:8080/api/alljobs`);\r\n        setUserData(user);\r\n        setBookmarkedJobs(jobs);\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n        navigate(\"/login\");\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [navigate]);\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const email = getUserEmail();\r\n      if (showPasswordFields) {\r\n        const { currentPassword, newPassword, confirmPassword } = passwordData;\r\n        if (!currentPassword || !newPassword || !confirmPassword) {\r\n          alert(\"Please fill in all password fields.\");\r\n          return;\r\n        }\r\n\r\n        if (newPassword !== confirmPassword) {\r\n          alert(\"New password and confirm password do not match.\");\r\n          return;\r\n        }\r\n\r\n        await axios.post(`http://localhost:8080/api/users/update/${email}`, {\r\n          ...userData,\r\n          currentPassword,\r\n          newPassword,\r\n        });\r\n        alert(\"Password updated successfully.\");\r\n      } else {\r\n        await axios.post(`http://localhost:8080/api/users/update/${email}`, userData);\r\n      }\r\n\r\n      setIsEditing(false);\r\n      setShowPasswordFields(false);\r\n      setPasswordData({ currentPassword: \"\", newPassword: \"\", confirmPassword: \"\" });\r\n    } catch (error) {\r\n      console.error(\"Error updating user data:\", error);\r\n      alert(\"Failed to update profile.\");\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setUserData({ ...userData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  if (!userData) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-100 pt-16 flex justify-center items-center\">\r\n        <div>Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 pt-16 px-4\">\r\n      <div className=\"container mx-auto grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n        <div className=\"col-span-1 bg-white shadow-xl rounded-lg p-8 relative lg:sticky lg:top-16 h-max\">\r\n          <h1 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Your Profile</h1>\r\n          <form onSubmit={handleSave} className=\"space-y-6\">\r\n            {Object.keys(userData).map((field) =>\r\n              ![\"bookmarkedJobs\", \"skills\", \"password\"].includes(field) ? (\r\n                <div className=\"flex justify-between\" key={field}>\r\n                  <strong className=\"text-lg text-gray-600 capitalize\">{field}:</strong>\r\n                  {isEditing ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      name={field}\r\n                      value={userData[field]}\r\n                      onChange={handleInputChange}\r\n                      className=\"border p-2 rounded-md w-40\"\r\n                    />\r\n                  ) : (\r\n                    <span className=\"text-lg text-gray-900\">{userData[field]}</span>\r\n                  )}\r\n                </div>\r\n              ) : null\r\n            )}\r\n\r\n            <div className=\"flex justify-between\">\r\n              <strong className=\"text-lg text-gray-600\">Skills:</strong>\r\n              {isEditing ? (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"skills\"\r\n                  value={userData.skills?.join(\", \") || \"\"}\r\n                  onChange={(e) =>\r\n                    setUserData({ ...userData, skills: e.target.value.split(\",\").map((s) => s.trim()) })\r\n                  }\r\n                  className=\"border p-2 rounded-md w-40\"\r\n                />\r\n              ) : (\r\n                <span className=\"text-lg text-gray-900\">{userData.skills?.join(\", \") || \"No skills added\"}</span>\r\n              )}\r\n            </div>\r\n\r\n            {showPasswordFields && (\r\n              <>\r\n                <div className=\"flex justify-between\">\r\n                  <strong className=\"text-lg text-gray-600\">Current Password:</strong>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"currentPassword\"\r\n                    value={passwordData.currentPassword}\r\n                    onChange={handlePasswordChange}\r\n                    className=\"border p-2 rounded-md w-40\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <strong className=\"text-lg text-gray-600\">New Password:</strong>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"newPassword\"\r\n                    value={passwordData.newPassword}\r\n                    onChange={handlePasswordChange}\r\n                    className=\"border p-2 rounded-md w-40\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex justify-between\">\r\n                  <strong className=\"text-lg text-gray-600\">Confirm Password:</strong>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value={passwordData.confirmPassword}\r\n                    onChange={handlePasswordChange}\r\n                    className=\"border p-2 rounded-md w-40\"\r\n                  />\r\n                </div>\r\n              </>\r\n            )}\r\n\r\n            <div className=\"flex space-x-4 mt-6\">\r\n              {isEditing ? (\r\n                <>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setShowPasswordFields(!showPasswordFields)}\r\n                    className=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600\"\r\n                  >\r\n                    {showPasswordFields ? \"Cancel Password Change\" : \"Change Password\"}\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setIsEditing(true)}\r\n                  className=\"bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600\"\r\n                >\r\n                  Edit Profile\r\n                </button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"col-span-2 bg-white shadow-xl rounded-lg p-8\">\r\n          <h2 className=\"text-3xl font-semibold text-center mb-6 text-gray-800\">Saved Jobs</h2>\r\n          {bookmarkedJobs.length > 0 ? (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              {bookmarkedJobs.map((job) => (\r\n                <JobCard job={job} key={job.id} showDetails={true} />\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-center text-gray-500\">You haven't bookmarked any jobs yet.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappingslD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAAQC,SAAS,QAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,gBAAA,EAAAC,iBAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC;IAC/CoB,eAAe,EAAE,EAAE;IACnBC,WAAW,EAAE,EAAE;IACfC,eAAe,EAAE;EACnB,CAAC,CAAC;EACF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACyB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM2B,QAAQ,GAAGxB,WAAW,CAAC,CAAC;EAE9B,MAAMyB,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAI,CAACF,KAAK,EAAE,OAAO,IAAI;IAEvB,IAAI;MACF,MAAMG,YAAY,GAAG3B,SAAS,CAACwB,KAAK,CAAC;MACrC,OAAOG,YAAY,CAACC,GAAG,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,OAAO,IAAI;IACb;EACF,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACd,MAAMmC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,KAAK,GAAGT,YAAY,CAAC,CAAC;MAC5B,IAAI,CAACS,KAAK,EAAE;QACVV,QAAQ,CAAC,QAAQ,CAAC;QAClB;MACF;MAEA,IAAI;QACF,MAAM;UAAEW,IAAI,EAAEC;QAAK,CAAC,GAAG,MAAMrC,KAAK,CAACsC,GAAG,CAAC,mCAAmCH,KAAK,EAAE,CAAC;QAClF,MAAM;UAAEC,IAAI,EAAEf;QAAe,CAAC,GAAG,MAAMrB,KAAK,CAACsC,GAAG,CAAC,uCAAuCH,KAAK,EAAE,CAAC;QAChG,MAAM;UAAEC,IAAI,EAAEG;QAAQ,CAAC,GAAG,MAAMvC,KAAK,CAACsC,GAAG,CAAC,mCAAmC,CAAC;QAC9EzB,WAAW,CAACwB,IAAI,CAAC;QACjBf,iBAAiB,CAACkB,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOR,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDP,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC;IAEDS,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,MAAMgB,UAAU,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMR,KAAK,GAAGT,YAAY,CAAC,CAAC;MAC5B,IAAIH,kBAAkB,EAAE;QACtB,MAAM;UAAEL,eAAe;UAAEC,WAAW;UAAEC;QAAgB,CAAC,GAAGJ,YAAY;QACtE,IAAI,CAACE,eAAe,IAAI,CAACC,WAAW,IAAI,CAACC,eAAe,EAAE;UACxDwB,KAAK,CAAC,qCAAqC,CAAC;UAC5C;QACF;QAEA,IAAIzB,WAAW,KAAKC,eAAe,EAAE;UACnCwB,KAAK,CAAC,iDAAiD,CAAC;UACxD;QACF;QAEA,MAAM5C,KAAK,CAAC6C,IAAI,CAAC,0CAA0CV,KAAK,EAAE,EAAE;UAClE,GAAGvB,QAAQ;UACXM,eAAe;UACfC;QACF,CAAC,CAAC;QACFyB,KAAK,CAAC,gCAAgC,CAAC;MACzC,CAAC,MAAM;QACL,MAAM5C,KAAK,CAAC6C,IAAI,CAAC,0CAA0CV,KAAK,EAAE,EAAEvB,QAAQ,CAAC;MAC/E;MAEAG,YAAY,CAAC,KAAK,CAAC;MACnBS,qBAAqB,CAAC,KAAK,CAAC;MAC5BP,eAAe,CAAC;QAAEC,eAAe,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,eAAe,EAAE;MAAG,CAAC,CAAC;IAChF,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDY,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,MAAME,iBAAiB,GAAIJ,CAAC,IAAK;IAC/B7B,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAAC8B,CAAC,CAACK,MAAM,CAACC,IAAI,GAAGN,CAAC,CAACK,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,oBAAoB,GAAIR,CAAC,IAAK;IAClCzB,eAAe,CAAC;MAAE,GAAGD,YAAY;MAAE,CAAC0B,CAAC,CAACK,MAAM,CAACC,IAAI,GAAGN,CAAC,CAACK,MAAM,CAACE;IAAM,CAAC,CAAC;EACvE,CAAC;EAED,IAAI,CAACrC,QAAQ,EAAE;IACb,oBACEP,OAAA;MAAK8C,SAAS,EAAC,iEAAiE;MAAAC,QAAA,eAC9E/C,OAAA;QAAA+C,QAAA,EAAK;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAEV;EAEA,oBACEnD,OAAA;IAAK8C,SAAS,EAAC,qCAAqC;IAAAC,QAAA,eAClD/C,OAAA;MAAK8C,SAAS,EAAC,yDAAyD;MAAAC,QAAA,gBACtE/C,OAAA;QAAK8C,SAAS,EAAC,iFAAiF;QAAAC,QAAA,gBAC9F/C,OAAA;UAAI8C,SAAS,EAAC,uDAAuD;UAAAC,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvFnD,OAAA;UAAMoD,QAAQ,EAAEhB,UAAW;UAACU,SAAS,EAAC,WAAW;UAAAC,QAAA,GAC9CM,MAAM,CAACC,IAAI,CAAC/C,QAAQ,CAAC,CAACgD,GAAG,CAAEC,KAAK,IAC/B,CAAC,CAAC,gBAAgB,EAAE,QAAQ,EAAE,UAAU,CAAC,CAACC,QAAQ,CAACD,KAAK,CAAC,gBACvDxD,OAAA;YAAK8C,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnC/C,OAAA;cAAQ8C,SAAS,EAAC,kCAAkC;cAAAC,QAAA,GAAES,KAAK,EAAC,GAAC;YAAA;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACrE1C,SAAS,gBACRT,OAAA;cACE0D,IAAI,EAAC,MAAM;cACXf,IAAI,EAAEa,KAAM;cACZZ,KAAK,EAAErC,QAAQ,CAACiD,KAAK,CAAE;cACvBG,QAAQ,EAAElB,iBAAkB;cAC5BK,SAAS,EAAC;YAA4B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC,gBAEFnD,OAAA;cAAM8C,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAExC,QAAQ,CAACiD,KAAK;YAAC;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAChE;UAAA,GAZwCK,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAa3C,CAAC,GACJ,IACN,CAAC,eAEDnD,OAAA;YAAK8C,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnC/C,OAAA;cAAQ8C,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACzD1C,SAAS,gBACRT,OAAA;cACE0D,IAAI,EAAC,MAAM;cACXf,IAAI,EAAC,QAAQ;cACbC,KAAK,EAAE,EAAAvC,gBAAA,GAAAE,QAAQ,CAACqD,MAAM,cAAAvD,gBAAA,uBAAfA,gBAAA,CAAiBwD,IAAI,CAAC,IAAI,CAAC,KAAI,EAAG;cACzCF,QAAQ,EAAGtB,CAAC,IACV7B,WAAW,CAAC;gBAAE,GAAGD,QAAQ;gBAAEqD,MAAM,EAAEvB,CAAC,CAACK,MAAM,CAACE,KAAK,CAACkB,KAAK,CAAC,GAAG,CAAC,CAACP,GAAG,CAAEQ,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC;cAAE,CAAC,CACpF;cACDlB,SAAS,EAAC;YAA4B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC,gBAEFnD,OAAA;cAAM8C,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAE,EAAAzC,iBAAA,GAAAC,QAAQ,CAACqD,MAAM,cAAAtD,iBAAA,uBAAfA,iBAAA,CAAiBuD,IAAI,CAAC,IAAI,CAAC,KAAI;YAAiB;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CACjG;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,EAELjC,kBAAkB,iBACjBlB,OAAA,CAAAE,SAAA;YAAA6C,QAAA,gBACE/C,OAAA;cAAK8C,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACnC/C,OAAA;gBAAQ8C,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAC;cAAiB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACpEnD,OAAA;gBACE0D,IAAI,EAAC,UAAU;gBACff,IAAI,EAAC,iBAAiB;gBACtBC,KAAK,EAAEjC,YAAY,CAACE,eAAgB;gBACpC8C,QAAQ,EAAEd,oBAAqB;gBAC/BC,SAAS,EAAC;cAA4B;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACNnD,OAAA;cAAK8C,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACnC/C,OAAA;gBAAQ8C,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAC;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAChEnD,OAAA;gBACE0D,IAAI,EAAC,UAAU;gBACff,IAAI,EAAC,aAAa;gBAClBC,KAAK,EAAEjC,YAAY,CAACG,WAAY;gBAChC6C,QAAQ,EAAEd,oBAAqB;gBAC/BC,SAAS,EAAC;cAA4B;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACNnD,OAAA;cAAK8C,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACnC/C,OAAA;gBAAQ8C,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAC;cAAiB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACpEnD,OAAA;gBACE0D,IAAI,EAAC,UAAU;gBACff,IAAI,EAAC,iBAAiB;gBACtBC,KAAK,EAAEjC,YAAY,CAACI,eAAgB;gBACpC4C,QAAQ,EAAEd,oBAAqB;gBAC/BC,SAAS,EAAC;cAA4B;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA,eACN,CACH,eAEDnD,OAAA;YAAK8C,SAAS,EAAC,qBAAqB;YAAAC,QAAA,EACjCtC,SAAS,gBACRT,OAAA,CAAAE,SAAA;cAAA6C,QAAA,gBACE/C,OAAA;gBACE0D,IAAI,EAAC,QAAQ;gBACbZ,SAAS,EAAC,iEAAiE;gBAAAC,QAAA,EAC5E;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACTnD,OAAA;gBACE0D,IAAI,EAAC,QAAQ;gBACbO,OAAO,EAAEA,CAAA,KAAM9C,qBAAqB,CAAC,CAACD,kBAAkB,CAAE;gBAC1D4B,SAAS,EAAC,mEAAmE;gBAAAC,QAAA,EAE5E7B,kBAAkB,GAAG,wBAAwB,GAAG;cAAiB;gBAAA8B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5D,CAAC;YAAA,eACT,CAAC,gBAEHnD,OAAA;cACE0D,IAAI,EAAC,QAAQ;cACbO,OAAO,EAAEA,CAAA,KAAMvD,YAAY,CAAC,IAAI,CAAE;cAClCoC,SAAS,EAAC,+DAA+D;cAAAC,QAAA,EAC1E;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UACT;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAENnD,OAAA;QAAK8C,SAAS,EAAC,8CAA8C;QAAAC,QAAA,gBAC3D/C,OAAA;UAAI8C,SAAS,EAAC,uDAAuD;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACpFnC,cAAc,CAACkD,MAAM,GAAG,CAAC,gBACxBlE,OAAA;UAAK8C,SAAS,EAAC,uCAAuC;UAAAC,QAAA,EACnD/B,cAAc,CAACuC,GAAG,CAAEY,GAAG,iBACtBnE,OAAA,CAACH,OAAO;YAACsE,GAAG,EAAEA,GAAI;YAAcC,WAAW,EAAE;UAAK,GAA1BD,GAAG,CAACE,EAAE;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAsB,CACrD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,gBAENnD,OAAA;UAAG8C,SAAS,EAAC,2BAA2B;UAAAC,QAAA,EAAC;QAAoC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACjF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/C,EAAA,CA9NID,OAAO;EAAA,QAUMP,WAAW;AAAA;AAAA0E,EAAA,GAVxBnE,OAAO;AAgOb,eAAeA,OAAO;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}